%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/151s0-g8-n40-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Thu Jul 31 10:49:44 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/151s0-g8-n40-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jul 31 10:49:44 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
900 600 M
5960 0 V
stroke
0.500 UL
LTb
900 600 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 1149 M
5960 0 V
stroke
0.500 UL
LTb
900 1149 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 1149 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 1697 M
5960 0 V
stroke
0.500 UL
LTb
900 1697 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 1697 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 2246 M
5960 0 V
stroke
0.500 UL
LTb
900 2246 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 2246 M
[ [(Helvetica) 200.0 0.0 true true 0 (60)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 2794 M
5960 0 V
stroke
0.500 UL
LTb
900 2794 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 2794 M
[ [(Helvetica) 200.0 0.0 true true 0 (80)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 3343 M
5960 0 V
stroke
0.500 UL
LTb
900 3343 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 3343 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 3891 M
4577 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
900 3891 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 3891 M
[ [(Helvetica) 200.0 0.0 true true 0 (120)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 4440 M
5960 0 V
stroke
0.500 UL
LTb
900 4440 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 4440 M
[ [(Helvetica) 200.0 0.0 true true 0 (140)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 600 M
0 3840 V
stroke
0.500 UL
LTb
900 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 900 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
2092 600 M
0 3840 V
stroke
0.500 UL
LTb
2092 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 2092 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3284 600 M
0 3840 V
stroke
0.500 UL
LTb
3284 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3284 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4476 600 M
0 3840 V
stroke
0.500 UL
LTb
4476 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4476 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5668 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5668 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5668 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
900 4440 N
900 600 L
5960 0 V
0 3840 V
-5960 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3880 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3880 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
912 1011 M
24 1156 V
24 262 V
23 -732 V
24 0 V
24 0 V
1055 600 L
24 0 V
24 549 V
23 137 V
24 0 V
24 0 V
24 0 V
24 411 V
24 -548 V
24 137 V
23 411 V
24 0 V
24 0 V
1365 600 L
24 549 V
24 548 V
1436 600 L
24 686 V
24 -686 V
24 1097 V
24 -548 V
24 137 V
23 0 V
24 0 V
24 0 V
24 -137 V
24 0 V
24 0 V
23 0 V
24 -549 V
24 0 V
24 1097 V
24 0 V
1842 600 L
24 1097 V
23 -548 V
24 822 V
1937 600 L
24 1097 V
24 0 V
24 -411 V
23 411 V
24 0 V
24 -548 V
24 0 V
24 0 V
24 -549 V
23 0 V
24 686 V
24 -686 V
24 549 V
24 548 V
2295 600 L
23 686 V
24 -686 V
24 1097 V
24 -548 V
24 137 V
24 0 V
24 -686 V
23 549 V
24 -549 V
24 1371 V
24 -274 V
24 -411 V
24 0 V
23 228 V
24 -228 V
24 0 V
24 411 V
24 -411 V
24 0 V
23 -686 V
24 0 V
24 0 V
24 549 V
24 137 V
24 -137 V
23 548 V
24 0 V
24 -548 V
24 137 V
24 -137 V
24 137 V
24 -686 V
23 686 V
24 0 V
24 0 V
24 0 V
24 0 V
24 -686 V
23 549 V
24 -549 V
24 549 V
24 0 V
24 548 V
3344 600 L
23 0 V
24 686 V
24 0 V
24 0 V
24 -686 V
24 686 V
23 -137 V
24 548 V
24 0 V
24 -548 V
24 0 V
24 -549 V
24 1646 V
23 -549 V
24 -411 V
24 411 V
3749 600 L
24 1097 V
24 -411 V
23 411 V
24 0 V
24 0 V
24 -548 V
24 -549 V
24 549 V
23 -549 V
24 686 V
24 -137 V
24 548 V
24 -411 V
24 -686 V
23 686 V
24 -686 V
24 686 V
24 -137 V
24 137 V
24 411 V
24 -411 V
23 0 V
24 411 V
24 -548 V
24 -549 V
24 0 V
24 0 V
23 0 V
24 1097 V
4464 600 L
24 0 V
24 1097 V
4536 600 L
23 686 V
24 -686 V
24 1097 V
24 -548 V
24 548 V
24 0 V
4702 600 L
24 549 V
24 -549 V
24 1646 V
24 -960 V
24 0 V
24 0 V
23 -686 V
24 686 V
24 0 V
24 411 V
24 0 V
24 -411 V
23 -137 V
24 0 V
24 0 V
24 0 V
24 -549 V
24 549 V
23 137 V
24 411 V
5203 600 L
24 1097 V
24 -548 V
24 137 V
23 -137 V
24 137 V
24 411 V
24 -411 V
24 411 V
24 -411 V
24 -686 V
23 0 V
24 549 V
24 0 V
24 0 V
24 137 V
24 -686 V
23 549 V
24 548 V
24 -411 V
24 0 V
24 -686 V
24 1097 V
5751 600 L
24 686 V
24 411 V
5823 600 L
24 0 V
24 914 V
23 457 V
24 -685 V
24 411 V
24 -411 V
24 -686 V
24 686 V
24 0 V
23 0 V
24 411 V
24 -411 V
24 -137 V
24 0 V
24 0 V
23 0 V
24 137 V
24 -137 V
24 137 V
24 0 V
24 -686 V
23 686 V
24 -686 V
24 686 V
24 -686 V
24 686 V
24 411 V
23 -411 V
24 411 V
24 0 V
24 -548 V
24 -549 V
24 0 V
24 0 V
23 0 V
24 686 V
24 -686 V
24 0 V
24 1097 V
6777 600 L
23 1097 V
24 -548 V
24 548 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
912 874 M
936 600 L
24 305 V
23 1341 V
24 -549 V
24 -548 V
24 822 V
24 0 V
1103 600 L
23 686 V
24 0 V
24 0 V
24 685 V
1222 600 L
24 549 V
24 137 V
23 -686 V
24 0 V
24 0 V
24 549 V
24 0 V
24 0 V
23 822 V
24 0 V
24 0 V
24 -822 V
24 -549 V
24 686 V
23 0 V
24 0 V
24 0 V
24 -686 V
24 0 V
24 549 V
23 -549 V
24 0 V
24 686 V
24 -686 V
24 0 V
24 1371 V
24 -822 V
23 -549 V
24 457 V
24 229 V
24 -686 V
24 0 V
24 686 V
23 -686 V
24 0 V
24 0 V
24 0 V
24 549 V
24 822 V
23 0 V
24 0 V
24 0 V
24 -822 V
24 0 V
24 -549 V
23 1371 V
24 0 V
24 -822 V
24 0 V
24 822 V
24 -685 V
24 0 V
23 -137 V
24 137 V
24 -686 V
24 0 V
24 686 V
24 0 V
23 -229 V
24 229 V
24 685 V
2700 600 L
24 686 V
24 685 V
23 -685 V
24 0 V
24 0 V
24 -686 V
24 686 V
24 -686 V
23 0 V
24 549 V
24 -549 V
24 686 V
24 -686 V
24 686 V
24 0 V
23 685 V
24 0 V
24 -685 V
24 0 V
24 -686 V
24 686 V
23 -137 V
24 137 V
24 -686 V
24 549 V
24 -549 V
24 1371 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 -685 V
23 -137 V
24 -549 V
24 0 V
24 549 V
24 -549 V
24 686 V
24 -686 V
23 549 V
24 137 V
24 -686 V
24 1371 V
3773 600 L
24 686 V
23 -686 V
24 0 V
24 0 V
24 0 V
24 686 V
24 -686 V
23 686 V
24 0 V
24 -137 V
24 0 V
24 -549 V
24 686 V
23 0 V
24 685 V
24 0 V
24 -822 V
24 137 V
24 -686 V
24 686 V
23 685 V
4297 600 L
24 0 V
24 686 V
24 -686 V
24 686 V
23 0 V
24 -137 V
24 137 V
24 685 V
4512 600 L
24 549 V
23 137 V
24 0 V
24 -686 V
24 549 V
24 0 V
24 0 V
23 822 V
24 -822 V
24 137 V
24 -137 V
24 137 V
24 0 V
24 0 V
23 0 V
24 0 V
24 685 V
24 -822 V
24 -549 V
24 1371 V
5012 600 L
24 0 V
24 0 V
24 549 V
24 0 V
24 0 V
23 822 V
5179 600 L
24 1371 V
5227 600 L
24 549 V
24 137 V
23 -686 V
24 686 V
24 -137 V
24 137 V
24 -686 V
24 0 V
24 686 V
23 -686 V
24 549 V
24 -549 V
24 0 V
24 1371 V
24 -685 V
23 -137 V
24 -549 V
24 686 V
24 685 V
24 -685 V
24 -686 V
23 686 V
24 0 V
24 -137 V
24 137 V
24 0 V
24 -229 V
23 229 V
24 0 V
24 -686 V
24 686 V
24 0 V
24 0 V
24 685 V
23 0 V
24 -822 V
24 822 V
6133 600 L
24 549 V
24 -549 V
23 0 V
24 686 V
24 -137 V
24 822 V
24 -685 V
24 0 V
23 0 V
24 0 V
24 685 V
24 0 V
24 686 V
24 -1508 V
23 822 V
24 -822 V
24 0 V
24 -549 V
24 686 V
24 0 V
24 0 V
23 0 V
24 685 V
24 0 V
24 0 V
24 -822 V
24 0 V
23 0 V
24 -549 V
24 0 V
912 874 Pls
936 600 Pls
960 905 Pls
983 2246 Pls
1007 1697 Pls
1031 1149 Pls
1055 1971 Pls
1079 1971 Pls
1103 600 Pls
1126 1286 Pls
1150 1286 Pls
1174 1286 Pls
1198 1971 Pls
1222 600 Pls
1246 1149 Pls
1270 1286 Pls
1293 600 Pls
1317 600 Pls
1341 600 Pls
1365 1149 Pls
1389 1149 Pls
1413 1149 Pls
1436 1971 Pls
1460 1971 Pls
1484 1971 Pls
1508 1149 Pls
1532 600 Pls
1556 1286 Pls
1579 1286 Pls
1603 1286 Pls
1627 1286 Pls
1651 600 Pls
1675 600 Pls
1699 1149 Pls
1722 600 Pls
1746 600 Pls
1770 1286 Pls
1794 600 Pls
1818 600 Pls
1842 1971 Pls
1866 1149 Pls
1889 600 Pls
1913 1057 Pls
1937 1286 Pls
1961 600 Pls
1985 600 Pls
2009 1286 Pls
2032 600 Pls
2056 600 Pls
2080 600 Pls
2104 600 Pls
2128 1149 Pls
2152 1971 Pls
2175 1971 Pls
2199 1971 Pls
2223 1971 Pls
2247 1149 Pls
2271 1149 Pls
2295 600 Pls
2318 1971 Pls
2342 1971 Pls
2366 1149 Pls
2390 1149 Pls
2414 1971 Pls
2438 1286 Pls
2462 1286 Pls
2485 1149 Pls
2509 1286 Pls
2533 600 Pls
2557 600 Pls
2581 1286 Pls
2605 1286 Pls
2628 1057 Pls
2652 1286 Pls
2676 1971 Pls
2700 600 Pls
2724 1286 Pls
2748 1971 Pls
2771 1286 Pls
2795 1286 Pls
2819 1286 Pls
2843 600 Pls
2867 1286 Pls
2891 600 Pls
2914 600 Pls
2938 1149 Pls
2962 600 Pls
2986 1286 Pls
3010 600 Pls
3034 1286 Pls
3058 1286 Pls
3081 1971 Pls
3105 1971 Pls
3129 1286 Pls
3153 1286 Pls
3177 600 Pls
3201 1286 Pls
3224 1149 Pls
3248 1286 Pls
3272 600 Pls
3296 1149 Pls
3320 600 Pls
3344 1971 Pls
3367 1971 Pls
3391 1971 Pls
3415 1971 Pls
3439 1971 Pls
3463 1971 Pls
3487 1286 Pls
3510 1149 Pls
3534 600 Pls
3558 600 Pls
3582 1149 Pls
3606 600 Pls
3630 1286 Pls
3654 600 Pls
3677 1149 Pls
3701 1286 Pls
3725 600 Pls
3749 1971 Pls
3773 600 Pls
3797 1286 Pls
3820 600 Pls
3844 600 Pls
3868 600 Pls
3892 600 Pls
3916 1286 Pls
3940 600 Pls
3963 1286 Pls
3987 1286 Pls
4011 1149 Pls
4035 1149 Pls
4059 600 Pls
4083 1286 Pls
4106 1286 Pls
4130 1971 Pls
4154 1971 Pls
4178 1149 Pls
4202 1286 Pls
4226 600 Pls
4250 1286 Pls
4273 1971 Pls
4297 600 Pls
4321 600 Pls
4345 1286 Pls
4369 600 Pls
4393 1286 Pls
4416 1286 Pls
4440 1149 Pls
4464 1286 Pls
4488 1971 Pls
4512 600 Pls
4536 1149 Pls
4559 1286 Pls
4583 1286 Pls
4607 600 Pls
4631 1149 Pls
4655 1149 Pls
4679 1149 Pls
4702 1971 Pls
4726 1149 Pls
4750 1286 Pls
4774 1149 Pls
4798 1286 Pls
4822 1286 Pls
4846 1286 Pls
4869 1286 Pls
4893 1286 Pls
4917 1971 Pls
4941 1149 Pls
4965 600 Pls
4989 1971 Pls
5012 600 Pls
5036 600 Pls
5060 600 Pls
5084 1149 Pls
5108 1149 Pls
5132 1149 Pls
5155 1971 Pls
5179 600 Pls
5203 1971 Pls
5227 600 Pls
5251 1149 Pls
5275 1286 Pls
5298 600 Pls
5322 1286 Pls
5346 1149 Pls
5370 1286 Pls
5394 600 Pls
5418 600 Pls
5442 1286 Pls
5465 600 Pls
5489 1149 Pls
5513 600 Pls
5537 600 Pls
5561 1971 Pls
5585 1286 Pls
5608 1149 Pls
5632 600 Pls
5656 1286 Pls
5680 1971 Pls
5704 1286 Pls
5728 600 Pls
5751 1286 Pls
5775 1286 Pls
5799 1149 Pls
5823 1286 Pls
5847 1286 Pls
5871 1057 Pls
5894 1286 Pls
5918 1286 Pls
5942 600 Pls
5966 1286 Pls
5990 1286 Pls
6014 1286 Pls
6038 1971 Pls
6061 1971 Pls
6085 1149 Pls
6109 1971 Pls
6133 600 Pls
6157 1149 Pls
6181 600 Pls
6204 600 Pls
6228 1286 Pls
6252 1149 Pls
6276 1971 Pls
6300 1286 Pls
6324 1286 Pls
6347 1286 Pls
6371 1286 Pls
6395 1971 Pls
6419 1971 Pls
6443 2657 Pls
6467 1149 Pls
6490 1971 Pls
6514 1149 Pls
6538 1149 Pls
6562 600 Pls
6586 1286 Pls
6610 1286 Pls
6634 1286 Pls
6657 1286 Pls
6681 1971 Pls
6705 1971 Pls
6729 1971 Pls
6753 1149 Pls
6777 1149 Pls
6800 1149 Pls
6824 600 Pls
6848 600 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
912 1560 M
24 216 V
24 653 V
23 2011 V
24 -1097 V
24 -549 V
24 1235 V
24 0 V
24 -1783 V
23 1097 V
24 0 V
24 0 V
24 0 V
24 -1097 V
24 0 V
24 1097 V
23 -1097 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 1097 V
24 0 V
24 0 V
24 -1097 V
24 0 V
24 1097 V
23 0 V
24 0 V
24 686 V
24 -1783 V
24 0 V
24 0 V
23 0 V
24 0 V
24 1097 V
24 -1097 V
24 0 V
24 1097 V
24 -1097 V
23 0 V
24 -275 V
24 2058 V
24 -1783 V
24 548 V
24 1235 V
23 -1235 V
24 -548 V
24 548 V
24 -548 V
24 548 V
24 1235 V
23 -686 V
24 0 V
24 686 V
24 -1235 V
24 0 V
24 0 V
23 1235 V
24 0 V
24 -1783 V
24 0 V
24 1097 V
24 686 V
24 -686 V
23 -549 V
24 549 V
24 0 V
24 -1097 V
24 1097 V
24 686 V
23 -2515 V
24 1829 V
24 0 V
24 -1097 V
24 1097 V
24 -686 V
23 686 V
24 -686 V
24 686 V
24 -1097 V
24 1097 V
24 -1646 V
23 549 V
24 0 V
24 0 V
24 1097 V
24 -1097 V
24 1097 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 -1097 V
24 1097 V
24 -1097 V
24 0 V
24 0 V
24 1097 V
3367 3343 L
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 -1097 V
24 0 V
24 0 V
24 0 V
24 0 V
24 1097 V
24 -1097 V
23 0 V
24 1097 V
24 -1097 V
24 1097 V
24 -549 V
24 1235 V
23 -1783 V
24 0 V
24 548 V
24 -548 V
24 1097 V
24 -1097 V
23 1097 V
24 0 V
24 -1097 V
24 0 V
24 1097 V
24 686 V
23 0 V
24 0 V
24 -686 V
24 -1097 V
24 1097 V
24 -1097 V
24 1097 V
23 0 V
24 -1097 V
24 0 V
24 1097 V
24 0 V
24 0 V
23 0 V
24 -1097 V
24 1097 V
24 0 V
24 -1097 V
24 0 V
23 1097 V
24 0 V
24 -1097 V
24 0 V
24 0 V
24 0 V
23 1097 V
24 -1097 V
24 1097 V
24 -1097 V
24 1097 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 -1097 V
24 0 V
24 1097 V
23 -549 V
24 -548 V
24 0 V
24 0 V
24 0 V
24 548 V
23 1235 V
24 -1783 V
24 1097 V
24 -1097 V
24 0 V
24 1097 V
23 -549 V
24 1235 V
24 -1235 V
24 1235 V
24 -1783 V
24 1097 V
24 0 V
23 0 V
24 -1097 V
24 0 V
24 0 V
24 1097 V
24 0 V
23 -1097 V
24 548 V
24 549 V
24 0 V
24 686 V
24 -1235 V
23 1235 V
24 0 V
24 -1783 V
24 1097 V
24 0 V
5871 1514 L
23 2515 V
24 0 V
24 -1783 V
24 1783 V
24 -686 V
24 0 V
24 0 V
23 0 V
24 -1097 V
24 1097 V
24 -1097 V
24 0 V
24 548 V
23 -548 V
24 1097 V
24 -1097 V
24 1783 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 -1783 V
23 1097 V
24 -549 V
24 -548 V
24 0 V
24 1097 V
24 686 V
24 -686 V
23 0 V
24 0 V
24 0 V
24 0 V
24 -1097 V
24 0 V
23 0 V
24 0 V
24 0 V
912 1560 BoxF
936 1776 BoxF
960 2429 BoxF
983 4440 BoxF
1007 3343 BoxF
1031 2794 BoxF
1055 4029 BoxF
1079 4029 BoxF
1103 2246 BoxF
1126 3343 BoxF
1150 3343 BoxF
1174 3343 BoxF
1198 3343 BoxF
1222 2246 BoxF
1246 2246 BoxF
1270 3343 BoxF
1293 2246 BoxF
1317 2246 BoxF
1341 2246 BoxF
1365 2246 BoxF
1389 2246 BoxF
1413 2246 BoxF
1436 3343 BoxF
1460 3343 BoxF
1484 3343 BoxF
1508 2246 BoxF
1532 2246 BoxF
1556 3343 BoxF
1579 3343 BoxF
1603 3343 BoxF
1627 4029 BoxF
1651 2246 BoxF
1675 2246 BoxF
1699 2246 BoxF
1722 2246 BoxF
1746 2246 BoxF
1770 3343 BoxF
1794 2246 BoxF
1818 2246 BoxF
1842 3343 BoxF
1866 2246 BoxF
1889 2246 BoxF
1913 1971 BoxF
1937 4029 BoxF
1961 2246 BoxF
1985 2794 BoxF
2009 4029 BoxF
2032 2794 BoxF
2056 2246 BoxF
2080 2794 BoxF
2104 2246 BoxF
2128 2794 BoxF
2152 4029 BoxF
2175 3343 BoxF
2199 3343 BoxF
2223 4029 BoxF
2247 2794 BoxF
2271 2794 BoxF
2295 2794 BoxF
2318 4029 BoxF
2342 4029 BoxF
2366 2246 BoxF
2390 2246 BoxF
2414 3343 BoxF
2438 4029 BoxF
2462 3343 BoxF
2485 2794 BoxF
2509 3343 BoxF
2533 3343 BoxF
2557 2246 BoxF
2581 3343 BoxF
2605 4029 BoxF
2628 1514 BoxF
2652 3343 BoxF
2676 3343 BoxF
2700 2246 BoxF
2724 3343 BoxF
2748 2657 BoxF
2771 3343 BoxF
2795 2657 BoxF
2819 3343 BoxF
2843 2246 BoxF
2867 3343 BoxF
2891 1697 BoxF
2914 2246 BoxF
2938 2246 BoxF
2962 2246 BoxF
2986 3343 BoxF
3010 2246 BoxF
3034 3343 BoxF
3058 3343 BoxF
3081 3343 BoxF
3105 3343 BoxF
3129 3343 BoxF
3153 3343 BoxF
3177 3343 BoxF
3201 3343 BoxF
3224 2246 BoxF
3248 3343 BoxF
3272 2246 BoxF
3296 2246 BoxF
3320 2246 BoxF
3344 3343 BoxF
3367 3343 BoxF
3391 3343 BoxF
3415 3343 BoxF
3439 3343 BoxF
3463 3343 BoxF
3487 3343 BoxF
3510 2246 BoxF
3534 2246 BoxF
3558 2246 BoxF
3582 2246 BoxF
3606 2246 BoxF
3630 3343 BoxF
3654 2246 BoxF
3677 2246 BoxF
3701 3343 BoxF
3725 2246 BoxF
3749 3343 BoxF
3773 2794 BoxF
3797 4029 BoxF
3820 2246 BoxF
3844 2246 BoxF
3868 2794 BoxF
3892 2246 BoxF
3916 3343 BoxF
3940 2246 BoxF
3963 3343 BoxF
3987 3343 BoxF
4011 2246 BoxF
4035 2246 BoxF
4059 3343 BoxF
4083 4029 BoxF
4106 4029 BoxF
4130 4029 BoxF
4154 3343 BoxF
4178 2246 BoxF
4202 3343 BoxF
4226 2246 BoxF
4250 3343 BoxF
4273 3343 BoxF
4297 2246 BoxF
4321 2246 BoxF
4345 3343 BoxF
4369 3343 BoxF
4393 3343 BoxF
4416 3343 BoxF
4440 2246 BoxF
4464 3343 BoxF
4488 3343 BoxF
4512 2246 BoxF
4536 2246 BoxF
4559 3343 BoxF
4583 3343 BoxF
4607 2246 BoxF
4631 2246 BoxF
4655 2246 BoxF
4679 2246 BoxF
4702 3343 BoxF
4726 2246 BoxF
4750 3343 BoxF
4774 2246 BoxF
4798 3343 BoxF
4822 3343 BoxF
4846 3343 BoxF
4869 3343 BoxF
4893 3343 BoxF
4917 3343 BoxF
4941 2246 BoxF
4965 2246 BoxF
4989 3343 BoxF
5012 2794 BoxF
5036 2246 BoxF
5060 2246 BoxF
5084 2246 BoxF
5108 2246 BoxF
5132 2794 BoxF
5155 4029 BoxF
5179 2246 BoxF
5203 3343 BoxF
5227 2246 BoxF
5251 2246 BoxF
5275 3343 BoxF
5298 2794 BoxF
5322 4029 BoxF
5346 2794 BoxF
5370 4029 BoxF
5394 2246 BoxF
5418 3343 BoxF
5442 3343 BoxF
5465 3343 BoxF
5489 2246 BoxF
5513 2246 BoxF
5537 2246 BoxF
5561 3343 BoxF
5585 3343 BoxF
5608 2246 BoxF
5632 2794 BoxF
5656 3343 BoxF
5680 3343 BoxF
5704 4029 BoxF
5728 2794 BoxF
5751 4029 BoxF
5775 4029 BoxF
5799 2246 BoxF
5823 3343 BoxF
5847 3343 BoxF
5871 1514 BoxF
5894 4029 BoxF
5918 4029 BoxF
5942 2246 BoxF
5966 4029 BoxF
5990 3343 BoxF
6014 3343 BoxF
6038 3343 BoxF
6061 3343 BoxF
6085 2246 BoxF
6109 3343 BoxF
6133 2246 BoxF
6157 2246 BoxF
6181 2794 BoxF
6204 2246 BoxF
6228 3343 BoxF
6252 2246 BoxF
6276 4029 BoxF
6300 4029 BoxF
6324 4029 BoxF
6347 4029 BoxF
6371 4029 BoxF
6395 4029 BoxF
6419 4029 BoxF
6443 4029 BoxF
6467 2246 BoxF
6490 3343 BoxF
6514 2794 BoxF
6538 2246 BoxF
6562 2246 BoxF
6586 3343 BoxF
6610 4029 BoxF
6634 3343 BoxF
6657 3343 BoxF
6681 3343 BoxF
6705 3343 BoxF
6729 3343 BoxF
6753 2246 BoxF
6777 2246 BoxF
6800 2246 BoxF
6824 2246 BoxF
6848 2246 BoxF
6348 3877 BoxF
0.500 UL
LTb
900 4440 N
900 600 L
5960 0 V
0 3840 V
-5960 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
