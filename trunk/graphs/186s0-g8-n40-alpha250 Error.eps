%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/186s0-g8-n40-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Thu Jul 31 10:47:46 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/186s0-g8-n40-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jul 31 10:47:46 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
1020 600 M
5840 0 V
stroke
0.500 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 1210 M
5840 0 V
stroke
0.500 UL
LTb
1020 1210 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 1210 M
[ [(Helvetica) 200.0 0.0 true true 0 (1000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 1819 M
5840 0 V
stroke
0.500 UL
LTb
1020 1819 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 1819 M
[ [(Helvetica) 200.0 0.0 true true 0 (2000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 2429 M
5840 0 V
stroke
0.500 UL
LTb
1020 2429 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 2429 M
[ [(Helvetica) 200.0 0.0 true true 0 (3000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 3038 M
5840 0 V
stroke
0.500 UL
LTb
1020 3038 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 3038 M
[ [(Helvetica) 200.0 0.0 true true 0 (4000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 3648 M
5840 0 V
stroke
0.500 UL
LTb
1020 3648 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 3648 M
[ [(Helvetica) 200.0 0.0 true true 0 (5000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 4257 M
4457 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
1020 4257 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 4257 M
[ [(Helvetica) 200.0 0.0 true true 0 (6000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 600 M
0 3840 V
stroke
0.500 UL
LTb
1020 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 1020 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
2188 600 M
0 3840 V
stroke
0.500 UL
LTb
2188 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 2188 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3356 600 M
0 3840 V
stroke
0.500 UL
LTb
3356 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3356 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4524 600 M
0 3840 V
stroke
0.500 UL
LTb
4524 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4524 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5692 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5692 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5692 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1020 4440 N
0 -3840 V
5840 0 V
0 3840 V
-5840 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3940 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3940 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
1032 635 M
23 22 V
23 82 V
24 120 V
23 325 V
23 483 V
24 599 V
23 213 V
24 644 V
23 269 V
23 -262 V
24 518 V
23 0 V
23 0 V
24 0 V
23 0 V
23 -518 V
24 0 V
23 0 V
24 0 V
23 0 V
23 518 V
24 -518 V
23 0 V
23 1295 V
24 -777 V
23 0 V
23 0 V
24 -518 V
23 0 V
23 518 V
24 -518 V
23 0 V
24 0 V
23 0 V
23 0 V
24 518 V
23 0 V
23 0 V
24 0 V
23 0 V
23 -518 V
24 -371 V
23 0 V
24 0 V
23 371 V
23 0 V
24 518 V
23 0 V
23 777 V
24 0 V
23 -1295 V
23 1295 V
24 0 V
23 0 V
23 -777 V
24 -518 V
23 0 V
24 0 V
23 -371 V
23 0 V
24 -277 V
23 0 V
23 648 V
24 0 V
23 0 V
23 0 V
24 518 V
23 0 V
24 777 V
23 -777 V
23 0 V
24 0 V
23 0 V
23 -518 V
24 0 V
23 0 V
23 0 V
24 518 V
23 0 V
23 0 V
24 0 V
23 0 V
24 -518 V
23 518 V
23 0 V
24 0 V
23 -518 V
23 0 V
24 518 V
23 -518 V
23 518 V
24 0 V
23 -518 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 518 V
24 777 V
23 -1295 V
23 518 V
3438 3648 L
23 -518 V
23 -371 V
24 0 V
23 0 V
24 371 V
23 518 V
23 0 V
24 0 V
23 0 V
23 -518 V
24 1295 V
23 -777 V
23 0 V
24 0 V
23 0 V
24 -518 V
23 518 V
23 -518 V
24 518 V
23 0 V
23 -518 V
24 518 V
23 777 V
23 -1295 V
24 518 V
23 -518 V
23 518 V
24 -889 V
23 889 V
24 0 V
23 0 V
23 0 V
24 0 V
23 -518 V
23 1295 V
24 -777 V
23 -518 V
23 1295 V
24 -777 V
23 0 V
24 0 V
23 -518 V
23 518 V
24 -518 V
23 0 V
23 518 V
24 0 V
23 0 V
23 0 V
24 -518 V
23 0 V
23 0 V
24 0 V
23 518 V
24 0 V
23 -518 V
23 0 V
24 0 V
23 518 V
23 -518 V
24 0 V
23 0 V
23 0 V
24 0 V
23 518 V
24 -518 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
5891 3130 L
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
1032 606 M
23 21 V
23 5 V
24 2 V
23 7 V
23 -18 V
24 -13 V
23 -10 V
24 12 V
23 -12 V
23 10 V
24 2 V
23 0 V
23 0 V
24 0 V
23 -12 V
23 0 V
24 10 V
23 -10 V
24 10 V
23 0 V
23 -10 V
24 10 V
23 10 V
23 -20 V
24 12 V
23 -12 V
23 0 V
24 20 V
23 -10 V
23 -10 V
24 10 V
23 0 V
24 0 V
23 0 V
23 0 V
24 2 V
23 -12 V
23 0 V
24 12 V
23 0 V
23 -12 V
24 17 V
23 0 V
24 0 V
23 -7 V
23 -10 V
24 12 V
23 -12 V
23 15 V
24 -15 V
23 10 V
23 5 V
24 0 V
23 0 V
23 -15 V
24 10 V
23 0 V
24 0 V
23 7 V
23 9 V
24 4 V
23 0 V
23 -20 V
24 0 V
23 0 V
23 0 V
24 -10 V
23 0 V
24 15 V
23 -15 V
23 12 V
24 -12 V
23 0 V
23 10 V
24 10 V
23 -10 V
23 -10 V
24 0 V
23 0 V
23 12 V
24 -12 V
23 0 V
24 20 V
23 -20 V
23 12 V
24 -12 V
23 10 V
23 10 V
24 -20 V
23 10 V
23 -10 V
24 0 V
23 10 V
24 0 V
23 0 V
23 0 V
24 -10 V
23 10 V
23 -10 V
24 15 V
23 -5 V
23 2 V
3438 612 L
23 -2 V
23 7 V
24 0 V
23 0 V
24 -7 V
23 -10 V
23 12 V
24 -12 V
23 0 V
23 10 V
24 36 V
23 -46 V
23 0 V
24 0 V
23 12 V
24 -2 V
23 -10 V
23 10 V
24 -10 V
23 0 V
23 10 V
24 -10 V
23 0 V
23 0 V
24 12 V
23 -2 V
23 -10 V
24 9 V
23 -9 V
24 0 V
23 0 V
23 0 V
24 0 V
23 10 V
23 -10 V
24 0 V
23 0 V
23 0 V
24 12 V
23 -12 V
24 0 V
23 10 V
23 2 V
24 -2 V
23 0 V
23 -10 V
24 0 V
23 0 V
23 0 V
24 10 V
23 -10 V
23 10 V
24 0 V
23 -10 V
24 0 V
23 10 V
23 0 V
24 10 V
23 -20 V
23 10 V
24 0 V
23 -10 V
23 10 V
24 0 V
23 -10 V
24 20 V
23 -10 V
23 0 V
24 0 V
23 0 V
23 -10 V
24 0 V
23 10 V
23 0 V
24 0 V
23 -10 V
23 10 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 -10 V
24 10 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 -10 V
24 10 V
23 -10 V
23 10 V
24 0 V
23 0 V
23 0 V
24 0 V
23 10 V
5891 610 L
23 0 V
23 10 V
24 0 V
23 0 V
23 -10 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 -10 V
24 20 V
23 0 V
23 -10 V
24 0 V
23 10 V
23 0 V
24 -10 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 -10 V
23 0 V
23 0 V
1032 606 Pls
1055 627 Pls
1078 632 Pls
1102 634 Pls
1125 641 Pls
1148 623 Pls
1172 610 Pls
1195 600 Pls
1219 612 Pls
1242 600 Pls
1265 610 Pls
1289 612 Pls
1312 612 Pls
1335 612 Pls
1359 612 Pls
1382 600 Pls
1405 600 Pls
1429 610 Pls
1452 600 Pls
1476 610 Pls
1499 610 Pls
1522 600 Pls
1546 610 Pls
1569 620 Pls
1592 600 Pls
1616 612 Pls
1639 600 Pls
1662 600 Pls
1686 620 Pls
1709 610 Pls
1732 600 Pls
1756 610 Pls
1779 610 Pls
1803 610 Pls
1826 610 Pls
1849 610 Pls
1873 612 Pls
1896 600 Pls
1919 600 Pls
1943 612 Pls
1966 612 Pls
1989 600 Pls
2013 617 Pls
2036 617 Pls
2060 617 Pls
2083 610 Pls
2106 600 Pls
2130 612 Pls
2153 600 Pls
2176 615 Pls
2200 600 Pls
2223 610 Pls
2246 615 Pls
2270 615 Pls
2293 615 Pls
2316 600 Pls
2340 610 Pls
2363 610 Pls
2387 610 Pls
2410 617 Pls
2433 626 Pls
2457 630 Pls
2480 630 Pls
2503 610 Pls
2527 610 Pls
2550 610 Pls
2573 610 Pls
2597 600 Pls
2620 600 Pls
2644 615 Pls
2667 600 Pls
2690 612 Pls
2714 600 Pls
2737 600 Pls
2760 610 Pls
2784 620 Pls
2807 610 Pls
2830 600 Pls
2854 600 Pls
2877 600 Pls
2900 612 Pls
2924 600 Pls
2947 600 Pls
2971 620 Pls
2994 600 Pls
3017 612 Pls
3041 600 Pls
3064 610 Pls
3087 620 Pls
3111 600 Pls
3134 610 Pls
3157 600 Pls
3181 600 Pls
3204 610 Pls
3228 610 Pls
3251 610 Pls
3274 610 Pls
3298 600 Pls
3321 610 Pls
3344 600 Pls
3368 615 Pls
3391 610 Pls
3414 612 Pls
3438 612 Pls
3461 610 Pls
3484 617 Pls
3508 617 Pls
3531 617 Pls
3555 610 Pls
3578 600 Pls
3601 612 Pls
3625 600 Pls
3648 600 Pls
3671 610 Pls
3695 646 Pls
3718 600 Pls
3741 600 Pls
3765 600 Pls
3788 612 Pls
3812 610 Pls
3835 600 Pls
3858 610 Pls
3882 600 Pls
3905 600 Pls
3928 610 Pls
3952 600 Pls
3975 600 Pls
3998 600 Pls
4022 612 Pls
4045 610 Pls
4068 600 Pls
4092 609 Pls
4115 600 Pls
4139 600 Pls
4162 600 Pls
4185 600 Pls
4209 600 Pls
4232 610 Pls
4255 600 Pls
4279 600 Pls
4302 600 Pls
4325 600 Pls
4349 612 Pls
4372 600 Pls
4396 600 Pls
4419 610 Pls
4442 612 Pls
4466 610 Pls
4489 610 Pls
4512 600 Pls
4536 600 Pls
4559 600 Pls
4582 600 Pls
4606 610 Pls
4629 600 Pls
4652 610 Pls
4676 610 Pls
4699 600 Pls
4723 600 Pls
4746 610 Pls
4769 610 Pls
4793 620 Pls
4816 600 Pls
4839 610 Pls
4863 610 Pls
4886 600 Pls
4909 610 Pls
4933 610 Pls
4956 600 Pls
4980 620 Pls
5003 610 Pls
5026 610 Pls
5050 610 Pls
5073 610 Pls
5096 600 Pls
5120 600 Pls
5143 610 Pls
5166 610 Pls
5190 610 Pls
5213 600 Pls
5236 610 Pls
5260 610 Pls
5283 610 Pls
5307 610 Pls
5330 610 Pls
5353 610 Pls
5377 610 Pls
5400 610 Pls
5423 600 Pls
5447 610 Pls
5470 610 Pls
5493 610 Pls
5517 610 Pls
5540 610 Pls
5564 610 Pls
5587 610 Pls
5610 610 Pls
5634 610 Pls
5657 610 Pls
5680 600 Pls
5704 610 Pls
5727 600 Pls
5750 610 Pls
5774 610 Pls
5797 610 Pls
5820 610 Pls
5844 610 Pls
5867 620 Pls
5891 610 Pls
5914 610 Pls
5937 620 Pls
5961 620 Pls
5984 620 Pls
6007 610 Pls
6031 610 Pls
6054 610 Pls
6077 610 Pls
6101 610 Pls
6124 610 Pls
6148 610 Pls
6171 610 Pls
6194 610 Pls
6218 610 Pls
6241 610 Pls
6264 600 Pls
6288 620 Pls
6311 620 Pls
6334 610 Pls
6358 610 Pls
6381 620 Pls
6404 620 Pls
6428 610 Pls
6451 610 Pls
6475 610 Pls
6498 610 Pls
6521 610 Pls
6545 610 Pls
6568 610 Pls
6591 610 Pls
6615 610 Pls
6638 610 Pls
6661 610 Pls
6685 610 Pls
6708 610 Pls
6732 610 Pls
6755 610 Pls
6778 610 Pls
6802 600 Pls
6825 600 Pls
6848 600 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
1032 651 M
23 -45 V
23 4 V
24 2 V
23 -7 V
23 3 V
24 -8 V
23 0 V
24 12 V
23 -12 V
23 10 V
24 2 V
23 0 V
23 0 V
24 -12 V
23 12 V
23 -2 V
24 -10 V
23 0 V
24 0 V
23 10 V
23 2 V
24 -12 V
23 10 V
23 36 V
24 -34 V
23 0 V
23 -12 V
24 0 V
23 10 V
23 2 V
24 -12 V
23 0 V
24 10 V
23 -10 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 17 V
23 0 V
24 -8 V
23 -9 V
23 0 V
24 12 V
23 12 V
23 22 V
24 -16 V
23 -30 V
23 30 V
24 0 V
23 0 V
23 -18 V
24 -12 V
23 10 V
24 0 V
23 -10 V
23 17 V
24 6 V
23 0 V
23 -13 V
24 0 V
23 0 V
23 0 V
24 2 V
23 0 V
24 18 V
23 -30 V
23 0 V
24 0 V
23 0 V
23 10 V
24 -10 V
23 0 V
23 10 V
24 2 V
23 0 V
23 0 V
24 -12 V
23 0 V
24 10 V
23 -10 V
23 0 V
24 12 V
23 -2 V
23 -10 V
24 24 V
23 -24 V
23 12 V
24 12 V
23 -24 V
24 10 V
23 0 V
23 0 V
24 -10 V
23 10 V
23 2 V
24 3 V
23 -5 V
23 -10 V
3438 612 L
23 -2 V
23 -1 V
24 0 V
23 0 V
24 1 V
23 -10 V
23 12 V
24 -12 V
23 0 V
23 0 V
24 30 V
23 -18 V
23 0 V
24 0 V
23 0 V
24 -12 V
23 0 V
23 10 V
24 2 V
23 0 V
23 -2 V
24 -10 V
23 15 V
23 -15 V
24 12 V
23 -2 V
23 2 V
24 -3 V
23 3 V
24 -12 V
23 12 V
23 0 V
24 0 V
23 -2 V
23 20 V
24 -18 V
23 -12 V
23 30 V
24 -30 V
23 12 V
24 0 V
23 -12 V
23 0 V
24 10 V
23 -10 V
23 0 V
24 0 V
23 12 V
23 0 V
24 -12 V
23 0 V
23 10 V
24 0 V
23 -10 V
24 12 V
23 -12 V
23 0 V
24 0 V
23 12 V
23 -12 V
24 10 V
23 -10 V
23 0 V
24 0 V
23 24 V
24 -24 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 10 V
24 0 V
23 -10 V
24 10 V
23 -10 V
23 0 V
24 0 V
23 0 V
23 0 V
24 10 V
23 0 V
23 -10 V
24 10 V
23 -10 V
24 10 V
23 0 V
23 0 V
24 0 V
23 -10 V
23 10 V
24 -10 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
5891 600 L
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 10 V
24 -10 V
23 0 V
24 10 V
23 -10 V
23 10 V
24 0 V
23 -10 V
23 0 V
24 0 V
23 0 V
23 10 V
24 -10 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 10 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 -10 V
23 10 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 -10 V
23 0 V
1032 651 BoxF
1055 606 BoxF
1078 610 BoxF
1102 612 BoxF
1125 605 BoxF
1148 608 BoxF
1172 600 BoxF
1195 600 BoxF
1219 612 BoxF
1242 600 BoxF
1265 610 BoxF
1289 612 BoxF
1312 612 BoxF
1335 612 BoxF
1359 600 BoxF
1382 612 BoxF
1405 610 BoxF
1429 600 BoxF
1452 600 BoxF
1476 600 BoxF
1499 610 BoxF
1522 612 BoxF
1546 600 BoxF
1569 610 BoxF
1592 646 BoxF
1616 612 BoxF
1639 612 BoxF
1662 600 BoxF
1686 600 BoxF
1709 610 BoxF
1732 612 BoxF
1756 600 BoxF
1779 600 BoxF
1803 610 BoxF
1826 600 BoxF
1849 600 BoxF
1873 600 BoxF
1896 600 BoxF
1919 600 BoxF
1943 600 BoxF
1966 600 BoxF
1989 600 BoxF
2013 617 BoxF
2036 617 BoxF
2060 609 BoxF
2083 600 BoxF
2106 600 BoxF
2130 612 BoxF
2153 624 BoxF
2176 646 BoxF
2200 630 BoxF
2223 600 BoxF
2246 630 BoxF
2270 630 BoxF
2293 630 BoxF
2316 612 BoxF
2340 600 BoxF
2363 610 BoxF
2387 610 BoxF
2410 600 BoxF
2433 617 BoxF
2457 623 BoxF
2480 623 BoxF
2503 610 BoxF
2527 610 BoxF
2550 610 BoxF
2573 610 BoxF
2597 612 BoxF
2620 612 BoxF
2644 630 BoxF
2667 600 BoxF
2690 600 BoxF
2714 600 BoxF
2737 600 BoxF
2760 610 BoxF
2784 600 BoxF
2807 600 BoxF
2830 610 BoxF
2854 612 BoxF
2877 612 BoxF
2900 612 BoxF
2924 600 BoxF
2947 600 BoxF
2971 610 BoxF
2994 600 BoxF
3017 600 BoxF
3041 612 BoxF
3064 610 BoxF
3087 600 BoxF
3111 624 BoxF
3134 600 BoxF
3157 612 BoxF
3181 624 BoxF
3204 600 BoxF
3228 610 BoxF
3251 610 BoxF
3274 610 BoxF
3298 600 BoxF
3321 610 BoxF
3344 612 BoxF
3368 615 BoxF
3391 610 BoxF
3414 600 BoxF
3438 612 BoxF
3461 610 BoxF
3484 609 BoxF
3508 609 BoxF
3531 609 BoxF
3555 610 BoxF
3578 600 BoxF
3601 612 BoxF
3625 600 BoxF
3648 600 BoxF
3671 600 BoxF
3695 630 BoxF
3718 612 BoxF
3741 612 BoxF
3765 612 BoxF
3788 612 BoxF
3812 600 BoxF
3835 600 BoxF
3858 610 BoxF
3882 612 BoxF
3905 612 BoxF
3928 610 BoxF
3952 600 BoxF
3975 615 BoxF
3998 600 BoxF
4022 612 BoxF
4045 610 BoxF
4068 612 BoxF
4092 609 BoxF
4115 612 BoxF
4139 600 BoxF
4162 612 BoxF
4185 612 BoxF
4209 612 BoxF
4232 610 BoxF
4255 630 BoxF
4279 612 BoxF
4302 600 BoxF
4325 630 BoxF
4349 600 BoxF
4372 612 BoxF
4396 612 BoxF
4419 600 BoxF
4442 600 BoxF
4466 610 BoxF
4489 600 BoxF
4512 600 BoxF
4536 600 BoxF
4559 612 BoxF
4582 612 BoxF
4606 600 BoxF
4629 600 BoxF
4652 610 BoxF
4676 610 BoxF
4699 600 BoxF
4723 612 BoxF
4746 600 BoxF
4769 600 BoxF
4793 600 BoxF
4816 612 BoxF
4839 600 BoxF
4863 610 BoxF
4886 600 BoxF
4909 600 BoxF
4933 600 BoxF
4956 624 BoxF
4980 600 BoxF
5003 600 BoxF
5026 600 BoxF
5050 600 BoxF
5073 600 BoxF
5096 600 BoxF
5120 600 BoxF
5143 600 BoxF
5166 600 BoxF
5190 600 BoxF
5213 600 BoxF
5236 610 BoxF
5260 610 BoxF
5283 600 BoxF
5307 610 BoxF
5330 600 BoxF
5353 600 BoxF
5377 600 BoxF
5400 600 BoxF
5423 600 BoxF
5447 610 BoxF
5470 610 BoxF
5493 600 BoxF
5517 610 BoxF
5540 600 BoxF
5564 610 BoxF
5587 610 BoxF
5610 610 BoxF
5634 610 BoxF
5657 600 BoxF
5680 610 BoxF
5704 600 BoxF
5727 600 BoxF
5750 600 BoxF
5774 600 BoxF
5797 600 BoxF
5820 600 BoxF
5844 600 BoxF
5867 600 BoxF
5891 600 BoxF
5914 600 BoxF
5937 600 BoxF
5961 600 BoxF
5984 600 BoxF
6007 600 BoxF
6031 600 BoxF
6054 600 BoxF
6077 610 BoxF
6101 600 BoxF
6124 600 BoxF
6148 610 BoxF
6171 600 BoxF
6194 610 BoxF
6218 610 BoxF
6241 600 BoxF
6264 600 BoxF
6288 600 BoxF
6311 600 BoxF
6334 610 BoxF
6358 600 BoxF
6381 600 BoxF
6404 600 BoxF
6428 600 BoxF
6451 600 BoxF
6475 600 BoxF
6498 610 BoxF
6521 610 BoxF
6545 610 BoxF
6568 610 BoxF
6591 610 BoxF
6615 610 BoxF
6638 600 BoxF
6661 610 BoxF
6685 610 BoxF
6708 610 BoxF
6732 610 BoxF
6755 610 BoxF
6778 610 BoxF
6802 610 BoxF
6825 600 BoxF
6848 600 BoxF
6348 3877 BoxF
0.500 UL
LTb
1020 4440 N
0 -3840 V
5840 0 V
0 3840 V
-5840 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
