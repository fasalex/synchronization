%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/92s0-g8-n10-alpha250.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Mon Jul 21 15:01:00 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/92s0-g8-n10-alpha250.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jul 21 15:01:00 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
780 600 M
6080 0 V
stroke
0.500 UL
LTb
780 600 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1298 M
6080 0 V
stroke
0.500 UL
LTb
780 1298 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1298 M
[ [(Helvetica) 200.0 0.0 true true 0 (4)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1996 M
6080 0 V
stroke
0.500 UL
LTb
780 1996 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1996 M
[ [(Helvetica) 200.0 0.0 true true 0 (6)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2695 M
6080 0 V
stroke
0.500 UL
LTb
780 2695 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2695 M
[ [(Helvetica) 200.0 0.0 true true 0 (8)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3393 M
6080 0 V
stroke
0.500 UL
LTb
780 3393 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3393 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 4091 M
2417 0 V
3543 0 R
120 0 V
stroke
0.500 UL
LTb
780 4091 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 4091 M
[ [(Helvetica) 200.0 0.0 true true 0 (12)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 600 M
0 3840 V
stroke
0.500 UL
LTb
780 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 780 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
1996 600 M
0 3840 V
stroke
0.500 UL
LTb
1996 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 1996 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3212 600 M
0 2977 V
0 800 R
0 63 V
stroke
0.500 UL
LTb
3212 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3212 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4428 600 M
0 2977 V
0 800 R
0 63 V
stroke
0.500 UL
LTb
4428 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4428 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5644 600 M
0 2977 V
0 800 R
0 63 V
stroke
0.500 UL
LTb
5644 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5644 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Synchronization error\(clock cycles\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3820 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3820 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Synchronization error for 10 nodes moving at 0)]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KALMAN FILTER)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
792 1647 M
853 949 L
61 0 V
61 0 V
60 0 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 0 V
61 0 V
61 0 V
61 0 V
61 0 V
60 349 V
61 0 V
61 -349 V
61 0 V
61 0 V
60 0 V
61 0 V
61 0 V
61 0 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 0 V
61 0 V
60 0 V
61 0 V
61 0 V
61 0 V
61 0 V
60 0 V
61 0 V
61 -349 V
61 0 V
61 349 V
60 0 V
61 0 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 0 V
61 0 V
61 -349 V
61 0 V
60 349 V
61 -349 V
61 0 V
61 349 V
61 0 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 349 V
60 -349 V
61 0 V
61 0 V
61 0 V
61 0 V
60 0 V
61 0 V
61 0 V
61 0 V
61 -349 V
60 349 V
61 -349 V
61 349 V
61 0 V
61 0 V
60 0 V
61 0 V
61 349 V
61 -349 V
61 0 V
60 0 V
61 0 V
61 0 V
61 0 V
61 349 V
60 -349 V
61 0 V
61 0 V
61 0 V
61 0 V
60 0 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 0 V
61 349 V
61 0 V
61 0 V
60 0 V
1.000 UP
stroke
LT1
1.00 0.00 0.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (MEDIAN)]
] -66.7 MRshow
LT1
1.00 0.00 0.00 C 6077 4077 M
543 0 V
792 4091 M
61 0 V
61 0 V
61 0 V
60 -349 V
61 349 V
61 -349 V
61 349 V
61 -349 V
60 349 V
61 0 V
61 0 V
61 -349 V
61 349 V
60 -349 V
61 349 V
61 -349 V
61 349 V
61 0 V
60 0 V
61 -349 V
61 349 V
61 -349 V
61 349 V
60 -349 V
61 349 V
61 0 V
61 0 V
61 -349 V
60 349 V
61 -349 V
61 349 V
61 -349 V
61 349 V
60 0 V
61 0 V
61 -349 V
61 349 V
61 -349 V
60 349 V
61 -349 V
61 349 V
61 0 V
61 0 V
60 -349 V
61 349 V
61 -349 V
61 349 V
61 -349 V
60 349 V
61 0 V
61 0 V
61 -349 V
61 349 V
60 -349 V
61 349 V
61 -349 V
61 349 V
61 0 V
60 0 V
61 -349 V
61 349 V
61 -349 V
61 349 V
60 -349 V
61 349 V
61 0 V
61 0 V
61 -349 V
60 349 V
61 -349 V
61 349 V
61 -349 V
61 349 V
60 0 V
61 0 V
61 -349 V
61 349 V
61 -349 V
60 349 V
61 -349 V
61 349 V
61 0 V
61 0 V
60 -349 V
61 349 V
61 -349 V
61 349 V
61 -349 V
60 349 V
61 0 V
61 0 V
61 -349 V
61 349 V
60 -349 V
61 349 V
61 -349 V
61 349 V
61 0 V
60 0 V
792 4091 TriUF
853 4091 TriUF
914 4091 TriUF
975 4091 TriUF
1035 3742 TriUF
1096 4091 TriUF
1157 3742 TriUF
1218 4091 TriUF
1279 3742 TriUF
1339 4091 TriUF
1400 4091 TriUF
1461 4091 TriUF
1522 3742 TriUF
1583 4091 TriUF
1643 3742 TriUF
1704 4091 TriUF
1765 3742 TriUF
1826 4091 TriUF
1887 4091 TriUF
1947 4091 TriUF
2008 3742 TriUF
2069 4091 TriUF
2130 3742 TriUF
2191 4091 TriUF
2251 3742 TriUF
2312 4091 TriUF
2373 4091 TriUF
2434 4091 TriUF
2495 3742 TriUF
2555 4091 TriUF
2616 3742 TriUF
2677 4091 TriUF
2738 3742 TriUF
2799 4091 TriUF
2859 4091 TriUF
2920 4091 TriUF
2981 3742 TriUF
3042 4091 TriUF
3103 3742 TriUF
3163 4091 TriUF
3224 3742 TriUF
3285 4091 TriUF
3346 4091 TriUF
3407 4091 TriUF
3467 3742 TriUF
3528 4091 TriUF
3589 3742 TriUF
3650 4091 TriUF
3711 3742 TriUF
3771 4091 TriUF
3832 4091 TriUF
3893 4091 TriUF
3954 3742 TriUF
4015 4091 TriUF
4075 3742 TriUF
4136 4091 TriUF
4197 3742 TriUF
4258 4091 TriUF
4319 4091 TriUF
4379 4091 TriUF
4440 3742 TriUF
4501 4091 TriUF
4562 3742 TriUF
4623 4091 TriUF
4683 3742 TriUF
4744 4091 TriUF
4805 4091 TriUF
4866 4091 TriUF
4927 3742 TriUF
4987 4091 TriUF
5048 3742 TriUF
5109 4091 TriUF
5170 3742 TriUF
5231 4091 TriUF
5291 4091 TriUF
5352 4091 TriUF
5413 3742 TriUF
5474 4091 TriUF
5535 3742 TriUF
5595 4091 TriUF
5656 3742 TriUF
5717 4091 TriUF
5778 4091 TriUF
5839 4091 TriUF
5899 3742 TriUF
5960 4091 TriUF
6021 3742 TriUF
6082 4091 TriUF
6143 3742 TriUF
6203 4091 TriUF
6264 4091 TriUF
6325 4091 TriUF
6386 3742 TriUF
6447 4091 TriUF
6507 3742 TriUF
6568 4091 TriUF
6629 3742 TriUF
6690 4091 TriUF
6751 4091 TriUF
6811 4091 TriUF
6348 4077 TriUF
1.000 UP
3.000 UL
LT2
1.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (WEIGHTED MEASURMENTS)]
] -66.7 MRshow
LT2
1.00 0.00 1.00 C 6077 3877 M
543 0 V
792 4091 M
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 698 V
61 -349 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 -349 V
60 349 V
792 4091 Pls
853 4091 Pls
914 3742 Pls
975 4091 Pls
1035 4091 Pls
1096 3742 Pls
1157 4440 Pls
1218 4091 Pls
1279 3742 Pls
1339 4091 Pls
1400 4091 Pls
1461 3742 Pls
1522 4091 Pls
1583 4091 Pls
1643 3742 Pls
1704 4091 Pls
1765 4091 Pls
1826 3742 Pls
1887 4091 Pls
1947 4091 Pls
2008 3742 Pls
2069 4091 Pls
2130 4091 Pls
2191 3742 Pls
2251 4091 Pls
2312 4091 Pls
2373 3742 Pls
2434 4091 Pls
2495 4091 Pls
2555 3742 Pls
2616 4091 Pls
2677 4091 Pls
2738 3742 Pls
2799 4091 Pls
2859 4091 Pls
2920 3742 Pls
2981 4091 Pls
3042 4091 Pls
3103 3742 Pls
3163 4091 Pls
3224 4091 Pls
3285 3742 Pls
3346 4091 Pls
3407 4091 Pls
3467 3742 Pls
3528 4091 Pls
3589 4091 Pls
3650 3742 Pls
3711 4091 Pls
3771 4091 Pls
3832 3742 Pls
3893 4091 Pls
3954 4091 Pls
4015 3742 Pls
4075 4091 Pls
4136 4091 Pls
4197 3742 Pls
4258 4091 Pls
4319 4091 Pls
4379 3742 Pls
4440 4091 Pls
4501 4091 Pls
4562 3742 Pls
4623 4091 Pls
4683 4091 Pls
4744 3742 Pls
4805 4091 Pls
4866 4091 Pls
4927 3742 Pls
4987 4091 Pls
5048 4091 Pls
5109 3742 Pls
5170 4091 Pls
5231 4091 Pls
5291 3742 Pls
5352 4091 Pls
5413 4091 Pls
5474 3742 Pls
5535 4091 Pls
5595 4091 Pls
5656 3742 Pls
5717 4091 Pls
5778 4091 Pls
5839 3742 Pls
5899 4091 Pls
5960 4091 Pls
6021 3742 Pls
6082 4091 Pls
6143 4091 Pls
6203 3742 Pls
6264 4091 Pls
6325 4091 Pls
6386 3742 Pls
6447 4091 Pls
6507 4091 Pls
6568 3742 Pls
6629 4091 Pls
6690 4091 Pls
6751 3742 Pls
6811 4091 Pls
6348 3877 Pls
1.000 UP
3.000 UL
LT3
0.00 0.00 1.00 C LTb
5957 3677 M
[ [(Helvetica) 200.0 0.0 true true 0 (NONLINEAR CURVE FITTING)]
] -66.7 MRshow
LT3
0.00 0.00 1.00 C 6077 3677 M
543 0 V
792 3742 M
61 349 V
61 0 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
61 349 V
61 0 V
61 -349 V
61 349 V
60 0 V
61 -349 V
61 349 V
61 0 V
61 -349 V
60 349 V
61 0 V
61 -349 V
61 349 V
61 0 V
60 -349 V
792 3742 BoxF
853 4091 BoxF
914 4091 BoxF
975 3742 BoxF
1035 4091 BoxF
1096 4091 BoxF
1157 3742 BoxF
1218 4091 BoxF
1279 4091 BoxF
1339 3742 BoxF
1400 4091 BoxF
1461 4091 BoxF
1522 3742 BoxF
1583 4091 BoxF
1643 4091 BoxF
1704 3742 BoxF
1765 4091 BoxF
1826 4091 BoxF
1887 3742 BoxF
1947 4091 BoxF
2008 4091 BoxF
2069 3742 BoxF
2130 4091 BoxF
2191 4091 BoxF
2251 3742 BoxF
2312 4091 BoxF
2373 4091 BoxF
2434 3742 BoxF
2495 4091 BoxF
2555 4091 BoxF
2616 3742 BoxF
2677 4091 BoxF
2738 4091 BoxF
2799 3742 BoxF
2859 4091 BoxF
2920 4091 BoxF
2981 3742 BoxF
3042 4091 BoxF
3103 4091 BoxF
3163 3742 BoxF
3224 4091 BoxF
3285 4091 BoxF
3346 3742 BoxF
3407 4091 BoxF
3467 4091 BoxF
3528 3742 BoxF
3589 4091 BoxF
3650 4091 BoxF
3711 3742 BoxF
3771 4091 BoxF
3832 4091 BoxF
3893 3742 BoxF
3954 4091 BoxF
4015 4091 BoxF
4075 3742 BoxF
4136 4091 BoxF
4197 4091 BoxF
4258 3742 BoxF
4319 4091 BoxF
4379 4091 BoxF
4440 3742 BoxF
4501 4091 BoxF
4562 4091 BoxF
4623 3742 BoxF
4683 4091 BoxF
4744 4091 BoxF
4805 3742 BoxF
4866 4091 BoxF
4927 4091 BoxF
4987 3742 BoxF
5048 4091 BoxF
5109 4091 BoxF
5170 3742 BoxF
5231 4091 BoxF
5291 4091 BoxF
5352 3742 BoxF
5413 4091 BoxF
5474 4091 BoxF
5535 3742 BoxF
5595 4091 BoxF
5656 4091 BoxF
5717 3742 BoxF
5778 4091 BoxF
5839 4091 BoxF
5899 3742 BoxF
5960 4091 BoxF
6021 4091 BoxF
6082 3742 BoxF
6143 4091 BoxF
6203 4091 BoxF
6264 3742 BoxF
6325 4091 BoxF
6386 4091 BoxF
6447 3742 BoxF
6507 4091 BoxF
6568 4091 BoxF
6629 3742 BoxF
6690 4091 BoxF
6751 4091 BoxF
6811 3742 BoxF
6348 3677 BoxF
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
