%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/311s21-g8-n20-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Fri Jul 25 10:37:18 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/311s21-g8-n20-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jul 25 10:37:18 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
780 600 M
6080 0 V
stroke
0.500 UL
LTb
780 600 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1105 M
6080 0 V
stroke
0.500 UL
LTb
780 1105 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1105 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1611 M
6080 0 V
stroke
0.500 UL
LTb
780 1611 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1611 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2116 M
6080 0 V
stroke
0.500 UL
LTb
780 2116 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2116 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2621 M
6080 0 V
stroke
0.500 UL
LTb
780 2621 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2621 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3126 M
6080 0 V
stroke
0.500 UL
LTb
780 3126 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3126 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3632 M
6080 0 V
stroke
0.500 UL
LTb
780 3632 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3632 M
[ [(Helvetica) 200.0 0.0 true true 0 (60)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 4137 M
4697 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
780 4137 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 4137 M
[ [(Helvetica) 200.0 0.0 true true 0 (70)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 600 M
0 3840 V
stroke
0.500 UL
LTb
780 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 780 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
1996 600 M
0 3840 V
stroke
0.500 UL
LTb
1996 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 1996 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3212 600 M
0 3840 V
stroke
0.500 UL
LTb
3212 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3212 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4428 600 M
0 3840 V
stroke
0.500 UL
LTb
4428 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4428 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5644 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5644 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5644 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3820 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3820 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
792 1394 M
816 660 L
25 1495 V
24 634 V
24 358 V
25 105 V
24 132 V
24 50 V
25 12 V
24 32 V
24 95 V
25 -8 V
24 -135 V
24 -67 V
25 -79 V
24 9 V
24 -82 V
25 91 V
24 524 V
24 199 V
25 -544 V
24 68 V
24 -74 V
25 160 V
24 771 V
24 -170 V
24 -768 V
25 13 V
24 -35 V
24 85 V
25 -53 V
24 95 V
24 30 V
25 -101 V
24 379 V
24 -323 V
25 -91 V
24 89 V
24 -24 V
25 120 V
24 -24 V
24 -63 V
25 50 V
24 -54 V
24 83 V
25 -45 V
24 -38 V
24 -7 V
25 4 V
24 -200 V
24 26 V
24 41 V
25 18 V
24 6 V
24 -17 V
25 -7 V
24 -69 V
24 140 V
25 32 V
24 378 V
24 253 V
25 -613 V
24 65 V
24 -80 V
25 -14 V
24 34 V
24 -132 V
25 39 V
24 14 V
24 -114 V
25 274 V
24 -163 V
24 89 V
25 20 V
24 171 V
24 -138 V
24 104 V
25 -168 V
24 -42 V
24 -54 V
25 -114 V
24 28 V
24 51 V
25 -14 V
24 -78 V
24 122 V
25 18 V
24 -116 V
24 43 V
25 16 V
24 -53 V
24 -59 V
25 30 V
24 239 V
24 -25 V
25 7 V
24 -31 V
24 236 V
25 -207 V
24 50 V
24 242 V
24 -14 V
25 -239 V
24 -46 V
24 -38 V
25 129 V
3370 3539 L
24 85 V
25 129 V
24 232 V
24 -225 V
25 237 V
24 -77 V
24 151 V
25 -151 V
24 401 V
24 -347 V
25 -391 V
24 4 V
24 -120 V
25 141 V
24 -12 V
24 -177 V
25 -52 V
24 26 V
24 32 V
24 14 V
25 -102 V
24 54 V
24 64 V
25 -50 V
24 -26 V
24 60 V
25 51 V
24 185 V
24 -97 V
25 260 V
24 62 V
24 -325 V
25 -47 V
24 9 V
24 303 V
25 287 V
24 -699 V
24 56 V
25 -119 V
24 60 V
24 -80 V
25 249 V
24 -249 V
24 -114 V
24 90 V
25 -39 V
24 102 V
24 12 V
25 79 V
24 -59 V
24 12 V
25 -28 V
24 46 V
24 15 V
25 -12 V
24 6 V
24 12 V
25 50 V
24 32 V
24 -82 V
25 87 V
24 -58 V
24 -57 V
25 107 V
24 -76 V
24 -79 V
25 178 V
24 255 V
24 -677 V
24 533 V
25 340 V
24 -31 V
24 85 V
25 -628 V
24 -58 V
24 61 V
25 32 V
24 87 V
24 199 V
25 160 V
24 303 V
24 191 V
25 -401 V
24 -527 V
24 227 V
25 -121 V
24 228 V
24 227 V
25 -451 V
24 -33 V
24 -74 V
25 218 V
24 -195 V
24 -152 V
24 31 V
25 9 V
24 38 V
24 273 V
25 -325 V
24 -56 V
24 -94 V
25 0 V
24 84 V
24 -34 V
5924 3356 L
24 0 V
24 -32 V
25 218 V
24 13 V
24 270 V
25 -416 V
24 135 V
24 -80 V
25 65 V
24 -82 V
24 370 V
25 157 V
24 -418 V
24 -191 V
24 309 V
25 -240 V
24 -9 V
24 4 V
25 159 V
24 209 V
24 -279 V
25 -102 V
24 284 V
24 22 V
25 -102 V
24 234 V
24 130 V
25 -500 V
24 169 V
24 -151 V
25 -50 V
24 38 V
24 -32 V
25 -9 V
24 64 V
24 -2 V
25 -27 V
24 41 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
792 676 M
24 262 V
25 -72 V
865 642 L
24 165 V
914 642 L
24 185 V
24 -42 V
25 1 V
24 -41 V
24 -20 V
25 42 V
24 -83 V
24 184 V
25 -79 V
24 -64 V
24 -20 V
25 39 V
24 876 V
24 406 V
1279 704 L
24 61 V
24 -21 V
25 422 V
24 1727 V
24 -315 V
1424 990 L
25 -327 V
24 61 V
24 58 V
25 -99 V
24 42 V
24 -3 V
25 162 V
24 505 V
24 -707 V
25 18 V
24 -100 V
24 125 V
25 97 V
24 99 V
24 -175 V
25 83 V
24 -125 V
24 200 V
25 -37 V
24 -101 V
24 17 V
25 22 V
24 -142 V
24 102 V
24 41 V
25 19 V
24 -121 V
24 202 V
25 -182 V
24 22 V
24 183 V
25 -329 V
24 445 V
24 1107 V
2276 845 L
24 58 V
24 81 V
25 -220 V
24 159 V
24 -114 V
25 -2 V
24 -102 V
24 -21 V
25 450 V
24 -451 V
24 102 V
25 0 V
24 492 V
24 -533 V
24 215 V
25 -254 V
24 63 V
24 -84 V
25 63 V
24 61 V
24 -1 V
25 79 V
24 -140 V
24 40 V
25 -2 V
24 -121 V
24 43 V
25 123 V
24 -22 V
24 -144 V
25 84 V
24 77 V
24 295 V
25 -109 V
24 18 V
24 135 V
25 -165 V
24 257 V
24 210 V
24 -151 V
25 -511 V
24 -39 V
24 78 V
25 250 V
24 -210 V
24 -43 V
25 350 V
24 472 V
24 -651 V
25 607 V
24 -349 V
24 494 V
25 -542 V
24 1206 V
24 -978 V
25 -726 V
24 123 V
24 -18 V
25 14 V
24 79 V
24 -257 V
25 42 V
24 80 V
24 104 V
24 -122 V
25 -20 V
24 138 V
24 -39 V
25 -40 V
24 -101 V
24 -63 V
25 104 V
24 207 V
24 -86 V
25 551 V
24 -10 V
24 -217 V
25 -385 V
24 20 V
24 664 V
25 790 V
4270 766 L
24 100 V
25 -58 V
24 250 V
24 -333 V
25 455 V
24 -559 V
24 63 V
24 100 V
25 -80 V
24 -63 V
24 63 V
25 81 V
24 -40 V
24 21 V
25 159 V
24 -119 V
24 119 V
25 -179 V
24 121 V
24 42 V
25 -21 V
24 -41 V
24 134 V
25 -116 V
24 -60 V
24 25 V
25 219 V
24 -166 V
24 -79 V
25 515 V
24 532 V
5048 745 L
24 629 V
25 674 V
24 -146 V
24 202 V
5170 786 L
24 -123 V
24 41 V
25 221 V
24 351 V
24 241 V
25 401 V
24 418 V
24 602 V
25 -1029 V
5413 642 L
24 436 V
25 -277 V
24 -201 V
24 1215 V
25 -911 V
24 -77 V
24 -22 V
25 485 V
24 -549 V
24 -36 V
24 20 V
25 21 V
24 252 V
24 498 V
25 -691 V
24 -58 V
24 22 V
25 -63 V
24 63 V
24 19 V
25 63 V
24 -105 V
24 20 V
25 98 V
24 346 V
24 390 V
25 -811 V
24 -85 V
24 -2 V
25 331 V
24 -152 V
24 464 V
25 352 V
24 -797 V
24 -154 V
24 373 V
25 -416 V
24 83 V
24 117 V
25 -244 V
24 216 V
24 195 V
25 -222 V
24 558 V
24 24 V
25 -271 V
24 297 V
24 550 V
6605 825 L
24 502 V
24 -463 V
25 -60 V
24 -38 V
24 62 V
25 22 V
24 56 V
24 -119 V
25 38 V
24 41 V
792 676 Pls
816 938 Pls
841 866 Pls
865 642 Pls
889 807 Pls
914 642 Pls
938 827 Pls
962 785 Pls
987 786 Pls
1011 745 Pls
1035 725 Pls
1060 767 Pls
1084 684 Pls
1108 868 Pls
1133 789 Pls
1157 725 Pls
1181 705 Pls
1206 744 Pls
1230 1620 Pls
1254 2026 Pls
1279 704 Pls
1303 765 Pls
1327 744 Pls
1352 1166 Pls
1376 2893 Pls
1400 2578 Pls
1424 990 Pls
1449 663 Pls
1473 724 Pls
1497 782 Pls
1522 683 Pls
1546 725 Pls
1570 722 Pls
1595 884 Pls
1619 1389 Pls
1643 682 Pls
1668 700 Pls
1692 600 Pls
1716 725 Pls
1741 822 Pls
1765 921 Pls
1789 746 Pls
1814 829 Pls
1838 704 Pls
1862 904 Pls
1887 867 Pls
1911 766 Pls
1935 783 Pls
1960 805 Pls
1984 663 Pls
2008 765 Pls
2032 806 Pls
2057 825 Pls
2081 704 Pls
2105 906 Pls
2130 724 Pls
2154 746 Pls
2178 929 Pls
2203 600 Pls
2227 1045 Pls
2251 2152 Pls
2276 845 Pls
2300 903 Pls
2324 984 Pls
2349 764 Pls
2373 923 Pls
2397 809 Pls
2422 807 Pls
2446 705 Pls
2470 684 Pls
2495 1134 Pls
2519 683 Pls
2543 785 Pls
2568 785 Pls
2592 1277 Pls
2616 744 Pls
2640 959 Pls
2665 705 Pls
2689 768 Pls
2713 684 Pls
2738 747 Pls
2762 808 Pls
2786 807 Pls
2811 886 Pls
2835 746 Pls
2859 786 Pls
2884 784 Pls
2908 663 Pls
2932 706 Pls
2957 829 Pls
2981 807 Pls
3005 663 Pls
3030 747 Pls
3054 824 Pls
3078 1119 Pls
3103 1010 Pls
3127 1028 Pls
3151 1163 Pls
3176 998 Pls
3200 1255 Pls
3224 1465 Pls
3248 1314 Pls
3273 803 Pls
3297 764 Pls
3321 842 Pls
3346 1092 Pls
3370 882 Pls
3394 839 Pls
3419 1189 Pls
3443 1661 Pls
3467 1010 Pls
3492 1617 Pls
3516 1268 Pls
3540 1762 Pls
3565 1220 Pls
3589 2426 Pls
3613 1448 Pls
3638 722 Pls
3662 845 Pls
3686 827 Pls
3711 841 Pls
3735 920 Pls
3759 663 Pls
3784 705 Pls
3808 785 Pls
3832 889 Pls
3856 767 Pls
3881 747 Pls
3905 885 Pls
3929 846 Pls
3954 806 Pls
3978 705 Pls
4002 642 Pls
4027 746 Pls
4051 953 Pls
4075 867 Pls
4100 1418 Pls
4124 1408 Pls
4148 1191 Pls
4173 806 Pls
4197 826 Pls
4221 1490 Pls
4246 2280 Pls
4270 766 Pls
4294 866 Pls
4319 808 Pls
4343 1058 Pls
4367 725 Pls
4392 1180 Pls
4416 621 Pls
4440 684 Pls
4464 784 Pls
4489 704 Pls
4513 641 Pls
4537 704 Pls
4562 785 Pls
4586 745 Pls
4610 766 Pls
4635 925 Pls
4659 806 Pls
4683 925 Pls
4708 746 Pls
4732 867 Pls
4756 909 Pls
4781 888 Pls
4805 847 Pls
4829 981 Pls
4854 865 Pls
4878 805 Pls
4902 830 Pls
4927 1049 Pls
4951 883 Pls
4975 804 Pls
5000 1319 Pls
5024 1851 Pls
5048 745 Pls
5072 1374 Pls
5097 2048 Pls
5121 1902 Pls
5145 2104 Pls
5170 786 Pls
5194 663 Pls
5218 704 Pls
5243 925 Pls
5267 1276 Pls
5291 1517 Pls
5316 1918 Pls
5340 2336 Pls
5364 2938 Pls
5389 1909 Pls
5413 642 Pls
5437 1078 Pls
5462 801 Pls
5486 600 Pls
5510 1815 Pls
5535 904 Pls
5559 827 Pls
5583 805 Pls
5608 1290 Pls
5632 741 Pls
5656 705 Pls
5680 725 Pls
5705 746 Pls
5729 998 Pls
5753 1496 Pls
5778 805 Pls
5802 747 Pls
5826 769 Pls
5851 706 Pls
5875 769 Pls
5899 788 Pls
5924 851 Pls
5948 746 Pls
5972 766 Pls
5997 864 Pls
6021 1210 Pls
6045 1600 Pls
6070 789 Pls
6094 704 Pls
6118 702 Pls
6143 1033 Pls
6167 881 Pls
6191 1345 Pls
6216 1697 Pls
6240 900 Pls
6264 746 Pls
6288 1119 Pls
6313 703 Pls
6337 786 Pls
6361 903 Pls
6386 659 Pls
6410 875 Pls
6434 1070 Pls
6459 848 Pls
6483 1406 Pls
6507 1430 Pls
6532 1159 Pls
6556 1456 Pls
6580 2006 Pls
6605 825 Pls
6629 1327 Pls
6653 864 Pls
6678 804 Pls
6702 766 Pls
6726 828 Pls
6751 850 Pls
6775 906 Pls
6799 787 Pls
6824 825 Pls
6848 866 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
792 921 M
24 37 V
841 845 L
865 642 L
24 82 V
25 1 V
24 61 V
24 -22 V
25 -40 V
24 -62 V
24 21 V
25 1 V
24 63 V
24 39 V
25 -39 V
24 20 V
24 44 V
25 -25 V
24 999 V
24 132 V
1279 725 L
24 40 V
24 40 V
25 342 V
24 1913 V
24 -431 V
1424 951 L
25 -330 V
24 144 V
24 17 V
25 4 V
24 -82 V
24 58 V
25 102 V
24 701 V
24 -801 V
25 137 V
24 -217 V
24 -63 V
25 222 V
24 78 V
24 -217 V
25 -42 V
24 124 V
24 37 V
25 44 V
24 -101 V
24 17 V
25 22 V
24 -184 V
24 144 V
24 0 V
25 19 V
24 -38 V
24 119 V
25 -59 V
24 -164 V
24 40 V
25 -61 V
24 870 V
24 676 V
2276 723 L
24 18 V
24 81 V
25 -37 V
24 -3 V
24 -98 V
25 -63 V
24 84 V
24 21 V
25 427 V
24 -532 V
24 -21 V
25 164 V
24 495 V
24 -453 V
24 253 V
25 -333 V
24 -105 V
24 42 V
25 0 V
24 41 V
24 124 V
25 17 V
24 -37 V
24 -126 V
25 82 V
24 -79 V
24 -64 V
25 125 V
24 61 V
24 -165 V
25 105 V
24 356 V
24 -23 V
25 8 V
24 -119 V
24 441 V
25 -512 V
24 338 V
24 385 V
24 -344 V
25 -413 V
24 -120 V
24 158 V
25 -7 V
24 27 V
24 56 V
25 173 V
24 476 V
24 -715 V
25 585 V
24 -229 V
24 510 V
25 -704 V
24 1242 V
24 -903 V
25 -691 V
24 1 V
24 104 V
25 -47 V
24 160 V
24 -173 V
25 1238 V
3808 805 L
24 63 V
24 -164 V
25 -20 V
24 222 V
24 -60 V
25 -81 V
24 -60 V
24 -1 V
25 0 V
24 170 V
24 -28 V
25 377 V
24 150 V
24 -692 V
25 166 V
24 -42 V
24 601 V
25 888 V
4270 787 L
24 -44 V
25 65 V
24 150 V
24 -296 V
25 649 V
24 -524 V
24 -62 V
24 59 V
25 -38 V
24 40 V
24 -62 V
25 81 V
24 -39 V
24 -83 V
25 120 V
24 3 V
24 -3 V
25 -57 V
24 -2 V
24 0 V
25 123 V
24 -143 V
24 77 V
25 43 V
24 -18 V
24 -226 V
25 449 V
24 -267 V
24 1 V
25 481 V
24 523 V
5048 662 L
24 565 V
25 790 V
24 -177 V
24 219 V
5170 744 L
24 -123 V
24 125 V
25 -24 V
24 498 V
24 349 V
25 380 V
24 635 V
24 366 V
25 -1056 V
5413 663 L
24 415 V
25 -297 V
24 776 V
24 290 V
5535 823 L
24 -17 V
24 40 V
25 332 V
24 -196 V
24 -319 V
24 21 V
25 82 V
24 192 V
24 502 V
25 -593 V
24 -204 V
24 -21 V
25 43 V
24 21 V
24 40 V
25 -125 V
24 104 V
24 62 V
25 16 V
24 426 V
24 406 V
25 -867 V
24 103 V
24 -87 V
25 170 V
24 -93 V
24 539 V
25 280 V
24 -681 V
24 -233 V
24 295 V
25 -379 V
24 145 V
24 -5 V
25 171 V
24 157 V
24 38 V
25 -567 V
24 158 V
24 56 V
25 585 V
24 -186 V
24 788 V
6605 805 L
24 522 V
24 -524 V
25 -60 V
24 -39 V
24 103 V
25 -20 V
24 17 V
24 -162 V
25 81 V
24 61 V
792 921 BoxF
816 958 BoxF
841 845 BoxF
865 642 BoxF
889 724 BoxF
914 725 BoxF
938 786 BoxF
962 764 BoxF
987 724 BoxF
1011 662 BoxF
1035 683 BoxF
1060 684 BoxF
1084 747 BoxF
1108 786 BoxF
1133 747 BoxF
1157 767 BoxF
1181 811 BoxF
1206 786 BoxF
1230 1785 BoxF
1254 1917 BoxF
1279 725 BoxF
1303 765 BoxF
1327 805 BoxF
1352 1147 BoxF
1376 3060 BoxF
1400 2629 BoxF
1424 951 BoxF
1449 621 BoxF
1473 765 BoxF
1497 782 BoxF
1522 786 BoxF
1546 704 BoxF
1570 762 BoxF
1595 864 BoxF
1619 1565 BoxF
1643 764 BoxF
1668 901 BoxF
1692 684 BoxF
1716 621 BoxF
1741 843 BoxF
1765 921 BoxF
1789 704 BoxF
1814 662 BoxF
1838 786 BoxF
1862 823 BoxF
1887 867 BoxF
1911 766 BoxF
1935 783 BoxF
1960 805 BoxF
1984 621 BoxF
2008 765 BoxF
2032 765 BoxF
2057 784 BoxF
2081 746 BoxF
2105 865 BoxF
2130 806 BoxF
2154 642 BoxF
2178 682 BoxF
2203 621 BoxF
2227 1491 BoxF
2251 2167 BoxF
2276 723 BoxF
2300 741 BoxF
2324 822 BoxF
2349 785 BoxF
2373 782 BoxF
2397 684 BoxF
2422 621 BoxF
2446 705 BoxF
2470 726 BoxF
2495 1153 BoxF
2519 621 BoxF
2543 600 BoxF
2568 764 BoxF
2592 1259 BoxF
2616 806 BoxF
2640 1059 BoxF
2665 726 BoxF
2689 621 BoxF
2713 663 BoxF
2738 663 BoxF
2762 704 BoxF
2786 828 BoxF
2811 845 BoxF
2835 808 BoxF
2859 682 BoxF
2884 764 BoxF
2908 685 BoxF
2932 621 BoxF
2957 746 BoxF
2981 807 BoxF
3005 642 BoxF
3030 747 BoxF
3054 1103 BoxF
3078 1080 BoxF
3103 1088 BoxF
3127 969 BoxF
3151 1410 BoxF
3176 898 BoxF
3200 1236 BoxF
3224 1621 BoxF
3248 1277 BoxF
3273 864 BoxF
3297 744 BoxF
3321 902 BoxF
3346 895 BoxF
3370 922 BoxF
3394 978 BoxF
3419 1151 BoxF
3443 1627 BoxF
3467 912 BoxF
3492 1497 BoxF
3516 1268 BoxF
3540 1778 BoxF
3565 1074 BoxF
3589 2316 BoxF
3613 1413 BoxF
3638 722 BoxF
3662 723 BoxF
3686 827 BoxF
3711 780 BoxF
3735 940 BoxF
3759 767 BoxF
3784 2005 BoxF
3808 805 BoxF
3832 868 BoxF
3856 704 BoxF
3881 684 BoxF
3905 906 BoxF
3929 846 BoxF
3954 765 BoxF
3978 705 BoxF
4002 704 BoxF
4027 704 BoxF
4051 874 BoxF
4075 846 BoxF
4100 1223 BoxF
4124 1373 BoxF
4148 681 BoxF
4173 847 BoxF
4197 805 BoxF
4221 1406 BoxF
4246 2294 BoxF
4270 787 BoxF
4294 743 BoxF
4319 808 BoxF
4343 958 BoxF
4367 662 BoxF
4392 1311 BoxF
4416 787 BoxF
4440 725 BoxF
4464 784 BoxF
4489 746 BoxF
4513 786 BoxF
4537 724 BoxF
4562 805 BoxF
4586 766 BoxF
4610 683 BoxF
4635 803 BoxF
4659 806 BoxF
4683 803 BoxF
4708 746 BoxF
4732 744 BoxF
4756 744 BoxF
4781 867 BoxF
4805 724 BoxF
4829 801 BoxF
4854 844 BoxF
4878 826 BoxF
4902 600 BoxF
4927 1049 BoxF
4951 782 BoxF
4975 783 BoxF
5000 1264 BoxF
5024 1787 BoxF
5048 662 BoxF
5072 1227 BoxF
5097 2017 BoxF
5121 1840 BoxF
5145 2059 BoxF
5170 744 BoxF
5194 621 BoxF
5218 746 BoxF
5243 722 BoxF
5267 1220 BoxF
5291 1569 BoxF
5316 1949 BoxF
5340 2584 BoxF
5364 2950 BoxF
5389 1894 BoxF
5413 663 BoxF
5437 1078 BoxF
5462 781 BoxF
5486 1557 BoxF
5510 1847 BoxF
5535 823 BoxF
5559 806 BoxF
5583 846 BoxF
5608 1178 BoxF
5632 982 BoxF
5656 663 BoxF
5680 684 BoxF
5705 766 BoxF
5729 958 BoxF
5753 1460 BoxF
5778 867 BoxF
5802 663 BoxF
5826 642 BoxF
5851 685 BoxF
5875 706 BoxF
5899 746 BoxF
5924 621 BoxF
5948 725 BoxF
5972 787 BoxF
5997 803 BoxF
6021 1229 BoxF
6045 1635 BoxF
6070 768 BoxF
6094 871 BoxF
6118 784 BoxF
6143 954 BoxF
6167 861 BoxF
6191 1400 BoxF
6216 1680 BoxF
6240 999 BoxF
6264 766 BoxF
6288 1061 BoxF
6313 682 BoxF
6337 827 BoxF
6361 822 BoxF
6386 993 BoxF
6410 1150 BoxF
6434 1188 BoxF
6459 621 BoxF
6483 779 BoxF
6507 835 BoxF
6532 1420 BoxF
6556 1234 BoxF
6580 2022 BoxF
6605 805 BoxF
6629 1327 BoxF
6653 803 BoxF
6678 743 BoxF
6702 704 BoxF
6726 807 BoxF
6751 787 BoxF
6775 804 BoxF
6799 642 BoxF
6824 723 BoxF
6848 784 BoxF
6348 3877 BoxF
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
