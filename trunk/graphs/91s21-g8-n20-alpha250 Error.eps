%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/91s21-g8-n20-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Fri Jul 25 16:50:03 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/91s21-g8-n20-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jul 25 16:50:03 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
780 600 M
6080 0 V
stroke
0.500 UL
LTb
780 600 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1052 M
6080 0 V
stroke
0.500 UL
LTb
780 1052 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1052 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1504 M
6080 0 V
stroke
0.500 UL
LTb
780 1504 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1504 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1955 M
6080 0 V
stroke
0.500 UL
LTb
780 1955 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1955 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2407 M
6080 0 V
stroke
0.500 UL
LTb
780 2407 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2407 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2859 M
6080 0 V
stroke
0.500 UL
LTb
780 2859 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2859 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3311 M
6080 0 V
stroke
0.500 UL
LTb
780 3311 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3311 M
[ [(Helvetica) 200.0 0.0 true true 0 (60)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3762 M
6080 0 V
stroke
0.500 UL
LTb
780 3762 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3762 M
[ [(Helvetica) 200.0 0.0 true true 0 (70)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 4214 M
4697 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
780 4214 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 4214 M
[ [(Helvetica) 200.0 0.0 true true 0 (80)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 600 M
0 3840 V
stroke
0.500 UL
LTb
780 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 780 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
1996 600 M
0 3840 V
stroke
0.500 UL
LTb
1996 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 1996 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3212 600 M
0 3840 V
stroke
0.500 UL
LTb
3212 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3212 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4428 600 M
0 3840 V
stroke
0.500 UL
LTb
4428 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4428 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5644 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5644 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5644 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3820 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3820 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
792 1991 M
24 395 V
25 524 V
24 296 V
24 142 V
25 15 V
24 64 V
24 -150 V
25 -65 V
24 139 V
24 -47 V
25 -81 V
24 67 V
24 -93 V
25 73 V
24 -17 V
24 -223 V
25 120 V
24 -204 V
24 351 V
25 47 V
24 0 V
24 -68 V
25 -6 V
24 69 V
24 659 V
24 -386 V
25 -402 V
24 75 V
24 -2 V
25 89 V
24 134 V
24 -16 V
25 83 V
24 59 V
24 -107 V
25 -41 V
24 -195 V
24 86 V
25 184 V
24 -227 V
24 100 V
25 -4 V
24 31 V
24 -141 V
25 0 V
24 60 V
24 -34 V
25 71 V
24 -27 V
24 -128 V
24 14 V
25 162 V
24 -160 V
24 160 V
25 -119 V
24 -28 V
24 -139 V
25 195 V
24 -14 V
24 41 V
25 220 V
24 -151 V
24 70 V
25 -83 V
24 74 V
24 -49 V
25 -150 V
24 108 V
24 -87 V
25 112 V
24 -160 V
24 259 V
25 -142 V
24 198 V
24 -189 V
24 76 V
25 -113 V
24 -75 V
24 125 V
25 -186 V
24 -74 V
24 -25 V
25 -103 V
24 123 V
24 -178 V
25 174 V
24 66 V
24 -6 V
25 -96 V
24 145 V
24 0 V
25 308 V
24 -273 V
24 -78 V
25 153 V
24 25 V
24 -114 V
25 21 V
24 -6 V
24 87 V
24 -268 V
25 201 V
3297 3348 L
24 88 V
25 -99 V
24 74 V
24 201 V
25 -131 V
24 23 V
24 67 V
25 -67 V
24 -13 V
24 -47 V
25 81 V
24 56 V
24 125 V
25 -216 V
24 122 V
24 103 V
25 -337 V
24 15 V
24 48 V
25 -214 V
24 49 V
24 -46 V
24 -18 V
25 120 V
24 -64 V
24 -36 V
25 59 V
24 92 V
24 12 V
25 116 V
24 -128 V
24 -187 V
25 379 V
24 -18 V
24 -340 V
25 -11 V
24 -104 V
24 160 V
25 -30 V
24 125 V
24 -53 V
25 -98 V
24 -112 V
24 82 V
25 -4 V
24 25 V
24 15 V
24 0 V
25 -36 V
24 127 V
24 48 V
25 -110 V
24 48 V
24 -163 V
25 150 V
24 -100 V
24 231 V
25 -206 V
24 -19 V
24 94 V
25 122 V
24 -108 V
24 -14 V
25 219 V
24 -97 V
24 71 V
25 -9 V
24 -198 V
24 75 V
25 82 V
24 -44 V
24 -72 V
24 89 V
25 36 V
24 -179 V
24 151 V
25 -70 V
24 159 V
24 -165 V
25 190 V
24 11 V
24 -369 V
25 307 V
24 -44 V
24 21 V
25 -60 V
24 111 V
24 -173 V
25 284 V
24 -135 V
24 284 V
25 -170 V
24 97 V
24 -396 V
25 -27 V
24 -68 V
24 36 V
24 88 V
25 54 V
24 113 V
24 -98 V
25 -166 V
24 124 V
24 -97 V
5851 3227 L
24 156 V
24 -121 V
25 -21 V
24 -115 V
24 76 V
25 -26 V
24 211 V
24 -226 V
25 -5 V
24 76 V
24 58 V
25 150 V
24 -75 V
24 4 V
25 142 V
24 101 V
24 -67 V
24 3 V
25 84 V
24 104 V
24 -213 V
25 140 V
24 58 V
24 -410 V
25 -20 V
24 -806 V
24 -1051 V
25 -626 V
24 2636 V
24 -209 V
25 103 V
24 -6 V
24 186 V
25 -94 V
24 -113 V
24 -21 V
25 125 V
24 63 V
24 -276 V
25 33 V
24 104 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
792 600 M
24 21 V
25 1750 V
24 -700 V
24 -471 V
25 1123 V
938 784 L
24 17 V
25 399 V
24 -362 V
24 -238 V
25 656 V
24 -587 V
24 -69 V
25 308 V
24 -308 V
24 494 V
25 453 V
24 209 V
24 327 V
25 391 V
1303 767 L
24 -167 V
25 342 V
24 -60 V
24 1466 V
24 -931 V
25 -683 V
24 -39 V
24 686 V
25 -713 V
24 58 V
24 273 V
25 271 V
24 -76 V
24 -399 V
25 -99 V
24 83 V
24 106 V
25 -94 V
24 -156 V
24 201 V
25 109 V
24 -310 V
24 283 V
25 -36 V
24 -148 V
24 -101 V
25 163 V
24 16 V
24 480 V
24 -41 V
25 -420 V
24 186 V
24 -186 V
25 -129 V
24 436 V
24 -64 V
25 -404 V
24 166 V
24 -168 V
25 620 V
24 -585 V
24 165 V
25 -268 V
24 297 V
24 -263 V
25 464 V
24 4 V
24 -399 V
25 62 V
24 252 V
24 -252 V
25 7 V
24 -79 V
24 47 V
24 228 V
25 -233 V
24 72 V
24 55 V
25 293 V
24 -37 V
24 -301 V
25 642 V
24 -203 V
24 -129 V
25 118 V
24 -610 V
24 69 V
25 398 V
24 -364 V
24 -69 V
25 136 V
24 657 V
24 -544 V
25 -183 V
24 -102 V
24 315 V
25 158 V
24 -207 V
24 -165 V
24 153 V
25 -222 V
24 125 V
24 272 V
25 -462 V
24 569 V
24 58 V
25 -562 V
24 64 V
24 -68 V
25 4 V
24 -65 V
24 736 V
25 -346 V
24 317 V
24 27 V
25 -402 V
24 -55 V
24 -109 V
25 234 V
24 -23 V
24 -3 V
25 -341 V
24 243 V
24 127 V
3856 812 L
25 -2 V
24 -32 V
24 -107 V
25 -71 V
24 229 V
24 64 V
25 -20 V
24 218 V
24 -356 V
25 857 V
24 -225 V
24 -14 V
25 -718 V
24 208 V
24 -243 V
25 391 V
24 8 V
24 30 V
25 -186 V
24 371 V
24 -332 V
25 -143 V
24 217 V
24 -180 V
24 -141 V
25 450 V
24 369 V
24 -684 V
25 73 V
24 -100 V
24 -107 V
25 416 V
24 395 V
24 -557 V
25 -16 V
24 407 V
24 -403 V
25 59 V
24 8 V
24 -67 V
25 -214 V
24 37 V
24 130 V
25 -166 V
24 705 V
24 -638 V
25 344 V
24 -263 V
24 143 V
24 -105 V
25 -218 V
24 171 V
24 -172 V
25 196 V
24 172 V
24 -167 V
25 -102 V
24 194 V
24 25 V
25 -350 V
24 204 V
24 -10 V
25 -131 V
24 329 V
24 1232 V
5462 630 L
24 433 V
24 -100 V
25 -209 V
24 665 V
24 -537 V
25 -41 V
24 -22 V
24 255 V
24 -374 V
25 1 V
24 234 V
24 -265 V
25 5 V
24 130 V
24 -170 V
25 35 V
24 -5 V
24 75 V
25 -105 V
24 534 V
24 -135 V
25 -293 V
24 -13 V
24 583 V
25 -606 V
24 429 V
24 -293 V
25 308 V
24 -414 V
24 594 V
25 -696 V
24 -1 V
24 436 V
24 -372 V
25 59 V
24 536 V
24 -625 V
25 89 V
24 228 V
24 -348 V
25 131 V
24 190 V
24 -252 V
25 223 V
24 75 V
24 351 V
25 -274 V
24 -339 V
24 174 V
25 85 V
24 -156 V
24 -71 V
25 -139 V
24 34 V
24 367 V
25 319 V
24 -468 V
792 600 Pls
816 621 Pls
841 2371 Pls
865 1671 Pls
889 1200 Pls
914 2323 Pls
938 784 Pls
962 801 Pls
987 1200 Pls
1011 838 Pls
1035 600 Pls
1060 1256 Pls
1084 669 Pls
1108 600 Pls
1133 908 Pls
1157 600 Pls
1181 1094 Pls
1206 1547 Pls
1230 1756 Pls
1254 2083 Pls
1279 2474 Pls
1303 767 Pls
1327 600 Pls
1352 942 Pls
1376 882 Pls
1400 2348 Pls
1424 1417 Pls
1449 734 Pls
1473 695 Pls
1497 1381 Pls
1522 668 Pls
1546 726 Pls
1570 999 Pls
1595 1270 Pls
1619 1194 Pls
1643 795 Pls
1668 696 Pls
1692 779 Pls
1716 885 Pls
1741 791 Pls
1765 635 Pls
1789 836 Pls
1814 945 Pls
1838 635 Pls
1862 918 Pls
1887 882 Pls
1911 734 Pls
1935 633 Pls
1960 796 Pls
1984 812 Pls
2008 1292 Pls
2032 1251 Pls
2057 831 Pls
2081 1017 Pls
2105 831 Pls
2130 702 Pls
2154 1138 Pls
2178 1074 Pls
2203 670 Pls
2227 836 Pls
2251 668 Pls
2276 1288 Pls
2300 703 Pls
2324 868 Pls
2349 600 Pls
2373 897 Pls
2397 634 Pls
2422 1098 Pls
2446 1102 Pls
2470 703 Pls
2495 765 Pls
2519 1017 Pls
2543 765 Pls
2568 772 Pls
2592 693 Pls
2616 740 Pls
2640 968 Pls
2665 735 Pls
2689 807 Pls
2713 862 Pls
2738 1155 Pls
2762 1118 Pls
2786 817 Pls
2811 1459 Pls
2835 1256 Pls
2859 1127 Pls
2884 1245 Pls
2908 635 Pls
2932 704 Pls
2957 1102 Pls
2981 738 Pls
3005 669 Pls
3030 805 Pls
3054 1462 Pls
3078 918 Pls
3103 735 Pls
3127 633 Pls
3151 948 Pls
3176 1106 Pls
3200 899 Pls
3224 734 Pls
3248 887 Pls
3273 665 Pls
3297 790 Pls
3321 1062 Pls
3346 600 Pls
3370 1169 Pls
3394 1227 Pls
3419 665 Pls
3443 729 Pls
3467 661 Pls
3492 665 Pls
3516 600 Pls
3540 1336 Pls
3565 990 Pls
3589 1307 Pls
3613 1334 Pls
3638 932 Pls
3662 877 Pls
3686 768 Pls
3711 1002 Pls
3735 979 Pls
3759 976 Pls
3784 635 Pls
3808 878 Pls
3832 1005 Pls
3856 812 Pls
3881 810 Pls
3905 778 Pls
3929 671 Pls
3954 600 Pls
3978 829 Pls
4002 893 Pls
4027 873 Pls
4051 1091 Pls
4075 735 Pls
4100 1592 Pls
4124 1367 Pls
4148 1353 Pls
4173 635 Pls
4197 843 Pls
4221 600 Pls
4246 991 Pls
4270 999 Pls
4294 1029 Pls
4319 843 Pls
4343 1214 Pls
4367 882 Pls
4392 739 Pls
4416 956 Pls
4440 776 Pls
4464 635 Pls
4489 1085 Pls
4513 1454 Pls
4537 770 Pls
4562 843 Pls
4586 743 Pls
4610 636 Pls
4635 1052 Pls
4659 1447 Pls
4683 890 Pls
4708 874 Pls
4732 1281 Pls
4756 878 Pls
4781 937 Pls
4805 945 Pls
4829 878 Pls
4854 664 Pls
4878 701 Pls
4902 831 Pls
4927 665 Pls
4951 1370 Pls
4975 732 Pls
5000 1076 Pls
5024 813 Pls
5048 956 Pls
5072 851 Pls
5097 633 Pls
5121 804 Pls
5145 632 Pls
5170 828 Pls
5194 1000 Pls
5218 833 Pls
5243 731 Pls
5267 925 Pls
5291 950 Pls
5316 600 Pls
5340 804 Pls
5364 794 Pls
5389 663 Pls
5413 992 Pls
5437 2224 Pls
5462 630 Pls
5486 1063 Pls
5510 963 Pls
5535 754 Pls
5559 1419 Pls
5583 882 Pls
5608 841 Pls
5632 819 Pls
5656 1074 Pls
5680 700 Pls
5705 701 Pls
5729 935 Pls
5753 670 Pls
5778 675 Pls
5802 805 Pls
5826 635 Pls
5851 670 Pls
5875 665 Pls
5899 740 Pls
5924 635 Pls
5948 1169 Pls
5972 1034 Pls
5997 741 Pls
6021 728 Pls
6045 1311 Pls
6070 705 Pls
6094 1134 Pls
6118 841 Pls
6143 1149 Pls
6167 735 Pls
6191 1329 Pls
6216 633 Pls
6240 632 Pls
6264 1068 Pls
6288 696 Pls
6313 755 Pls
6337 1291 Pls
6361 666 Pls
6386 755 Pls
6410 983 Pls
6434 635 Pls
6459 766 Pls
6483 956 Pls
6507 704 Pls
6532 927 Pls
6556 1002 Pls
6580 1353 Pls
6605 1079 Pls
6629 740 Pls
6653 914 Pls
6678 999 Pls
6702 843 Pls
6726 772 Pls
6751 633 Pls
6775 667 Pls
6799 1034 Pls
6824 1353 Pls
6848 885 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
792 600 M
24 2017 V
25 -143 V
24 1688 V
24 -845 V
25 1086 V
938 2475 L
24 1639 V
987 2894 L
24 661 V
24 -2134 V
25 964 V
24 -1061 V
24 1019 V
25 -1161 V
24 1067 V
24 -396 V
25 714 V
24 -531 V
24 553 V
1279 868 L
24 836 V
24 -339 V
25 604 V
1376 967 L
24 910 V
24 -971 V
25 1267 V
1473 758 L
24 725 V
25 -438 V
24 155 V
24 -434 V
25 -20 V
24 121 V
24 1066 V
1668 760 L
24 987 V
24 -471 V
25 56 V
24 -137 V
24 450 V
25 -493 V
24 613 V
24 -777 V
25 530 V
24 -784 V
24 435 V
25 -536 V
24 849 V
24 -445 V
24 683 V
2057 633 L
24 905 V
24 -872 V
25 987 V
24 -264 V
24 923 V
25 -913 V
24 482 V
24 -870 V
25 -82 V
24 150 V
24 391 V
25 27 V
24 356 V
24 -336 V
25 1075 V
24 -1457 V
24 810 V
25 -817 V
24 1036 V
24 -904 V
25 995 V
2592 787 L
24 1214 V
24 -330 V
25 648 V
24 -1064 V
24 360 V
25 -237 V
24 629 V
24 -973 V
25 1022 V
24 -764 V
24 927 V
25 -974 V
24 590 V
2932 739 L
25 901 V
24 -833 V
24 724 V
25 -726 V
24 933 V
24 -609 V
25 381 V
24 -511 V
24 817 V
25 -811 V
24 492 V
24 -161 V
24 1128 V
25 -767 V
24 167 V
3321 831 L
25 692 V
24 -19 V
24 225 V
25 -409 V
24 377 V
24 -854 V
25 1048 V
3516 871 L
24 1068 V
25 -916 V
24 161 V
24 -443 V
25 1088 V
3662 661 L
24 -5 V
25 412 V
24 532 V
24 -829 V
25 810 V
24 -321 V
24 419 V
24 -655 V
25 416 V
24 -342 V
24 747 V
25 -581 V
24 482 V
24 -658 V
25 270 V
24 -398 V
24 820 V
25 -629 V
24 -496 V
24 1379 V
25 443 V
4197 982 L
24 739 V
25 160 V
24 513 V
24 -871 V
25 1058 V
24 -1077 V
24 578 V
25 -961 V
24 902 V
24 -752 V
24 705 V
25 -965 V
24 407 V
24 -444 V
25 599 V
24 -112 V
24 491 V
25 -761 V
24 785 V
4683 697 L
25 690 V
24 -357 V
24 543 V
25 -366 V
24 807 V
24 -615 V
25 28 V
24 -52 V
24 511 V
25 -766 V
24 951 V
24 -86 V
25 789 V
24 -1605 V
24 605 V
5072 631 L
25 814 V
24 -30 V
24 330 V
25 -235 V
24 381 V
24 337 V
25 533 V
24 -1543 V
24 1028 V
25 -1010 V
24 757 V
24 -393 V
25 295 V
24 -934 V
24 1474 V
25 -914 V
24 440 V
24 -301 V
25 968 V
5559 656 L
24 1885 V
25 -975 V
24 1038 V
24 -984 V
24 218 V
25 -901 V
24 633 V
24 -240 V
25 1323 V
24 -1642 V
24 1014 V
25 -760 V
24 383 V
24 -243 V
25 828 V
24 -922 V
24 1024 V
25 -853 V
24 175 V
24 -168 V
25 687 V
24 -616 V
24 419 V
6143 600 L
24 843 V
24 31 V
25 230 V
24 -880 V
24 746 V
24 -553 V
25 295 V
24 -367 V
24 519 V
25 -802 V
24 48 V
24 655 V
25 331 V
24 149 V
24 354 V
25 -1094 V
24 131 V
24 -109 V
25 123 V
24 -230 V
24 51 V
25 -72 V
24 956 V
24 -976 V
25 407 V
24 -284 V
24 980 V
25 -503 V
24 373 V
792 600 BoxF
816 2617 BoxF
841 2474 BoxF
865 4162 BoxF
889 3317 BoxF
914 4403 BoxF
938 2475 BoxF
962 4114 BoxF
987 2894 BoxF
1011 3555 BoxF
1035 1421 BoxF
1060 2385 BoxF
1084 1324 BoxF
1108 2343 BoxF
1133 1182 BoxF
1157 2249 BoxF
1181 1853 BoxF
1206 2567 BoxF
1230 2036 BoxF
1254 2589 BoxF
1279 868 BoxF
1303 1704 BoxF
1327 1365 BoxF
1352 1969 BoxF
1376 967 BoxF
1400 1877 BoxF
1424 906 BoxF
1449 2173 BoxF
1473 758 BoxF
1497 1483 BoxF
1522 1045 BoxF
1546 1200 BoxF
1570 766 BoxF
1595 746 BoxF
1619 867 BoxF
1643 1933 BoxF
1668 760 BoxF
1692 1747 BoxF
1716 1276 BoxF
1741 1332 BoxF
1765 1195 BoxF
1789 1645 BoxF
1814 1152 BoxF
1838 1765 BoxF
1862 988 BoxF
1887 1518 BoxF
1911 734 BoxF
1935 1169 BoxF
1960 633 BoxF
1984 1482 BoxF
2008 1037 BoxF
2032 1720 BoxF
2057 633 BoxF
2081 1538 BoxF
2105 666 BoxF
2130 1653 BoxF
2154 1389 BoxF
2178 2312 BoxF
2203 1399 BoxF
2227 1881 BoxF
2251 1011 BoxF
2276 929 BoxF
2300 1079 BoxF
2324 1470 BoxF
2349 1497 BoxF
2373 1853 BoxF
2397 1517 BoxF
2422 2592 BoxF
2446 1135 BoxF
2470 1945 BoxF
2495 1128 BoxF
2519 2164 BoxF
2543 1260 BoxF
2568 2255 BoxF
2592 787 BoxF
2616 2001 BoxF
2640 1671 BoxF
2665 2319 BoxF
2689 1255 BoxF
2713 1615 BoxF
2738 1378 BoxF
2762 2007 BoxF
2786 1034 BoxF
2811 2056 BoxF
2835 1292 BoxF
2859 2219 BoxF
2884 1245 BoxF
2908 1835 BoxF
2932 739 BoxF
2957 1640 BoxF
2981 807 BoxF
3005 1531 BoxF
3030 805 BoxF
3054 1738 BoxF
3078 1129 BoxF
3103 1510 BoxF
3127 999 BoxF
3151 1816 BoxF
3176 1005 BoxF
3200 1497 BoxF
3224 1336 BoxF
3248 2464 BoxF
3273 1697 BoxF
3297 1864 BoxF
3321 831 BoxF
3346 1523 BoxF
3370 1504 BoxF
3394 1729 BoxF
3419 1320 BoxF
3443 1697 BoxF
3467 843 BoxF
3492 1891 BoxF
3516 871 BoxF
3540 1939 BoxF
3565 1023 BoxF
3589 1184 BoxF
3613 741 BoxF
3638 1829 BoxF
3662 661 BoxF
3686 656 BoxF
3711 1068 BoxF
3735 1600 BoxF
3759 771 BoxF
3784 1581 BoxF
3808 1260 BoxF
3832 1679 BoxF
3856 1024 BoxF
3881 1440 BoxF
3905 1098 BoxF
3929 1845 BoxF
3954 1264 BoxF
3978 1746 BoxF
4002 1088 BoxF
4027 1358 BoxF
4051 960 BoxF
4075 1780 BoxF
4100 1151 BoxF
4124 655 BoxF
4148 2034 BoxF
4173 2477 BoxF
4197 982 BoxF
4221 1721 BoxF
4246 1881 BoxF
4270 2394 BoxF
4294 1523 BoxF
4319 2581 BoxF
4343 1504 BoxF
4367 2082 BoxF
4392 1121 BoxF
4416 2023 BoxF
4440 1271 BoxF
4464 1976 BoxF
4489 1011 BoxF
4513 1418 BoxF
4537 974 BoxF
4562 1573 BoxF
4586 1461 BoxF
4610 1952 BoxF
4635 1191 BoxF
4659 1976 BoxF
4683 697 BoxF
4708 1387 BoxF
4732 1030 BoxF
4756 1573 BoxF
4781 1207 BoxF
4805 2014 BoxF
4829 1399 BoxF
4854 1427 BoxF
4878 1375 BoxF
4902 1886 BoxF
4927 1120 BoxF
4951 2071 BoxF
4975 1985 BoxF
5000 2774 BoxF
5024 1169 BoxF
5048 1774 BoxF
5072 631 BoxF
5097 1445 BoxF
5121 1415 BoxF
5145 1745 BoxF
5170 1510 BoxF
5194 1891 BoxF
5218 2228 BoxF
5243 2761 BoxF
5267 1218 BoxF
5291 2246 BoxF
5316 1236 BoxF
5340 1993 BoxF
5364 1600 BoxF
5389 1895 BoxF
5413 961 BoxF
5437 2435 BoxF
5462 1521 BoxF
5486 1961 BoxF
5510 1660 BoxF
5535 2628 BoxF
5559 656 BoxF
5583 2541 BoxF
5608 1566 BoxF
5632 2604 BoxF
5656 1620 BoxF
5680 1838 BoxF
5705 937 BoxF
5729 1570 BoxF
5753 1330 BoxF
5778 2653 BoxF
5802 1011 BoxF
5826 2025 BoxF
5851 1265 BoxF
5875 1648 BoxF
5899 1405 BoxF
5924 2233 BoxF
5948 1311 BoxF
5972 2335 BoxF
5997 1482 BoxF
6021 1657 BoxF
6045 1489 BoxF
6070 2176 BoxF
6094 1560 BoxF
6118 1979 BoxF
6143 600 BoxF
6167 1443 BoxF
6191 1474 BoxF
6216 1704 BoxF
6240 824 BoxF
6264 1570 BoxF
6288 1017 BoxF
6313 1312 BoxF
6337 945 BoxF
6361 1464 BoxF
6386 662 BoxF
6410 710 BoxF
6434 1365 BoxF
6459 1696 BoxF
6483 1845 BoxF
6507 2199 BoxF
6532 1105 BoxF
6556 1236 BoxF
6580 1127 BoxF
6605 1250 BoxF
6629 1020 BoxF
6653 1071 BoxF
6678 999 BoxF
6702 1955 BoxF
6726 979 BoxF
6751 1386 BoxF
6775 1102 BoxF
6799 2082 BoxF
6824 1579 BoxF
6848 1952 BoxF
6348 3877 BoxF
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
