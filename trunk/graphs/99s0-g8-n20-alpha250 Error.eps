%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/99s0-g8-n20-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Fri Jul 25 16:25:21 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/99s0-g8-n20-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jul 25 16:25:21 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
780 600 M
6080 0 V
stroke
0.500 UL
LTb
780 600 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1031 M
6080 0 V
stroke
0.500 UL
LTb
780 1031 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1031 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1463 M
6080 0 V
stroke
0.500 UL
LTb
780 1463 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1463 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1894 M
6080 0 V
stroke
0.500 UL
LTb
780 1894 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1894 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2326 M
6080 0 V
stroke
0.500 UL
LTb
780 2326 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2326 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2757 M
6080 0 V
stroke
0.500 UL
LTb
780 2757 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2757 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3189 M
6080 0 V
stroke
0.500 UL
LTb
780 3189 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3189 M
[ [(Helvetica) 200.0 0.0 true true 0 (60)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3620 M
6080 0 V
stroke
0.500 UL
LTb
780 3620 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3620 M
[ [(Helvetica) 200.0 0.0 true true 0 (70)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 4052 M
4697 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
780 4052 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 4052 M
[ [(Helvetica) 200.0 0.0 true true 0 (80)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 600 M
0 3840 V
stroke
0.500 UL
LTb
780 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 780 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
1996 600 M
0 3840 V
stroke
0.500 UL
LTb
1996 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 1996 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3212 600 M
0 3840 V
stroke
0.500 UL
LTb
3212 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3212 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4428 600 M
0 3840 V
stroke
0.500 UL
LTb
4428 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4428 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5644 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5644 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5644 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3820 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3820 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
792 1913 M
24 496 V
25 443 V
24 -4 V
24 296 V
25 193 V
24 77 V
24 -13 V
25 -3 V
24 -132 V
24 112 V
25 -94 V
24 21 V
24 85 V
25 -102 V
24 49 V
24 -57 V
25 98 V
24 25 V
24 -54 V
25 -32 V
24 52 V
24 -93 V
25 54 V
24 -5 V
24 44 V
24 -47 V
25 0 V
24 -42 V
24 5 V
25 96 V
24 -233 V
24 177 V
25 -70 V
24 139 V
24 -72 V
25 -17 V
24 55 V
24 -212 V
25 -6 V
24 -42 V
24 168 V
25 21 V
24 -36 V
24 -38 V
25 22 V
24 72 V
24 25 V
25 -33 V
24 -13 V
24 -140 V
24 177 V
25 -75 V
24 -19 V
24 101 V
25 33 V
24 -40 V
24 -116 V
25 100 V
24 148 V
24 -177 V
25 -12 V
24 -8 V
24 -31 V
25 83 V
24 -15 V
24 0 V
25 -37 V
24 -25 V
24 -33 V
25 155 V
24 -56 V
24 0 V
25 -119 V
24 81 V
24 86 V
24 -69 V
25 -25 V
24 -66 V
24 87 V
25 12 V
24 61 V
24 -44 V
25 50 V
24 26 V
24 11 V
25 -169 V
24 128 V
24 -29 V
25 3 V
24 -136 V
24 182 V
25 -70 V
24 -99 V
24 26 V
25 153 V
24 -239 V
24 127 V
25 -135 V
24 191 V
24 -150 V
24 20 V
25 81 V
3297 3175 L
24 196 V
25 105 V
24 31 V
24 -210 V
25 -74 V
24 53 V
24 -21 V
25 75 V
24 56 V
24 -136 V
25 -21 V
24 76 V
24 -50 V
25 114 V
24 -23 V
24 -12 V
25 -37 V
24 -4 V
24 -8 V
25 -143 V
24 81 V
24 264 V
24 -224 V
25 80 V
24 -9 V
24 -42 V
25 100 V
24 11 V
24 -78 V
25 56 V
24 -61 V
24 -215 V
25 130 V
24 -87 V
24 132 V
25 -32 V
24 121 V
24 107 V
25 -107 V
24 -29 V
24 -43 V
25 -82 V
24 188 V
24 -153 V
25 195 V
24 -85 V
24 -97 V
24 -3 V
25 -58 V
24 149 V
24 -2 V
25 43 V
24 -120 V
24 -37 V
25 -91 V
24 25 V
24 -43 V
25 143 V
24 -143 V
24 191 V
25 -12 V
24 -95 V
24 223 V
25 -30 V
24 -247 V
24 46 V
25 99 V
24 -12 V
24 12 V
25 -25 V
24 116 V
24 -74 V
24 42 V
25 -105 V
24 0 V
24 85 V
25 -144 V
24 182 V
24 16 V
25 -93 V
24 -57 V
24 159 V
25 -52 V
24 -62 V
24 106 V
25 -167 V
24 0 V
24 -13 V
25 13 V
24 104 V
24 92 V
25 -81 V
24 -161 V
24 98 V
25 13 V
24 -30 V
24 71 V
24 33 V
25 -24 V
24 26 V
24 -121 V
25 45 V
24 -33 V
24 -85 V
5851 3260 L
24 86 V
24 11 V
25 3 V
24 0 V
24 -32 V
25 43 V
24 -306 V
24 190 V
25 -121 V
24 126 V
24 12 V
25 -14 V
24 14 V
24 -12 V
25 -20 V
24 49 V
24 -74 V
24 27 V
25 86 V
24 -112 V
24 19 V
25 -6 V
24 -95 V
24 121 V
25 88 V
24 -120 V
24 -61 V
25 166 V
24 -40 V
24 -194 V
25 74 V
24 183 V
24 -162 V
25 -55 V
24 134 V
24 -67 V
25 -53 V
24 54 V
24 95 V
25 -108 V
24 71 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
792 600 M
24 20 V
25 1402 V
24 158 V
24 -872 V
25 709 V
938 975 L
962 825 L
25 550 V
24 -179 V
24 -563 V
25 612 V
24 -613 V
24 65 V
25 401 V
24 -434 V
24 34 V
25 458 V
24 -462 V
24 2 V
25 -32 V
24 33 V
24 171 V
25 305 V
24 -184 V
24 -389 V
24 697 V
25 -465 V
24 -199 V
24 287 V
25 -192 V
24 76 V
24 153 V
25 -291 V
24 213 V
24 119 V
25 218 V
24 -330 V
24 -48 V
25 96 V
24 -163 V
24 60 V
25 -75 V
24 -124 V
24 295 V
25 -327 V
24 334 V
24 94 V
25 -296 V
24 34 V
24 -30 V
24 -104 V
25 274 V
24 571 V
24 -815 V
25 333 V
24 -168 V
24 -194 V
25 134 V
24 -48 V
24 142 V
25 -129 V
24 -100 V
24 69 V
25 146 V
24 70 V
24 -254 V
25 132 V
24 -63 V
24 39 V
25 -41 V
24 199 V
24 -174 V
25 -155 V
24 236 V
24 -204 V
24 295 V
25 -128 V
24 353 V
24 -418 V
25 32 V
24 26 V
24 -63 V
25 137 V
24 22 V
24 -66 V
25 296 V
24 -455 V
24 37 V
25 -35 V
24 246 V
24 -248 V
25 497 V
24 -198 V
24 -70 V
25 -132 V
24 -93 V
24 337 V
25 -199 V
24 22 V
24 365 V
24 122 V
25 -547 V
24 0 V
24 -10 V
25 62 V
24 118 V
24 -67 V
25 75 V
24 -345 V
24 465 V
25 -398 V
3516 770 L
24 442 V
25 -39 V
24 -444 V
24 4 V
25 -133 V
24 33 V
24 329 V
25 -92 V
24 -238 V
24 192 V
25 -90 V
24 142 V
24 -246 V
24 -30 V
25 33 V
24 362 V
24 88 V
25 -420 V
24 283 V
24 -281 V
25 255 V
24 -70 V
24 28 V
25 -278 V
24 442 V
24 -442 V
25 65 V
24 225 V
24 10 V
25 -268 V
24 346 V
24 -209 V
25 -104 V
24 -2 V
24 175 V
25 106 V
24 -344 V
24 236 V
24 -74 V
25 180 V
24 -248 V
24 98 V
25 -192 V
24 193 V
24 -61 V
25 254 V
24 -90 V
24 -156 V
25 -78 V
24 324 V
24 -130 V
25 -256 V
24 313 V
24 -281 V
25 188 V
24 -187 V
24 104 V
25 -106 V
24 94 V
24 303 V
25 308 V
24 -355 V
24 -75 V
24 75 V
25 -348 V
24 67 V
24 26 V
25 330 V
24 -260 V
24 176 V
25 -273 V
24 284 V
24 -289 V
25 62 V
24 313 V
24 -256 V
25 -116 V
24 130 V
24 -129 V
25 97 V
24 -9 V
24 131 V
25 -101 V
24 -114 V
24 94 V
25 -99 V
24 -30 V
24 295 V
24 -33 V
25 -237 V
24 294 V
24 -353 V
25 -33 V
24 454 V
24 -421 V
25 194 V
24 14 V
24 -61 V
25 -117 V
24 286 V
24 -95 V
25 61 V
24 -110 V
24 -39 V
6070 1011 L
24 76 V
24 -455 V
25 279 V
24 11 V
24 -225 V
25 -65 V
24 62 V
24 167 V
24 -228 V
25 62 V
24 143 V
24 -106 V
25 508 V
24 -298 V
24 -110 V
25 470 V
24 -426 V
24 -242 V
25 -34 V
24 166 V
24 -99 V
25 378 V
24 -414 V
24 314 V
25 408 V
24 -490 V
24 -136 V
25 383 V
24 -181 V
24 -170 V
25 255 V
24 -187 V
792 600 Pls
816 620 Pls
841 2022 Pls
865 2180 Pls
889 1308 Pls
914 2017 Pls
938 975 Pls
962 825 Pls
987 1375 Pls
1011 1196 Pls
1035 633 Pls
1060 1245 Pls
1084 632 Pls
1108 697 Pls
1133 1098 Pls
1157 664 Pls
1181 698 Pls
1206 1156 Pls
1230 694 Pls
1254 696 Pls
1279 664 Pls
1303 697 Pls
1327 868 Pls
1352 1173 Pls
1376 989 Pls
1400 600 Pls
1424 1297 Pls
1449 832 Pls
1473 633 Pls
1497 920 Pls
1522 728 Pls
1546 804 Pls
1570 957 Pls
1595 666 Pls
1619 879 Pls
1643 998 Pls
1668 1216 Pls
1692 886 Pls
1716 838 Pls
1741 934 Pls
1765 771 Pls
1789 831 Pls
1814 756 Pls
1838 632 Pls
1862 927 Pls
1887 600 Pls
1911 934 Pls
1935 1028 Pls
1960 732 Pls
1984 766 Pls
2008 736 Pls
2032 632 Pls
2057 906 Pls
2081 1477 Pls
2105 662 Pls
2130 995 Pls
2154 827 Pls
2178 633 Pls
2203 767 Pls
2227 719 Pls
2251 861 Pls
2276 732 Pls
2300 632 Pls
2324 701 Pls
2349 847 Pls
2373 917 Pls
2397 663 Pls
2422 795 Pls
2446 732 Pls
2470 771 Pls
2495 730 Pls
2519 929 Pls
2543 755 Pls
2568 600 Pls
2592 836 Pls
2616 632 Pls
2640 927 Pls
2665 799 Pls
2689 1152 Pls
2713 734 Pls
2738 766 Pls
2762 792 Pls
2786 729 Pls
2811 866 Pls
2835 888 Pls
2859 822 Pls
2884 1118 Pls
2908 663 Pls
2932 700 Pls
2957 665 Pls
2981 911 Pls
3005 663 Pls
3030 1160 Pls
3054 962 Pls
3078 892 Pls
3103 760 Pls
3127 667 Pls
3151 1004 Pls
3176 805 Pls
3200 827 Pls
3224 1192 Pls
3248 1314 Pls
3273 767 Pls
3297 767 Pls
3321 757 Pls
3346 819 Pls
3370 937 Pls
3394 870 Pls
3419 945 Pls
3443 600 Pls
3467 1065 Pls
3492 667 Pls
3516 770 Pls
3540 1212 Pls
3565 1173 Pls
3589 729 Pls
3613 733 Pls
3638 600 Pls
3662 633 Pls
3686 962 Pls
3711 870 Pls
3735 632 Pls
3759 824 Pls
3784 734 Pls
3808 876 Pls
3832 630 Pls
3856 600 Pls
3881 633 Pls
3905 995 Pls
3929 1083 Pls
3954 663 Pls
3978 946 Pls
4002 665 Pls
4027 920 Pls
4051 850 Pls
4075 878 Pls
4100 600 Pls
4124 1042 Pls
4148 600 Pls
4173 665 Pls
4197 890 Pls
4221 900 Pls
4246 632 Pls
4270 978 Pls
4294 769 Pls
4319 665 Pls
4343 663 Pls
4367 838 Pls
4392 944 Pls
4416 600 Pls
4440 836 Pls
4464 762 Pls
4489 942 Pls
4513 694 Pls
4537 792 Pls
4562 600 Pls
4586 793 Pls
4610 732 Pls
4635 986 Pls
4659 896 Pls
4683 740 Pls
4708 662 Pls
4732 986 Pls
4756 856 Pls
4781 600 Pls
4805 913 Pls
4829 632 Pls
4854 820 Pls
4878 633 Pls
4902 737 Pls
4927 631 Pls
4951 725 Pls
4975 1028 Pls
5000 1336 Pls
5024 981 Pls
5048 906 Pls
5072 981 Pls
5097 633 Pls
5121 700 Pls
5145 726 Pls
5170 1056 Pls
5194 796 Pls
5218 972 Pls
5243 699 Pls
5267 983 Pls
5291 694 Pls
5316 756 Pls
5340 1069 Pls
5364 813 Pls
5389 697 Pls
5413 827 Pls
5437 698 Pls
5462 795 Pls
5486 786 Pls
5510 917 Pls
5535 816 Pls
5559 702 Pls
5583 796 Pls
5608 697 Pls
5632 667 Pls
5656 962 Pls
5680 929 Pls
5705 692 Pls
5729 986 Pls
5753 633 Pls
5778 600 Pls
5802 1054 Pls
5826 633 Pls
5851 827 Pls
5875 841 Pls
5899 780 Pls
5924 663 Pls
5948 949 Pls
5972 854 Pls
5997 915 Pls
6021 805 Pls
6045 766 Pls
6070 1011 Pls
6094 1087 Pls
6118 632 Pls
6143 911 Pls
6167 922 Pls
6191 697 Pls
6216 632 Pls
6240 694 Pls
6264 861 Pls
6288 633 Pls
6313 695 Pls
6337 838 Pls
6361 732 Pls
6386 1240 Pls
6410 942 Pls
6434 832 Pls
6459 1302 Pls
6483 876 Pls
6507 634 Pls
6532 600 Pls
6556 766 Pls
6580 667 Pls
6605 1045 Pls
6629 631 Pls
6653 945 Pls
6678 1353 Pls
6702 863 Pls
6726 727 Pls
6751 1110 Pls
6775 929 Pls
6799 759 Pls
6824 1014 Pls
6848 827 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
792 600 M
24 1889 V
25 -490 V
24 2429 V
889 3111 L
25 870 V
938 2101 L
24 978 V
987 1881 L
24 929 V
24 -1262 V
25 887 V
24 -1352 V
24 750 V
25 -934 V
24 506 V
24 -478 V
25 621 V
24 -728 V
24 611 V
25 -639 V
24 516 V
24 -440 V
25 507 V
24 -743 V
24 322 V
24 111 V
25 464 V
24 -635 V
24 473 V
25 -639 V
24 857 V
24 -790 V
25 734 V
24 -836 V
24 704 V
25 -523 V
24 107 V
24 27 V
25 562 V
24 -251 V
24 533 V
25 -814 V
24 585 V
24 -925 V
25 587 V
24 -451 V
24 524 V
25 -462 V
24 733 V
24 -587 V
24 272 V
25 -238 V
24 857 V
2105 693 L
25 454 V
24 -223 V
24 613 V
25 -770 V
24 -137 V
24 362 V
25 596 V
24 -793 V
24 850 V
25 -829 V
24 609 V
24 -571 V
25 687 V
24 -118 V
24 752 V
2495 665 L
24 462 V
24 -465 V
25 1161 V
2592 735 L
24 376 V
24 -348 V
25 866 V
24 -442 V
24 283 V
25 -671 V
24 440 V
24 -414 V
25 605 V
24 -702 V
24 570 V
25 -284 V
24 243 V
24 239 V
25 467 V
24 -673 V
24 255 V
25 -484 V
24 824 V
24 -831 V
25 473 V
24 -693 V
24 263 V
25 85 V
24 261 V
24 -460 V
24 233 V
25 -47 V
24 535 V
3321 631 L
25 563 V
24 -319 V
24 467 V
25 -328 V
24 422 V
24 -239 V
25 751 V
24 -906 V
24 475 V
25 -479 V
24 464 V
24 -504 V
25 310 V
24 -545 V
24 726 V
25 -417 V
24 371 V
24 -811 V
25 838 V
24 -559 V
24 -68 V
24 263 V
25 497 V
24 -542 V
24 954 V
3954 632 L
24 440 V
24 -375 V
25 318 V
24 -384 V
24 943 V
25 -809 V
24 650 V
24 -717 V
25 588 V
24 -396 V
24 219 V
25 -412 V
24 627 V
24 -218 V
25 475 V
24 -981 V
24 985 V
25 -891 V
24 414 V
24 -441 V
24 160 V
25 252 V
24 240 V
24 -144 V
25 567 V
24 -788 V
24 733 V
25 -990 V
24 496 V
24 3 V
25 149 V
24 27 V
24 91 V
25 -638 V
24 958 V
24 -893 V
25 466 V
24 -557 V
24 828 V
4927 600 L
24 406 V
24 -175 V
25 605 V
24 -741 V
24 1060 V
5072 727 L
25 238 V
24 -299 V
24 280 V
25 496 V
24 269 V
5218 631 L
25 990 V
24 23 V
24 27 V
5316 600 L
24 625 V
24 -564 V
25 815 V
24 -681 V
24 557 V
25 -752 V
24 497 V
24 -465 V
25 307 V
24 137 V
24 341 V
25 -817 V
24 775 V
24 -512 V
24 396 V
25 -474 V
24 749 V
24 -476 V
25 645 V
24 -843 V
24 743 V
25 -646 V
24 246 V
24 -483 V
25 578 V
24 -603 V
24 635 V
25 -636 V
24 899 V
24 -893 V
25 790 V
24 -403 V
24 608 V
25 -508 V
24 250 V
24 -772 V
25 450 V
24 -484 V
24 655 V
24 -485 V
25 338 V
24 -131 V
24 317 V
25 -287 V
24 795 V
6434 832 L
25 771 V
24 -347 V
24 423 V
25 -730 V
24 813 V
24 -589 V
25 660 V
6629 694 L
24 1045 V
25 -454 V
24 303 V
24 -798 V
25 693 V
24 -488 V
24 430 V
25 -342 V
24 263 V
792 600 BoxF
816 2489 BoxF
841 1999 BoxF
865 4428 BoxF
889 3111 BoxF
914 3981 BoxF
938 2101 BoxF
962 3079 BoxF
987 1881 BoxF
1011 2810 BoxF
1035 1548 BoxF
1060 2435 BoxF
1084 1083 BoxF
1108 1833 BoxF
1133 899 BoxF
1157 1405 BoxF
1181 927 BoxF
1206 1548 BoxF
1230 820 BoxF
1254 1431 BoxF
1279 792 BoxF
1303 1308 BoxF
1327 868 BoxF
1352 1375 BoxF
1376 632 BoxF
1400 954 BoxF
1424 1065 BoxF
1449 1529 BoxF
1473 894 BoxF
1497 1367 BoxF
1522 728 BoxF
1546 1585 BoxF
1570 795 BoxF
1595 1529 BoxF
1619 693 BoxF
1643 1397 BoxF
1668 874 BoxF
1692 981 BoxF
1716 1008 BoxF
1741 1570 BoxF
1765 1319 BoxF
1789 1852 BoxF
1814 1038 BoxF
1838 1623 BoxF
1862 698 BoxF
1887 1285 BoxF
1911 834 BoxF
1935 1358 BoxF
1960 896 BoxF
1984 1629 BoxF
2008 1042 BoxF
2032 1314 BoxF
2057 1076 BoxF
2081 1933 BoxF
2105 693 BoxF
2130 1147 BoxF
2154 924 BoxF
2178 1537 BoxF
2203 767 BoxF
2227 630 BoxF
2251 992 BoxF
2276 1588 BoxF
2300 795 BoxF
2324 1645 BoxF
2349 816 BoxF
2373 1425 BoxF
2397 854 BoxF
2422 1541 BoxF
2446 1423 BoxF
2470 2175 BoxF
2495 665 BoxF
2519 1127 BoxF
2543 662 BoxF
2568 1823 BoxF
2592 735 BoxF
2616 1111 BoxF
2640 763 BoxF
2665 1629 BoxF
2689 1187 BoxF
2713 1470 BoxF
2738 799 BoxF
2762 1239 BoxF
2786 825 BoxF
2811 1430 BoxF
2835 728 BoxF
2859 1298 BoxF
2884 1014 BoxF
2908 1257 BoxF
2932 1496 BoxF
2957 1963 BoxF
2981 1290 BoxF
3005 1545 BoxF
3030 1061 BoxF
3054 1885 BoxF
3078 1054 BoxF
3103 1527 BoxF
3127 834 BoxF
3151 1097 BoxF
3176 1182 BoxF
3200 1443 BoxF
3224 983 BoxF
3248 1216 BoxF
3273 1169 BoxF
3297 1704 BoxF
3321 631 BoxF
3346 1194 BoxF
3370 875 BoxF
3394 1342 BoxF
3419 1014 BoxF
3443 1436 BoxF
3467 1197 BoxF
3492 1948 BoxF
3516 1042 BoxF
3540 1517 BoxF
3565 1038 BoxF
3589 1502 BoxF
3613 998 BoxF
3638 1308 BoxF
3662 763 BoxF
3686 1489 BoxF
3711 1072 BoxF
3735 1443 BoxF
3759 632 BoxF
3784 1470 BoxF
3808 911 BoxF
3832 843 BoxF
3856 1106 BoxF
3881 1603 BoxF
3905 1061 BoxF
3929 2015 BoxF
3954 632 BoxF
3978 1072 BoxF
4002 697 BoxF
4027 1015 BoxF
4051 631 BoxF
4075 1574 BoxF
4100 765 BoxF
4124 1415 BoxF
4148 698 BoxF
4173 1286 BoxF
4197 890 BoxF
4221 1109 BoxF
4246 697 BoxF
4270 1324 BoxF
4294 1106 BoxF
4319 1581 BoxF
4343 600 BoxF
4367 1585 BoxF
4392 694 BoxF
4416 1108 BoxF
4440 667 BoxF
4464 827 BoxF
4489 1079 BoxF
4513 1319 BoxF
4537 1175 BoxF
4562 1742 BoxF
4586 954 BoxF
4610 1687 BoxF
4635 697 BoxF
4659 1193 BoxF
4683 1196 BoxF
4708 1345 BoxF
4732 1372 BoxF
4756 1463 BoxF
4781 825 BoxF
4805 1783 BoxF
4829 890 BoxF
4854 1356 BoxF
4878 799 BoxF
4902 1627 BoxF
4927 600 BoxF
4951 1006 BoxF
4975 831 BoxF
5000 1436 BoxF
5024 695 BoxF
5048 1755 BoxF
5072 727 BoxF
5097 965 BoxF
5121 666 BoxF
5145 946 BoxF
5170 1442 BoxF
5194 1711 BoxF
5218 631 BoxF
5243 1621 BoxF
5267 1644 BoxF
5291 1671 BoxF
5316 600 BoxF
5340 1225 BoxF
5364 661 BoxF
5389 1476 BoxF
5413 795 BoxF
5437 1352 BoxF
5462 600 BoxF
5486 1097 BoxF
5510 632 BoxF
5535 939 BoxF
5559 1076 BoxF
5583 1417 BoxF
5608 600 BoxF
5632 1375 BoxF
5656 863 BoxF
5680 1259 BoxF
5705 785 BoxF
5729 1534 BoxF
5753 1058 BoxF
5778 1703 BoxF
5802 860 BoxF
5826 1603 BoxF
5851 957 BoxF
5875 1203 BoxF
5899 720 BoxF
5924 1298 BoxF
5948 695 BoxF
5972 1330 BoxF
5997 694 BoxF
6021 1593 BoxF
6045 700 BoxF
6070 1490 BoxF
6094 1087 BoxF
6118 1695 BoxF
6143 1187 BoxF
6167 1437 BoxF
6191 665 BoxF
6216 1115 BoxF
6240 631 BoxF
6264 1286 BoxF
6288 801 BoxF
6313 1139 BoxF
6337 1008 BoxF
6361 1325 BoxF
6386 1038 BoxF
6410 1833 BoxF
6434 832 BoxF
6459 1603 BoxF
6483 1256 BoxF
6507 1679 BoxF
6532 949 BoxF
6556 1762 BoxF
6580 1173 BoxF
6605 1833 BoxF
6629 694 BoxF
6653 1739 BoxF
6678 1285 BoxF
6702 1588 BoxF
6726 790 BoxF
6751 1483 BoxF
6775 995 BoxF
6799 1425 BoxF
6824 1083 BoxF
6848 1346 BoxF
6348 3877 BoxF
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
