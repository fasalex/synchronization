%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/267s6-g8-n50-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Sun Aug 10 12:08:08 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/267s6-g8-n50-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Aug 10 12:08:08 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
780 600 M
6080 0 V
stroke
0.500 UL
LTb
780 600 M
63 0 V
6017 0 R
-63 0 V
stroke
660 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1068 M
6080 0 V
stroke
0.500 UL
LTb
780 1068 M
63 0 V
6017 0 R
-63 0 V
stroke
660 1068 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1537 M
6080 0 V
stroke
0.500 UL
LTb
780 1537 M
63 0 V
6017 0 R
-63 0 V
stroke
660 1537 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2005 M
6080 0 V
stroke
0.500 UL
LTb
780 2005 M
63 0 V
6017 0 R
-63 0 V
stroke
660 2005 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2473 M
6080 0 V
stroke
0.500 UL
LTb
780 2473 M
63 0 V
6017 0 R
-63 0 V
stroke
660 2473 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2941 M
6080 0 V
stroke
0.500 UL
LTb
780 2941 M
63 0 V
6017 0 R
-63 0 V
stroke
660 2941 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3410 M
6080 0 V
stroke
0.500 UL
LTb
780 3410 M
63 0 V
6017 0 R
-63 0 V
stroke
660 3410 M
[ [(Helvetica) 200.0 0.0 true true 0 (60)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3878 M
4697 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
780 3878 M
63 0 V
6017 0 R
-63 0 V
stroke
660 3878 M
[ [(Helvetica) 200.0 0.0 true true 0 (70)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 4346 M
4697 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
780 4346 M
63 0 V
6017 0 R
-63 0 V
stroke
660 4346 M
[ [(Helvetica) 200.0 0.0 true true 0 (80)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 600 M
0 3840 V
stroke
0.500 UL
LTb
780 600 M
0 63 V
0 3777 R
0 -63 V
stroke
780 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
1996 600 M
0 3840 V
stroke
0.500 UL
LTb
1996 600 M
0 63 V
0 3777 R
0 -63 V
stroke
1996 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3212 600 M
0 3840 V
stroke
0.500 UL
LTb
3212 600 M
0 63 V
0 3777 R
0 -63 V
stroke
3212 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4428 600 M
0 3840 V
stroke
0.500 UL
LTb
4428 600 M
0 63 V
0 3777 R
0 -63 V
stroke
4428 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5644 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5644 600 M
0 63 V
0 3777 R
0 -63 V
stroke
5644 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3820 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3820 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
792 1068 M
24 968 V
841 960 L
24 257 V
24 615 V
25 106 V
24 22 V
24 127 V
25 12 V
24 -98 V
24 -63 V
25 -110 V
24 -183 V
24 209 V
25 -159 V
24 185 V
24 21 V
25 -37 V
24 -10 V
24 -65 V
25 -9 V
24 -85 V
24 -17 V
25 8 V
24 -17 V
24 -12 V
24 220 V
25 -348 V
24 223 V
24 -37 V
25 74 V
24 -37 V
24 10 V
25 171 V
24 -125 V
24 233 V
25 155 V
24 -258 V
24 347 V
25 -44 V
24 90 V
24 70 V
25 -240 V
24 60 V
24 82 V
25 -13 V
24 -80 V
24 439 V
25 -333 V
24 -13 V
24 -10 V
24 -157 V
25 37 V
24 192 V
24 0 V
25 14 V
24 59 V
24 -109 V
25 -72 V
24 345 V
24 -502 V
25 430 V
24 -357 V
24 23 V
25 -11 V
24 68 V
24 -69 V
25 -235 V
24 141 V
24 -147 V
25 87 V
24 -133 V
24 125 V
25 -38 V
24 60 V
24 -43 V
24 37 V
25 25 V
24 -62 V
24 -11 V
25 22 V
24 101 V
24 -25 V
25 -139 V
24 164 V
24 -149 V
25 91 V
24 106 V
24 -48 V
25 -13 V
24 0 V
24 13 V
25 0 V
24 60 V
24 0 V
25 107 V
24 -168 V
24 155 V
25 13 V
24 -83 V
24 83 V
24 13 V
25 23 V
24 22 V
24 27 V
25 73 V
24 -37 V
3394 2365 L
25 44 V
24 14 V
24 -81 V
25 96 V
24 -155 V
24 183 V
25 -124 V
24 10 V
24 485 V
25 378 V
24 227 V
24 -1055 V
25 -165 V
24 37 V
24 106 V
25 28 V
24 -87 V
24 -84 V
24 -11 V
25 -63 V
24 25 V
24 13 V
25 36 V
24 -12 V
24 47 V
25 -108 V
24 -114 V
24 162 V
25 -173 V
24 197 V
24 -134 V
25 25 V
24 165 V
24 -116 V
25 -186 V
24 66 V
24 84 V
25 -24 V
24 -60 V
24 84 V
25 -73 V
24 14 V
24 -65 V
24 62 V
25 37 V
24 -48 V
24 -114 V
25 199 V
24 -37 V
24 24 V
25 -160 V
24 577 V
24 290 V
25 255 V
24 246 V
24 214 V
25 210 V
24 64 V
24 110 V
25 123 V
24 -70 V
24 113 V
25 67 V
24 28 V
24 -1996 V
25 502 V
24 333 V
24 -1092 V
24 100 V
25 50 V
24 96 V
24 -11 V
25 -61 V
24 37 V
24 -61 V
25 -53 V
24 40 V
24 -37 V
25 135 V
24 -135 V
24 486 V
25 305 V
24 238 V
24 299 V
25 274 V
24 100 V
24 120 V
25 87 V
24 65 V
24 137 V
25 -1520 V
24 380 V
24 -496 V
24 6 V
25 395 V
24 288 V
24 137 V
25 236 V
24 141 V
24 190 V
25 196 V
24 215 V
24 -148 V
25 -1 V
5948 4158 L
24 -1225 V
25 -5 V
24 1323 V
24 -978 V
25 215 V
24 197 V
24 166 V
25 -1714 V
24 409 V
24 52 V
25 386 V
24 288 V
24 230 V
24 200 V
25 151 V
24 244 V
24 151 V
25 146 V
24 -597 V
24 78 V
25 79 V
24 -955 V
24 606 V
25 356 V
24 -28 V
24 247 V
25 120 V
24 106 V
24 -309 V
25 40 V
24 42 V
24 99 V
25 -19 V
24 7 V
24 -1683 V
25 -241 V
24 -85 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
792 641 M
24 739 V
841 888 L
24 -34 V
24 169 V
914 711 L
24 40 V
24 35 V
25 1 V
24 71 V
24 39 V
25 -143 V
24 -77 V
24 181 V
25 6 V
24 65 V
24 -106 V
25 37 V
24 -2 V
24 -35 V
25 109 V
24 -143 V
24 34 V
25 39 V
24 -4 V
24 -220 V
24 423 V
25 -345 V
24 -5 V
24 38 V
25 74 V
24 0 V
24 104 V
25 -75 V
24 -214 V
24 250 V
25 31 V
24 -245 V
24 465 V
25 -129 V
24 -139 V
24 384 V
25 -513 V
24 2 V
24 -2 V
25 210 V
24 -132 V
24 495 V
25 -572 V
24 70 V
24 39 V
24 -102 V
25 -77 V
24 323 V
24 -144 V
25 38 V
24 265 V
24 -339 V
25 -36 V
24 531 V
24 -528 V
25 671 V
24 -598 V
24 126 V
25 50 V
24 84 V
24 -164 V
25 -165 V
24 310 V
24 -134 V
25 173 V
24 -284 V
24 268 V
25 -23 V
24 -74 V
24 -239 V
24 111 V
25 34 V
24 -108 V
24 -1 V
25 -146 V
24 214 V
24 2 V
25 -103 V
24 209 V
24 -285 V
25 279 V
24 0 V
24 -138 V
25 -32 V
24 109 V
24 -77 V
25 -72 V
24 249 V
24 -107 V
25 0 V
24 -101 V
24 169 V
25 -33 V
24 -139 V
24 139 V
24 -105 V
25 70 V
24 104 V
24 -246 V
25 98 V
24 46 V
24 -72 V
25 67 V
24 -105 V
3467 854 L
25 232 V
24 -157 V
24 58 V
25 -242 V
24 177 V
24 722 V
25 625 V
24 241 V
24 -1481 V
25 -134 V
24 -148 V
24 177 V
25 -214 V
24 180 V
24 116 V
24 -331 V
25 38 V
24 -38 V
24 109 V
25 74 V
24 -38 V
24 104 V
25 -66 V
24 -107 V
24 176 V
25 -290 V
24 179 V
24 -30 V
25 72 V
24 161 V
24 -64 V
25 -169 V
24 138 V
24 -5 V
25 110 V
24 -69 V
24 3 V
25 0 V
24 -41 V
24 -27 V
24 -75 V
25 -37 V
24 71 V
24 -68 V
25 171 V
24 -101 V
24 -182 V
25 -37 V
24 918 V
24 340 V
25 491 V
24 230 V
24 208 V
25 366 V
24 174 V
24 79 V
25 135 V
24 -363 V
24 -173 V
25 -151 V
24 -332 V
24 1536 V
25 -421 V
24 -1505 V
5048 637 L
24 0 V
25 290 V
24 96 V
24 -203 V
25 112 V
24 -44 V
24 39 V
25 -176 V
24 33 V
24 37 V
25 172 V
24 -172 V
24 645 V
25 347 V
24 424 V
24 432 V
25 367 V
24 83 V
24 145 V
25 176 V
24 101 V
24 141 V
25 -2145 V
24 389 V
24 -666 V
24 -10 V
25 549 V
24 511 V
24 300 V
25 241 V
24 271 V
24 168 V
25 329 V
24 323 V
24 -216 V
25 217 V
24 251 V
24 -861 V
25 248 V
24 267 V
24 -1375 V
25 252 V
24 328 V
24 192 V
6143 783 L
24 510 V
24 27 V
25 570 V
24 304 V
24 319 V
24 359 V
25 141 V
24 439 V
24 279 V
25 134 V
24 -877 V
24 94 V
25 159 V
24 -1527 V
24 1103 V
25 475 V
24 -9 V
24 339 V
25 137 V
24 175 V
24 -512 V
25 128 V
24 97 V
24 128 V
25 -53 V
24 29 V
24 -2638 V
25 -259 V
24 106 V
792 641 Pls
816 1380 Pls
841 888 Pls
865 854 Pls
889 1023 Pls
914 711 Pls
938 751 Pls
962 786 Pls
987 787 Pls
1011 858 Pls
1035 897 Pls
1060 754 Pls
1084 677 Pls
1108 858 Pls
1133 864 Pls
1157 929 Pls
1181 823 Pls
1206 860 Pls
1230 858 Pls
1254 823 Pls
1279 932 Pls
1303 789 Pls
1327 823 Pls
1352 862 Pls
1376 858 Pls
1400 638 Pls
1424 1061 Pls
1449 716 Pls
1473 711 Pls
1497 749 Pls
1522 823 Pls
1546 823 Pls
1570 927 Pls
1595 852 Pls
1619 638 Pls
1643 888 Pls
1668 919 Pls
1692 674 Pls
1716 1139 Pls
1741 1010 Pls
1765 871 Pls
1789 1255 Pls
1814 742 Pls
1838 744 Pls
1862 742 Pls
1887 952 Pls
1911 820 Pls
1935 1315 Pls
1960 743 Pls
1984 813 Pls
2008 852 Pls
2032 750 Pls
2057 673 Pls
2081 996 Pls
2105 852 Pls
2130 890 Pls
2154 1155 Pls
2178 816 Pls
2203 780 Pls
2227 1311 Pls
2251 783 Pls
2276 1454 Pls
2300 856 Pls
2324 982 Pls
2349 1032 Pls
2373 1116 Pls
2397 952 Pls
2422 787 Pls
2446 1097 Pls
2470 963 Pls
2495 1136 Pls
2519 852 Pls
2543 1120 Pls
2568 1097 Pls
2592 1023 Pls
2616 784 Pls
2640 895 Pls
2665 929 Pls
2689 821 Pls
2713 820 Pls
2738 674 Pls
2762 888 Pls
2786 890 Pls
2811 787 Pls
2835 996 Pls
2859 711 Pls
2884 990 Pls
2908 990 Pls
2932 852 Pls
2957 820 Pls
2981 929 Pls
3005 852 Pls
3030 780 Pls
3054 1029 Pls
3078 922 Pls
3103 922 Pls
3127 821 Pls
3151 990 Pls
3176 957 Pls
3200 818 Pls
3224 957 Pls
3248 852 Pls
3273 922 Pls
3297 1026 Pls
3321 780 Pls
3346 878 Pls
3370 924 Pls
3394 852 Pls
3419 919 Pls
3443 814 Pls
3467 854 Pls
3492 1086 Pls
3516 929 Pls
3540 987 Pls
3565 745 Pls
3589 922 Pls
3613 1644 Pls
3638 2269 Pls
3662 2510 Pls
3686 1029 Pls
3711 895 Pls
3735 747 Pls
3759 924 Pls
3784 710 Pls
3808 890 Pls
3832 1006 Pls
3856 675 Pls
3881 713 Pls
3905 675 Pls
3929 784 Pls
3954 858 Pls
3978 820 Pls
4002 924 Pls
4027 858 Pls
4051 751 Pls
4075 927 Pls
4100 637 Pls
4124 816 Pls
4148 786 Pls
4173 858 Pls
4197 1019 Pls
4221 955 Pls
4246 786 Pls
4270 924 Pls
4294 919 Pls
4319 1029 Pls
4343 960 Pls
4367 963 Pls
4392 963 Pls
4416 922 Pls
4440 895 Pls
4464 820 Pls
4489 783 Pls
4513 854 Pls
4537 786 Pls
4562 957 Pls
4586 856 Pls
4610 674 Pls
4635 637 Pls
4659 1555 Pls
4683 1895 Pls
4708 2386 Pls
4732 2616 Pls
4756 2824 Pls
4781 3190 Pls
4805 3364 Pls
4829 3443 Pls
4854 3578 Pls
4878 3215 Pls
4902 3042 Pls
4927 2891 Pls
4951 2559 Pls
4975 4095 Pls
5000 3674 Pls
5024 2169 Pls
5048 637 Pls
5072 637 Pls
5097 927 Pls
5121 1023 Pls
5145 820 Pls
5170 932 Pls
5194 888 Pls
5218 927 Pls
5243 751 Pls
5267 784 Pls
5291 821 Pls
5316 993 Pls
5340 821 Pls
5364 1466 Pls
5389 1813 Pls
5413 2237 Pls
5437 2669 Pls
5462 3036 Pls
5486 3119 Pls
5510 3264 Pls
5535 3440 Pls
5559 3541 Pls
5583 3682 Pls
5608 1537 Pls
5632 1926 Pls
5656 1260 Pls
5680 1250 Pls
5705 1799 Pls
5729 2310 Pls
5753 2610 Pls
5778 2851 Pls
5802 3122 Pls
5826 3290 Pls
5851 3619 Pls
5875 3942 Pls
5899 3726 Pls
5924 3943 Pls
5948 4194 Pls
5972 3333 Pls
5997 3581 Pls
6021 3848 Pls
6045 2473 Pls
6070 2725 Pls
6094 3053 Pls
6118 3245 Pls
6143 783 Pls
6167 1293 Pls
6191 1320 Pls
6216 1890 Pls
6240 2194 Pls
6264 2513 Pls
6288 2872 Pls
6313 3013 Pls
6337 3452 Pls
6361 3731 Pls
6386 3865 Pls
6410 2988 Pls
6434 3082 Pls
6459 3241 Pls
6483 1714 Pls
6507 2817 Pls
6532 3292 Pls
6556 3283 Pls
6580 3622 Pls
6605 3759 Pls
6629 3934 Pls
6653 3422 Pls
6678 3550 Pls
6702 3647 Pls
6726 3775 Pls
6751 3722 Pls
6775 3751 Pls
6799 1113 Pls
6824 854 Pls
6848 960 Pls
6348 4077 Pls
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
792 844 M
24 68 V
25 -96 V
865 673 L
24 244 V
914 600 L
24 0 V
24 186 V
987 675 L
24 72 V
24 -36 V
25 -73 V
24 1 V
24 35 V
25 77 V
24 105 V
24 -33 V
25 -112 V
24 221 V
24 -146 V
25 -39 V
24 -71 V
24 -76 V
25 0 V
24 37 V
24 152 V
24 166 V
25 -200 V
24 -118 V
24 0 V
25 74 V
24 75 V
24 -113 V
25 35 V
24 -70 V
24 142 V
25 139 V
24 -282 V
24 233 V
25 174 V
24 -71 V
24 53 V
25 -213 V
24 -177 V
24 212 V
25 34 V
24 -245 V
24 483 V
25 -413 V
24 70 V
24 111 V
24 -251 V
25 109 V
24 -110 V
24 144 V
25 -180 V
24 347 V
24 -275 V
25 -36 V
24 675 V
24 -565 V
25 582 V
24 -655 V
24 343 V
25 -380 V
24 377 V
24 -96 V
25 -317 V
24 390 V
24 -136 V
25 -4 V
24 -106 V
24 238 V
25 -27 V
24 -179 V
24 45 V
24 -184 V
25 -37 V
24 74 V
24 36 V
25 76 V
24 102 V
24 -179 V
25 -109 V
24 432 V
24 -358 V
25 139 V
24 177 V
24 -210 V
25 -143 V
24 109 V
24 -2 V
25 36 V
24 -109 V
24 251 V
25 -36 V
24 -212 V
24 210 V
25 -105 V
24 39 V
24 -39 V
24 37 V
25 -2 V
24 34 V
24 4 V
25 95 V
24 -203 V
24 0 V
25 246 V
24 -176 V
24 4 V
25 94 V
24 -239 V
3540 882 L
25 -246 V
24 71 V
24 847 V
25 590 V
24 320 V
3686 779 L
25 -105 V
24 0 V
24 178 V
25 -142 V
24 144 V
24 -107 V
24 -72 V
25 -75 V
24 0 V
24 37 V
25 -37 V
24 256 V
24 -40 V
25 -142 V
24 -36 V
24 144 V
25 -70 V
24 212 V
24 -287 V
25 0 V
24 243 V
24 110 V
25 -279 V
24 177 V
24 -146 V
25 -71 V
24 109 V
24 74 V
25 0 V
24 -147 V
24 -70 V
24 109 V
25 37 V
24 144 V
24 -178 V
25 173 V
24 -212 V
24 -73 V
25 74 V
24 752 V
24 487 V
25 412 V
24 298 V
24 203 V
25 207 V
24 164 V
24 57 V
25 217 V
24 -72 V
24 126 V
25 156 V
24 46 V
24 -2723 V
25 737 V
24 366 V
5048 711 L
24 -37 V
25 180 V
24 -8 V
24 -136 V
25 222 V
24 -188 V
24 -108 V
25 77 V
24 145 V
24 -111 V
25 103 V
24 -139 V
24 530 V
25 487 V
24 282 V
24 463 V
25 431 V
24 91 V
24 236 V
25 179 V
24 60 V
24 38 V
25 -2065 V
24 483 V
24 -831 V
24 -7 V
25 655 V
24 393 V
24 275 V
25 380 V
24 150 V
24 300 V
25 311 V
24 287 V
24 -189 V
25 326 V
24 163 V
24 -1333 V
25 -1 V
24 178 V
24 -1812 V
25 1533 V
24 330 V
24 126 V
6143 600 L
24 660 V
24 -71 V
25 505 V
24 -138 V
24 803 V
24 434 V
25 291 V
24 233 V
24 323 V
25 270 V
24 -1110 V
24 -193 V
25 -306 V
24 -587 V
24 937 V
25 527 V
24 40 V
24 295 V
25 221 V
24 167 V
24 -584 V
25 176 V
24 74 V
24 135 V
25 57 V
24 -20 V
6799 942 L
25 -160 V
24 -110 V
stroke
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
