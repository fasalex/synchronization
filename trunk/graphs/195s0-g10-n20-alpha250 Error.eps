%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/195s0-g10-n20-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Fri Jul 25 15:39:45 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/195s0-g10-n20-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jul 25 15:39:45 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
660 600 M
6200 0 V
stroke
0.500 UL
LTb
660 600 M
63 0 V
6137 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 540 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
660 1063 M
6200 0 V
stroke
0.500 UL
LTb
660 1063 M
63 0 V
6137 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 540 1063 M
[ [(Helvetica) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
660 1525 M
6200 0 V
stroke
0.500 UL
LTb
660 1525 M
63 0 V
6137 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 540 1525 M
[ [(Helvetica) 200.0 0.0 true true 0 (2)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
660 1988 M
6200 0 V
stroke
0.500 UL
LTb
660 1988 M
63 0 V
6137 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 540 1988 M
[ [(Helvetica) 200.0 0.0 true true 0 (3)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
660 2451 M
6200 0 V
stroke
0.500 UL
LTb
660 2451 M
63 0 V
6137 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 540 2451 M
[ [(Helvetica) 200.0 0.0 true true 0 (4)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
660 2913 M
6200 0 V
stroke
0.500 UL
LTb
660 2913 M
63 0 V
6137 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 540 2913 M
[ [(Helvetica) 200.0 0.0 true true 0 (5)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
660 3376 M
6200 0 V
stroke
0.500 UL
LTb
660 3376 M
63 0 V
6137 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 540 3376 M
[ [(Helvetica) 200.0 0.0 true true 0 (6)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
660 3839 M
4817 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
660 3839 M
63 0 V
6137 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 540 3839 M
[ [(Helvetica) 200.0 0.0 true true 0 (7)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
660 4301 M
4817 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
660 4301 M
63 0 V
6137 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 540 4301 M
[ [(Helvetica) 200.0 0.0 true true 0 (8)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
660 600 M
0 3840 V
stroke
0.500 UL
LTb
660 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 660 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
1900 600 M
0 3840 V
stroke
0.500 UL
LTb
1900 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 1900 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3140 600 M
0 3840 V
stroke
0.500 UL
LTb
3140 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3140 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4380 600 M
0 3840 V
stroke
0.500 UL
LTb
4380 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4380 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5620 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5620 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5620 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
660 4440 N
660 600 L
6200 0 V
0 3840 V
-6200 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3760 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3760 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
672 895 M
25 815 V
25 -364 V
747 979 L
25 373 V
24 0 V
821 979 L
25 379 V
871 976 L
25 376 V
920 600 L
25 746 V
25 822 V
995 976 L
25 -376 V
24 778 V
25 -778 V
25 0 V
25 771 V
25 -771 V
24 376 V
25 402 V
25 -402 V
25 3 V
25 3 V
24 -6 V
25 -376 V
25 778 V
25 -778 V
25 752 V
24 -752 V
25 771 V
25 -771 V
25 1166 V
1516 600 L
24 0 V
25 386 V
25 -386 V
25 746 V
25 32 V
24 -32 V
25 -360 V
25 771 V
25 -775 V
25 370 V
24 -370 V
25 -3 V
25 399 V
25 -392 V
25 -4 V
24 -382 V
25 1157 V
25 -781 V
25 -376 V
25 386 V
24 -4 V
25 -382 V
25 386 V
25 -7 V
25 -379 V
24 376 V
25 0 V
25 -376 V
25 386 V
25 -386 V
24 771 V
25 -392 V
25 -379 V
25 778 V
25 777 V
2408 600 L
25 379 V
25 3 V
25 383 V
25 -765 V
24 386 V
25 -386 V
25 382 V
25 389 V
25 -389 V
24 -382 V
25 778 V
25 -402 V
25 10 V
25 385 V
24 339 V
25 -731 V
25 392 V
25 -395 V
25 -376 V
24 386 V
25 -386 V
25 376 V
25 402 V
25 -32 V
24 -746 V
25 1157 V
3078 600 L
25 752 V
25 414 V
3152 600 L
25 0 V
25 771 V
25 -771 V
25 386 V
24 780 V
25 -790 V
25 -376 V
25 0 V
25 376 V
24 6 V
25 4 V
25 -386 V
25 752 V
25 -752 V
24 382 V
25 370 V
25 26 V
25 -778 V
25 382 V
24 -382 V
25 382 V
25 370 V
25 405 V
25 -781 V
24 10 V
25 -4 V
25 -382 V
25 382 V
25 0 V
24 -6 V
25 -376 V
25 382 V
25 0 V
25 370 V
24 -366 V
25 379 V
25 -765 V
25 386 V
25 -386 V
24 386 V
25 -4 V
25 -382 V
25 0 V
25 0 V
24 0 V
25 771 V
25 -385 V
25 -10 V
25 -376 V
24 379 V
25 3 V
25 4 V
25 385 V
25 -395 V
24 6 V
25 -382 V
25 376 V
25 3 V
25 787 V
4640 600 L
25 778 V
25 388 V
25 -790 V
25 -376 V
24 778 V
25 -32 V
25 -746 V
25 771 V
25 -771 V
24 379 V
25 7 V
25 -10 V
25 790 V
25 -780 V
24 -4 V
25 -3 V
25 1176 V
5087 982 L
25 -3 V
24 0 V
25 379 V
25 -6 V
25 -366 V
25 -386 V
24 379 V
25 3 V
25 0 V
25 -382 V
25 386 V
24 -10 V
25 -376 V
25 379 V
25 -379 V
25 0 V
24 1166 V
5533 600 L
25 379 V
25 0 V
25 392 V
24 -771 V
25 386 V
25 -10 V
25 -376 V
25 1157 V
24 -775 V
25 -6 V
25 781 V
5831 600 L
25 778 V
24 -778 V
25 376 V
25 -376 V
25 382 V
25 -3 V
24 399 V
25 -399 V
25 3 V
25 -3 V
25 -379 V
24 376 V
25 -376 V
25 382 V
25 0 V
25 -3 V
24 399 V
25 -32 V
25 25 V
25 -771 V
25 376 V
24 10 V
25 1169 V
6426 979 L
25 392 V
25 -771 V
24 0 V
25 386 V
25 0 V
25 360 V
25 -367 V
24 386 V
25 6 V
25 -392 V
25 7 V
25 -386 V
24 386 V
25 0 V
25 -386 V
25 379 V
25 1189 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
672 1779 M
25 672 V
722 600 L
25 0 V
25 752 V
796 976 L
25 1141 V
846 600 L
25 752 V
896 976 L
24 382 V
25 361 V
25 449 V
25 -440 V
25 -376 V
24 803 V
1069 979 L
25 3 V
25 775 V
25 -29 V
24 -376 V
25 -363 V
25 363 V
25 6 V
25 -758 V
24 0 V
25 382 V
25 1562 V
1367 600 L
25 0 V
24 382 V
25 4 V
25 -4 V
25 1173 V
1516 979 L
24 386 V
25 1163 V
1590 600 L
25 746 V
25 809 V
24 -63 V
25 -721 V
25 386 V
25 -392 V
25 740 V
24 -358 V
25 370 V
25 427 V
25 -787 V
25 -775 V
24 -3 V
25 1163 V
1962 976 L
25 -376 V
25 386 V
24 379 V
25 382 V
25 -761 V
25 1131 V
25 -752 V
24 -13 V
25 376 V
25 -746 V
25 4 V
25 752 V
2284 600 L
25 758 V
25 -758 V
25 1166 V
25 0 V
24 730 V
25 -758 V
2458 600 L
25 765 V
25 382 V
24 10 V
25 -405 V
25 -752 V
25 386 V
25 -4 V
24 0 V
25 784 V
2706 600 L
25 0 V
25 386 V
24 354 V
25 398 V
25 19 V
25 -29 V
25 -363 V
24 -765 V
25 758 V
25 -382 V
25 1179 V
25 -809 V
24 -746 V
25 771 V
25 -392 V
25 749 V
25 38 V
24 -414 V
25 -370 V
25 4 V
25 366 V
25 -752 V
24 1166 V
25 339 V
3326 982 L
25 0 V
25 370 V
24 -370 V
25 775 V
25 -399 V
25 1123 V
25 -743 V
3524 600 L
25 1128 V
25 -350 V
25 -20 V
25 -376 V
24 383 V
25 382 V
25 -771 V
25 395 V
25 -395 V
24 781 V
3797 600 L
25 376 V
25 6 V
25 765 V
24 -395 V
25 -370 V
25 0 V
25 -382 V
25 1128 V
24 -357 V
25 -389 V
25 0 V
25 -382 V
25 379 V
24 392 V
25 -771 V
25 758 V
25 -758 V
25 765 V
24 -7 V
25 -758 V
25 771 V
25 -395 V
25 6 V
24 -382 V
25 1147 V
4442 600 L
25 386 V
25 366 V
24 -370 V
25 0 V
25 746 V
25 768 V
25 -1118 V
24 -20 V
25 -369 V
25 -389 V
25 1505 V
4740 982 L
24 784 V
25 -47 V
25 -354 V
25 -765 V
25 379 V
24 379 V
25 784 V
25 -37 V
25 50 V
4988 986 L
24 -386 V
25 1517 V
25 -351 V
25 -784 V
25 756 V
24 -380 V
25 759 V
25 -765 V
25 -366 V
25 -7 V
24 379 V
25 -758 V
25 382 V
25 376 V
25 -372 V
24 742 V
5409 600 L
25 379 V
25 -379 V
25 382 V
24 1173 V
5533 979 L
25 759 V
25 -380 V
25 -758 V
24 758 V
25 1170 V
25 -800 V
5707 600 L
25 386 V
24 -386 V
25 1881 V
5806 986 L
25 742 V
25 -350 V
24 -396 V
25 -6 V
25 389 V
25 -383 V
25 376 V
24 -758 V
25 1138 V
25 -756 V
25 -3 V
25 386 V
24 -13 V
25 395 V
25 0 V
25 -382 V
25 -7 V
24 408 V
25 -47 V
25 -733 V
25 -386 V
25 0 V
24 0 V
25 1166 V
25 -787 V
25 -379 V
25 758 V
24 -6 V
25 -752 V
25 1157 V
25 -411 V
25 392 V
24 -373 V
25 6 V
25 746 V
6699 600 L
25 0 V
24 771 V
25 -385 V
25 752 V
6823 600 L
25 2352 V
672 1779 Pls
697 2451 Pls
722 600 Pls
747 600 Pls
772 1352 Pls
796 976 Pls
821 2117 Pls
846 600 Pls
871 1352 Pls
896 976 Pls
920 1358 Pls
945 1719 Pls
970 2168 Pls
995 1728 Pls
1020 1352 Pls
1044 2155 Pls
1069 979 Pls
1094 982 Pls
1119 1757 Pls
1144 1728 Pls
1168 1352 Pls
1193 989 Pls
1218 1352 Pls
1243 1358 Pls
1268 600 Pls
1292 600 Pls
1317 982 Pls
1342 2544 Pls
1367 600 Pls
1392 600 Pls
1416 982 Pls
1441 986 Pls
1466 982 Pls
1491 2155 Pls
1516 979 Pls
1540 1365 Pls
1565 2528 Pls
1590 600 Pls
1615 1346 Pls
1640 2155 Pls
1664 2092 Pls
1689 1371 Pls
1714 1757 Pls
1739 1365 Pls
1764 2105 Pls
1788 1747 Pls
1813 2117 Pls
1838 2544 Pls
1863 1757 Pls
1888 982 Pls
1912 979 Pls
1937 2142 Pls
1962 976 Pls
1987 600 Pls
2012 986 Pls
2036 1365 Pls
2061 1747 Pls
2086 986 Pls
2111 2117 Pls
2136 1365 Pls
2160 1352 Pls
2185 1728 Pls
2210 982 Pls
2235 986 Pls
2260 1738 Pls
2284 600 Pls
2309 1358 Pls
2334 600 Pls
2359 1766 Pls
2384 1766 Pls
2408 2496 Pls
2433 1738 Pls
2458 600 Pls
2483 1365 Pls
2508 1747 Pls
2532 1757 Pls
2557 1352 Pls
2582 600 Pls
2607 986 Pls
2632 982 Pls
2656 982 Pls
2681 1766 Pls
2706 600 Pls
2731 600 Pls
2756 986 Pls
2780 1340 Pls
2805 1738 Pls
2830 1757 Pls
2855 1728 Pls
2880 1365 Pls
2904 600 Pls
2929 1358 Pls
2954 976 Pls
2979 2155 Pls
3004 1346 Pls
3028 600 Pls
3053 1371 Pls
3078 979 Pls
3103 1728 Pls
3128 1766 Pls
3152 1352 Pls
3177 982 Pls
3202 986 Pls
3227 1352 Pls
3252 600 Pls
3276 1766 Pls
3301 2105 Pls
3326 982 Pls
3351 982 Pls
3376 1352 Pls
3400 982 Pls
3425 1757 Pls
3450 1358 Pls
3475 2481 Pls
3500 1738 Pls
3524 600 Pls
3549 1728 Pls
3574 1378 Pls
3599 1358 Pls
3624 982 Pls
3648 1365 Pls
3673 1747 Pls
3698 976 Pls
3723 1371 Pls
3748 976 Pls
3772 1757 Pls
3797 600 Pls
3822 976 Pls
3847 982 Pls
3872 1747 Pls
3896 1352 Pls
3921 982 Pls
3946 982 Pls
3971 600 Pls
3996 1728 Pls
4020 1371 Pls
4045 982 Pls
4070 982 Pls
4095 600 Pls
4120 979 Pls
4144 1371 Pls
4169 600 Pls
4194 1358 Pls
4219 600 Pls
4244 1365 Pls
4268 1358 Pls
4293 600 Pls
4318 1371 Pls
4343 976 Pls
4368 982 Pls
4392 600 Pls
4417 1747 Pls
4442 600 Pls
4467 986 Pls
4492 1352 Pls
4516 982 Pls
4541 982 Pls
4566 1728 Pls
4591 2496 Pls
4616 1378 Pls
4640 1358 Pls
4665 989 Pls
4690 600 Pls
4715 2105 Pls
4740 982 Pls
4764 1766 Pls
4789 1719 Pls
4814 1365 Pls
4839 600 Pls
4864 979 Pls
4888 1358 Pls
4913 2142 Pls
4938 2105 Pls
4963 2155 Pls
4988 986 Pls
5012 600 Pls
5037 2117 Pls
5062 1766 Pls
5087 982 Pls
5112 1738 Pls
5136 1358 Pls
5161 2117 Pls
5186 1352 Pls
5211 986 Pls
5236 979 Pls
5260 1358 Pls
5285 600 Pls
5310 982 Pls
5335 1358 Pls
5360 986 Pls
5384 1728 Pls
5409 600 Pls
5434 979 Pls
5459 600 Pls
5484 982 Pls
5508 2155 Pls
5533 979 Pls
5558 1738 Pls
5583 1358 Pls
5608 600 Pls
5632 1358 Pls
5657 2528 Pls
5682 1728 Pls
5707 600 Pls
5732 986 Pls
5756 600 Pls
5781 2481 Pls
5806 986 Pls
5831 1728 Pls
5856 1378 Pls
5880 982 Pls
5905 976 Pls
5930 1365 Pls
5955 982 Pls
5980 1358 Pls
6004 600 Pls
6029 1738 Pls
6054 982 Pls
6079 979 Pls
6104 1365 Pls
6128 1352 Pls
6153 1747 Pls
6178 1747 Pls
6203 1365 Pls
6228 1358 Pls
6252 1766 Pls
6277 1719 Pls
6302 986 Pls
6327 600 Pls
6352 600 Pls
6376 600 Pls
6401 1766 Pls
6426 979 Pls
6451 600 Pls
6476 1358 Pls
6500 1352 Pls
6525 600 Pls
6550 1757 Pls
6575 1346 Pls
6600 1738 Pls
6624 1365 Pls
6649 1371 Pls
6674 2117 Pls
6699 600 Pls
6724 600 Pls
6748 1371 Pls
6773 986 Pls
6798 1738 Pls
6823 600 Pls
6848 2952 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
672 4431 M
697 2080 L
722 973 L
25 1144 V
772 600 L
24 376 V
25 3 V
25 379 V
871 976 L
25 0 V
24 1141 V
25 -25 V
25 76 V
995 976 L
25 -376 V
24 1166 V
25 -28 V
25 -373 V
25 -379 V
25 366 V
24 -376 V
25 790 V
25 -414 V
25 -373 V
25 -379 V
24 0 V
25 2294 V
25 -1128 V
25 -408 V
25 -758 V
24 765 V
25 1163 V
25 -1163 V
25 -765 V
25 758 V
24 -758 V
25 386 V
25 -386 V
25 0 V
25 1555 V
1664 600 L
25 1157 V
25 0 V
25 -775 V
25 746 V
24 -363 V
25 -7 V
25 408 V
25 -395 V
25 -771 V
24 758 V
25 13 V
25 -771 V
25 382 V
25 1160 V
24 370 V
2061 982 L
25 389 V
25 -392 V
25 386 V
24 -765 V
25 1128 V
25 -746 V
25 775 V
25 -399 V
24 399 V
25 -778 V
25 -379 V
25 778 V
25 0 V
24 360 V
25 -759 V
25 3 V
25 0 V
25 0 V
24 775 V
2557 600 L
25 382 V
25 775 V
25 -775 V
24 -382 V
25 389 V
25 -389 V
25 1157 V
25 771 V
24 -818 V
25 -352 V
25 399 V
2855 600 L
25 765 V
24 1163 V
25 -411 V
25 -12 V
25 -727 V
25 -405 V
24 -373 V
25 386 V
25 372 V
25 -382 V
25 790 V
24 -38 V
25 -363 V
25 6 V
25 -395 V
25 781 V
24 -379 V
25 -402 V
25 389 V
25 0 V
25 -13 V
24 395 V
25 -761 V
25 372 V
25 -382 V
25 -376 V
24 1147 V
25 -771 V
25 2734 V
3599 600 L
25 765 V
24 -383 V
25 1147 V
3698 600 L
25 1157 V
25 -29 V
24 800 V
25 -1163 V
25 -389 V
25 389 V
25 -383 V
24 746 V
25 -746 V
25 383 V
25 382 V
25 -771 V
24 395 V
25 -389 V
25 383 V
25 -765 V
25 379 V
24 2320 V
25 -1552 V
25 -389 V
25 7 V
25 -765 V
24 379 V
25 1163 V
25 -771 V
25 -19 V
25 -370 V
24 376 V
25 771 V
25 13 V
4467 986 L
25 742 V
24 -363 V
25 -383 V
25 -382 V
25 379 V
25 787 V
24 -787 V
25 1176 V
25 0 V
4715 600 L
25 382 V
24 7 V
25 -389 V
25 765 V
25 392 V
25 -778 V
24 0 V
25 -379 V
25 0 V
25 2333 V
25 -1176 V
24 755 V
25 -395 V
25 -351 V
25 -401 V
25 -7 V
24 0 V
25 0 V
25 -6 V
25 405 V
25 360 V
5260 979 L
25 -379 V
25 1147 V
25 -768 V
25 392 V
24 357 V
25 -746 V
25 376 V
25 380 V
25 -756 V
24 396 V
25 -399 V
25 1138 V
25 379 V
25 417 V
5632 979 L
25 7 V
25 742 V
25 -363 V
25 -765 V
24 0 V
25 752 V
25 790 V
5831 600 L
25 778 V
24 751 V
5905 600 L
25 1147 V
5955 600 L
25 758 V
24 1186 V
25 -1186 V
25 389 V
6079 600 L
25 1147 V
24 -395 V
25 -752 V
25 765 V
25 764 V
6228 979 L
24 399 V
25 341 V
25 38 V
6327 600 L
25 1505 V
24 -734 V
25 784 V
6426 979 L
25 1163 V
25 -25 V
24 -765 V
25 19 V
25 -385 V
25 -13 V
25 6 V
24 3 V
25 4 V
25 752 V
25 19 V
6724 600 L
24 771 V
25 0 V
25 -392 V
25 -379 V
25 392 V
672 4431 BoxF
697 2080 BoxF
722 973 BoxF
747 2117 BoxF
772 600 BoxF
796 976 BoxF
821 979 BoxF
846 1358 BoxF
871 976 BoxF
896 976 BoxF
920 2117 BoxF
945 2092 BoxF
970 2168 BoxF
995 976 BoxF
1020 600 BoxF
1044 1766 BoxF
1069 1738 BoxF
1094 1365 BoxF
1119 986 BoxF
1144 1352 BoxF
1168 976 BoxF
1193 1766 BoxF
1218 1352 BoxF
1243 979 BoxF
1268 600 BoxF
1292 600 BoxF
1317 2894 BoxF
1342 1766 BoxF
1367 1358 BoxF
1392 600 BoxF
1416 1365 BoxF
1441 2528 BoxF
1466 1365 BoxF
1491 600 BoxF
1516 1358 BoxF
1540 600 BoxF
1565 986 BoxF
1590 600 BoxF
1615 600 BoxF
1640 2155 BoxF
1664 600 BoxF
1689 1757 BoxF
1714 1757 BoxF
1739 982 BoxF
1764 1728 BoxF
1788 1365 BoxF
1813 1358 BoxF
1838 1766 BoxF
1863 1371 BoxF
1888 600 BoxF
1912 1358 BoxF
1937 1371 BoxF
1962 600 BoxF
1987 982 BoxF
2012 2142 BoxF
2036 2512 BoxF
2061 982 BoxF
2086 1371 BoxF
2111 979 BoxF
2136 1365 BoxF
2160 600 BoxF
2185 1728 BoxF
2210 982 BoxF
2235 1757 BoxF
2260 1358 BoxF
2284 1757 BoxF
2309 979 BoxF
2334 600 BoxF
2359 1378 BoxF
2384 1378 BoxF
2408 1738 BoxF
2433 979 BoxF
2458 982 BoxF
2483 982 BoxF
2508 982 BoxF
2532 1757 BoxF
2557 600 BoxF
2582 982 BoxF
2607 1757 BoxF
2632 982 BoxF
2656 600 BoxF
2681 989 BoxF
2706 600 BoxF
2731 1757 BoxF
2756 2528 BoxF
2780 1710 BoxF
2805 1358 BoxF
2830 1757 BoxF
2855 600 BoxF
2880 1365 BoxF
2904 2528 BoxF
2929 2117 BoxF
2954 2105 BoxF
2979 1378 BoxF
3004 973 BoxF
3028 600 BoxF
3053 986 BoxF
3078 1358 BoxF
3103 976 BoxF
3128 1766 BoxF
3152 1728 BoxF
3177 1365 BoxF
3202 1371 BoxF
3227 976 BoxF
3252 1757 BoxF
3276 1378 BoxF
3301 976 BoxF
3326 1365 BoxF
3351 1365 BoxF
3376 1352 BoxF
3400 1747 BoxF
3425 986 BoxF
3450 1358 BoxF
3475 976 BoxF
3500 600 BoxF
3524 1747 BoxF
3549 976 BoxF
3574 3710 BoxF
3599 600 BoxF
3624 1365 BoxF
3648 982 BoxF
3673 2129 BoxF
3698 600 BoxF
3723 1757 BoxF
3748 1728 BoxF
3772 2528 BoxF
3797 1365 BoxF
3822 976 BoxF
3847 1365 BoxF
3872 982 BoxF
3896 1728 BoxF
3921 982 BoxF
3946 1365 BoxF
3971 1747 BoxF
3996 976 BoxF
4020 1371 BoxF
4045 982 BoxF
4070 1365 BoxF
4095 600 BoxF
4120 979 BoxF
4144 3299 BoxF
4169 1747 BoxF
4194 1358 BoxF
4219 1365 BoxF
4244 600 BoxF
4268 979 BoxF
4293 2142 BoxF
4318 1371 BoxF
4343 1352 BoxF
4368 982 BoxF
4392 1358 BoxF
4417 2129 BoxF
4442 2142 BoxF
4467 986 BoxF
4492 1728 BoxF
4516 1365 BoxF
4541 982 BoxF
4566 600 BoxF
4591 979 BoxF
4616 1766 BoxF
4640 979 BoxF
4665 2155 BoxF
4690 2155 BoxF
4715 600 BoxF
4740 982 BoxF
4764 989 BoxF
4789 600 BoxF
4814 1365 BoxF
4839 1757 BoxF
4864 979 BoxF
4888 979 BoxF
4913 600 BoxF
4938 600 BoxF
4963 2933 BoxF
4988 1757 BoxF
5012 2512 BoxF
5037 2117 BoxF
5062 1766 BoxF
5087 1365 BoxF
5112 1358 BoxF
5136 1358 BoxF
5161 1358 BoxF
5186 1352 BoxF
5211 1757 BoxF
5236 2117 BoxF
5260 979 BoxF
5285 600 BoxF
5310 1747 BoxF
5335 979 BoxF
5360 1371 BoxF
5384 1728 BoxF
5409 982 BoxF
5434 1358 BoxF
5459 1738 BoxF
5484 982 BoxF
5508 1378 BoxF
5533 979 BoxF
5558 2117 BoxF
5583 2496 BoxF
5608 2913 BoxF
5632 979 BoxF
5657 986 BoxF
5682 1728 BoxF
5707 1365 BoxF
5732 600 BoxF
5756 600 BoxF
5781 1352 BoxF
5806 2142 BoxF
5831 600 BoxF
5856 1378 BoxF
5880 2129 BoxF
5905 600 BoxF
5930 1747 BoxF
5955 600 BoxF
5980 1358 BoxF
6004 2544 BoxF
6029 1358 BoxF
6054 1747 BoxF
6079 600 BoxF
6104 1747 BoxF
6128 1352 BoxF
6153 600 BoxF
6178 1365 BoxF
6203 2129 BoxF
6228 979 BoxF
6252 1378 BoxF
6277 1719 BoxF
6302 1757 BoxF
6327 600 BoxF
6352 2105 BoxF
6376 1371 BoxF
6401 2155 BoxF
6426 979 BoxF
6451 2142 BoxF
6476 2117 BoxF
6500 1352 BoxF
6525 1371 BoxF
6550 986 BoxF
6575 973 BoxF
6600 979 BoxF
6624 982 BoxF
6649 986 BoxF
6674 1738 BoxF
6699 1757 BoxF
6724 600 BoxF
6748 1371 BoxF
6773 1371 BoxF
6798 979 BoxF
6823 600 BoxF
6848 992 BoxF
6348 3877 BoxF
0.500 UL
LTb
660 4440 N
660 600 L
6200 0 V
0 3840 V
-6200 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
