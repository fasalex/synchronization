%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/482s30-g8-n20-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Wed Jul 30 09:26:09 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/482s30-g8-n20-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jul 30 09:26:09 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
900 600 M
5960 0 V
stroke
0.500 UL
LTb
900 600 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 1112 M
5960 0 V
stroke
0.500 UL
LTb
900 1112 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 1112 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 1624 M
5960 0 V
stroke
0.500 UL
LTb
900 1624 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 1624 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 2136 M
5960 0 V
stroke
0.500 UL
LTb
900 2136 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 2136 M
[ [(Helvetica) 200.0 0.0 true true 0 (60)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 2648 M
5960 0 V
stroke
0.500 UL
LTb
900 2648 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 2648 M
[ [(Helvetica) 200.0 0.0 true true 0 (80)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 3160 M
5960 0 V
stroke
0.500 UL
LTb
900 3160 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 3160 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 3672 M
5960 0 V
stroke
0.500 UL
LTb
900 3672 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 3672 M
[ [(Helvetica) 200.0 0.0 true true 0 (120)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 4184 M
4577 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
900 4184 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 4184 M
[ [(Helvetica) 200.0 0.0 true true 0 (140)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 600 M
0 3840 V
stroke
0.500 UL
LTb
900 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 900 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
2092 600 M
0 3840 V
stroke
0.500 UL
LTb
2092 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 2092 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3284 600 M
0 3840 V
stroke
0.500 UL
LTb
3284 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3284 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4476 600 M
0 3840 V
stroke
0.500 UL
LTb
4476 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4476 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5668 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5668 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5668 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
900 4440 N
900 600 L
5960 0 V
0 3840 V
-5960 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3880 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3880 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
912 1283 M
24 341 V
24 195 V
23 203 V
24 -142 V
24 98 V
24 158 V
24 -256 V
24 366 V
23 61 V
24 -132 V
24 0 V
24 -112 V
24 244 V
24 -61 V
24 -482 V
23 116 V
24 183 V
24 0 V
24 30 V
24 -469 V
24 551 V
23 -112 V
24 -85 V
24 -98 V
24 183 V
24 -183 V
24 295 V
23 -295 V
24 183 V
24 0 V
24 -299 V
24 116 V
24 183 V
23 -183 V
24 213 V
24 82 V
24 -295 V
24 295 V
24 -197 V
24 197 V
23 -295 V
24 320 V
24 -320 V
24 98 V
24 -98 V
24 295 V
23 0 V
24 -295 V
24 0 V
24 183 V
24 30 V
24 -97 V
23 67 V
24 73 V
24 -158 V
24 158 V
24 110 V
24 -71 V
23 -295 V
24 256 V
24 -372 V
24 299 V
24 -183 V
24 0 V
24 295 V
23 -179 V
24 0 V
24 250 V
24 -366 V
24 295 V
24 -197 V
23 197 V
24 -82 V
24 -30 V
24 -85 V
24 222 V
24 -436 V
23 299 V
24 -85 V
24 85 V
24 244 V
24 -329 V
24 -214 V
23 116 V
24 213 V
24 -213 V
24 0 V
24 0 V
24 0 V
24 98 V
23 -98 V
24 98 V
24 0 V
24 85 V
24 0 V
24 -85 V
23 85 V
24 137 V
24 -137 V
24 244 V
24 142 V
24 -203 V
3367 1880 L
24 98 V
24 222 V
24 107 V
24 -329 V
24 -98 V
23 -116 V
24 372 V
24 -256 V
24 98 V
24 -98 V
24 0 V
24 256 V
23 -158 V
24 -98 V
24 183 V
24 -85 V
24 115 V
24 -213 V
23 213 V
24 -213 V
24 256 V
24 -158 V
24 -98 V
24 569 V
23 -569 V
24 116 V
24 311 V
24 -244 V
24 137 V
24 56 V
23 -492 V
24 214 V
24 222 V
24 -107 V
24 153 V
24 -153 V
24 -115 V
23 115 V
24 -30 V
24 -183 V
24 -116 V
24 299 V
24 -85 V
23 85 V
24 -85 V
24 222 V
24 56 V
24 463 V
24 -741 V
23 -98 V
24 98 V
24 329 V
24 -329 V
24 268 V
24 -482 V
23 436 V
24 -222 V
24 18 V
24 -372 V
24 469 V
24 0 V
24 -30 V
23 -183 V
24 256 V
24 -73 V
24 183 V
24 61 V
24 0 V
23 -311 V
24 -18 V
24 158 V
24 -256 V
24 0 V
24 320 V
23 -137 V
24 0 V
24 193 V
24 -376 V
24 0 V
24 256 V
23 -256 V
24 0 V
24 295 V
24 -39 V
24 64 V
24 56 V
24 -278 V
23 -98 V
24 98 V
24 0 V
24 -98 V
24 366 V
24 -482 V
23 643 V
24 -151 V
24 151 V
24 258 V
24 197 V
24 61 V
23 51 V
24 -8 V
24 29 V
24 -859 V
24 110 V
5871 2352 L
23 -177 V
24 -112 V
24 297 V
24 0 V
24 -114 V
24 -268 V
24 115 V
23 -329 V
24 411 V
24 132 V
24 53 V
24 -185 V
24 0 V
23 25 V
24 -320 V
24 -116 V
24 214 V
24 -98 V
24 -116 V
23 214 V
24 85 V
24 -85 V
24 268 V
24 -110 V
24 -158 V
23 222 V
24 -25 V
24 -197 V
24 197 V
24 71 V
24 -71 V
24 25 V
23 -137 V
24 73 V
24 171 V
24 -171 V
24 -512 V
24 512 V
23 -256 V
24 256 V
24 -158 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
912 600 M
24 102 V
24 873 V
23 -548 V
24 304 V
24 1041 V
24 -1089 V
24 1109 V
24 -878 V
23 -573 V
24 -341 V
24 394 V
24 -28 V
24 317 V
24 -500 V
24 282 V
23 -252 V
24 -30 V
24 183 V
24 -153 V
24 811 V
24 -39 V
23 -802 V
24 408 V
24 49 V
24 823 V
24 1310 V
24 -1985 V
23 279 V
24 -336 V
24 -182 V
24 -549 V
24 213 V
24 153 V
23 701 V
24 426 V
24 -508 V
24 39 V
24 -236 V
24 197 V
24 -985 V
23 640 V
24 160 V
24 -800 V
24 197 V
24 -197 V
24 197 V
23 0 V
24 230 V
24 -214 V
24 -30 V
24 670 V
24 311 V
23 -798 V
24 -25 V
24 -144 V
24 144 V
24 25 V
24 -366 V
23 640 V
24 -299 V
24 -108 V
24 133 V
24 61 V
24 -214 V
24 -16 V
23 1199 V
24 -698 V
24 -515 V
24 1524 V
2581 797 L
24 591 V
23 0 V
24 -575 V
24 -213 V
24 394 V
24 86 V
24 451 V
23 -382 V
24 -352 V
24 -14 V
24 528 V
24 -514 V
24 501 V
23 -698 V
24 427 V
24 0 V
24 853 V
24 -853 V
24 213 V
24 -443 V
23 16 V
24 -213 V
24 1575 V
3153 783 L
24 183 V
24 225 V
23 -225 V
24 -46 V
24 -137 V
24 -12 V
24 -29 V
24 41 V
23 884 V
24 -279 V
24 172 V
24 -619 V
24 250 V
24 -164 V
23 -194 V
24 279 V
24 -85 V
24 -33 V
24 459 V
24 0 V
24 -682 V
23 26 V
24 870 V
24 -884 V
24 -183 V
24 427 V
24 -214 V
23 0 V
24 0 V
24 -42 V
24 617 V
24 -788 V
24 0 V
23 1920 V
24 -1455 V
24 47 V
24 -329 V
24 -183 V
24 753 V
23 -55 V
24 -501 V
24 283 V
24 -267 V
24 -30 V
24 30 V
24 -16 V
23 443 V
24 -274 V
24 -366 V
24 698 V
24 216 V
24 858 V
4416 966 L
24 -169 V
24 -197 V
24 1054 V
24 447 V
4536 600 L
23 213 V
24 -16 V
24 372 V
24 -175 V
24 -211 V
24 515 V
23 -218 V
24 -86 V
24 770 V
24 -396 V
24 -555 V
24 0 V
24 153 V
23 61 V
24 -427 V
24 366 V
24 0 V
24 317 V
24 -512 V
23 760 V
24 -537 V
24 -223 V
24 42 V
24 -213 V
24 480 V
23 -114 V
24 -183 V
24 269 V
24 188 V
24 0 V
24 -128 V
23 -299 V
24 640 V
24 329 V
24 -499 V
24 -43 V
24 -188 V
24 139 V
23 262 V
24 -262 V
24 -591 V
24 1536 V
5561 966 L
24 1030 V
5608 901 L
24 452 V
24 -602 V
24 1005 V
24 571 V
24 217 V
23 97 V
24 130 V
24 59 V
5823 941 L
24 25 V
24 712 V
5894 600 L
24 549 V
24 -389 V
24 0 V
24 571 V
24 -534 V
24 -197 V
23 233 V
24 161 V
24 459 V
24 -213 V
24 -443 V
24 197 V
23 246 V
24 -640 V
24 233 V
24 -233 V
24 853 V
24 1009 V
23 -1271 V
24 -42 V
24 436 V
24 -619 V
24 -25 V
24 1037 V
6490 920 L
24 -123 V
24 394 V
24 0 V
24 -591 V
24 591 V
24 -271 V
23 1326 V
24 -281 V
24 1195 V
24 -2048 V
24 512 V
24 -853 V
23 469 V
24 -640 V
24 197 V
912 600 Pls
936 702 Pls
960 1575 Pls
983 1027 Pls
1007 1331 Pls
1031 2372 Pls
1055 1283 Pls
1079 2392 Pls
1103 1514 Pls
1126 941 Pls
1150 600 Pls
1174 994 Pls
1198 966 Pls
1222 1283 Pls
1246 783 Pls
1270 1065 Pls
1293 813 Pls
1317 783 Pls
1341 966 Pls
1365 813 Pls
1389 1624 Pls
1413 1585 Pls
1436 783 Pls
1460 1191 Pls
1484 1240 Pls
1508 2063 Pls
1532 3373 Pls
1556 1388 Pls
1579 1667 Pls
1603 1331 Pls
1627 1149 Pls
1651 600 Pls
1675 813 Pls
1699 966 Pls
1722 1667 Pls
1746 2093 Pls
1770 1585 Pls
1794 1624 Pls
1818 1388 Pls
1842 1585 Pls
1866 600 Pls
1889 1240 Pls
1913 1400 Pls
1937 600 Pls
1961 797 Pls
1985 600 Pls
2009 797 Pls
2032 797 Pls
2056 1027 Pls
2080 813 Pls
2104 783 Pls
2128 1453 Pls
2152 1764 Pls
2175 966 Pls
2199 941 Pls
2223 797 Pls
2247 941 Pls
2271 966 Pls
2295 600 Pls
2318 1240 Pls
2342 941 Pls
2366 833 Pls
2390 966 Pls
2414 1027 Pls
2438 813 Pls
2462 797 Pls
2485 1996 Pls
2509 1298 Pls
2533 783 Pls
2557 2307 Pls
2581 797 Pls
2605 1388 Pls
2628 1388 Pls
2652 813 Pls
2676 600 Pls
2700 994 Pls
2724 1080 Pls
2748 1531 Pls
2771 1149 Pls
2795 797 Pls
2819 783 Pls
2843 1311 Pls
2867 797 Pls
2891 1298 Pls
2914 600 Pls
2938 1027 Pls
2962 1027 Pls
2986 1880 Pls
3010 1027 Pls
3034 1240 Pls
3058 797 Pls
3081 813 Pls
3105 600 Pls
3129 2175 Pls
3153 783 Pls
3177 966 Pls
3201 1191 Pls
3224 966 Pls
3248 920 Pls
3272 783 Pls
3296 771 Pls
3320 742 Pls
3344 783 Pls
3367 1667 Pls
3391 1388 Pls
3415 1560 Pls
3439 941 Pls
3463 1191 Pls
3487 1027 Pls
3510 833 Pls
3534 1112 Pls
3558 1027 Pls
3582 994 Pls
3606 1453 Pls
3630 1453 Pls
3654 771 Pls
3677 797 Pls
3701 1667 Pls
3725 783 Pls
3749 600 Pls
3773 1027 Pls
3797 813 Pls
3820 813 Pls
3844 813 Pls
3868 771 Pls
3892 1388 Pls
3916 600 Pls
3940 600 Pls
3963 2520 Pls
3987 1065 Pls
4011 1112 Pls
4035 783 Pls
4059 600 Pls
4083 1353 Pls
4106 1298 Pls
4130 797 Pls
4154 1080 Pls
4178 813 Pls
4202 783 Pls
4226 813 Pls
4250 797 Pls
4273 1240 Pls
4297 966 Pls
4321 600 Pls
4345 1298 Pls
4369 1514 Pls
4393 2372 Pls
4416 966 Pls
4440 797 Pls
4464 600 Pls
4488 1654 Pls
4512 2101 Pls
4536 600 Pls
4559 813 Pls
4583 797 Pls
4607 1169 Pls
4631 994 Pls
4655 783 Pls
4679 1298 Pls
4702 1080 Pls
4726 994 Pls
4750 1764 Pls
4774 1368 Pls
4798 813 Pls
4822 813 Pls
4846 966 Pls
4869 1027 Pls
4893 600 Pls
4917 966 Pls
4941 966 Pls
4965 1283 Pls
4989 771 Pls
5012 1531 Pls
5036 994 Pls
5060 771 Pls
5084 813 Pls
5108 600 Pls
5132 1080 Pls
5155 966 Pls
5179 783 Pls
5203 1052 Pls
5227 1240 Pls
5251 1240 Pls
5275 1112 Pls
5298 813 Pls
5322 1453 Pls
5346 1782 Pls
5370 1283 Pls
5394 1240 Pls
5418 1052 Pls
5442 1191 Pls
5465 1453 Pls
5489 1191 Pls
5513 600 Pls
5537 2136 Pls
5561 966 Pls
5585 1996 Pls
5608 901 Pls
5632 1353 Pls
5656 751 Pls
5680 1756 Pls
5704 2327 Pls
5728 2544 Pls
5751 2641 Pls
5775 2771 Pls
5799 2830 Pls
5823 941 Pls
5847 966 Pls
5871 1678 Pls
5894 600 Pls
5918 1149 Pls
5942 760 Pls
5966 760 Pls
5990 1331 Pls
6014 797 Pls
6038 600 Pls
6061 833 Pls
6085 994 Pls
6109 1453 Pls
6133 1240 Pls
6157 797 Pls
6181 994 Pls
6204 1240 Pls
6228 600 Pls
6252 833 Pls
6276 600 Pls
6300 1453 Pls
6324 2462 Pls
6347 1191 Pls
6371 1149 Pls
6395 1585 Pls
6419 966 Pls
6443 941 Pls
6467 1978 Pls
6490 920 Pls
6514 797 Pls
6538 1191 Pls
6562 1191 Pls
6586 600 Pls
6610 1191 Pls
6634 920 Pls
6657 2246 Pls
6681 1965 Pls
6705 3160 Pls
6729 1112 Pls
6753 1624 Pls
6777 771 Pls
6800 1240 Pls
6824 600 Pls
6848 797 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
912 600 M
24 922 V
24 297 V
23 1057 V
24 467 V
24 999 V
24 -2377 V
24 2475 V
24 -3291 V
23 304 V
24 -459 V
24 394 V
24 -605 V
24 -12 V
24 12 V
24 1679 V
23 -1435 V
24 122 V
24 -366 V
24 1097 V
24 0 V
24 -98 V
23 -999 V
24 999 V
24 -329 V
24 244 V
24 -884 V
24 181 V
23 33 V
24 -244 V
24 0 V
24 515 V
24 -698 V
24 183 V
23 30 V
24 640 V
24 -459 V
24 1654 V
1818 600 L
24 394 V
24 394 V
23 492 V
24 -320 V
24 1813 V
1961 797 L
24 443 V
24 -443 V
23 197 V
24 33 V
24 426 V
24 -670 V
24 884 V
24 329 V
23 -116 V
24 -939 V
24 841 V
2247 771 L
24 743 V
24 268 V
23 738 V
2342 941 L
24 1754 V
2390 966 L
24 1127 V
24 -426 V
24 115 V
23 -484 V
24 466 V
2533 600 L
24 1067 V
2581 600 L
24 788 V
23 -197 V
24 689 V
2676 600 L
24 788 V
24 -788 V
24 1862 V
23 -216 V
24 520 V
24 28 V
24 -630 V
24 -186 V
24 1182 V
23 -640 V
24 640 V
24 -1493 V
24 213 V
24 -640 V
24 640 V
3058 797 L
23 870 V
24 -279 V
24 394 V
24 -268 V
24 366 V
24 -689 V
23 323 V
24 -914 V
24 1097 V
24 -756 V
24 -199 V
24 41 V
23 670 V
24 -656 V
24 -37 V
24 352 V
24 866 V
3487 813 L
23 718 V
24 -931 V
24 1493 V
3582 994 L
24 886 V
24 -213 V
24 -214 V
23 -459 V
24 459 V
24 -670 V
24 999 V
24 311 V
24 214 V
23 -854 V
24 214 V
24 -555 V
24 866 V
24 -951 V
24 -285 V
23 2418 V
24 931 V
4011 771 L
24 195 V
24 274 V
24 -489 V
23 314 V
24 -268 V
24 123 V
24 533 V
24 -487 V
24 61 V
24 -33 V
23 -181 V
24 -213 V
24 1067 V
24 -369 V
24 -149 V
24 1026 V
23 254 V
24 -1041 V
24 -308 V
24 -28 V
24 254 V
24 82 V
23 919 V
24 -525 V
24 -898 V
24 701 V
24 112 V
24 67 V
4702 600 L
24 591 V
24 573 V
24 -908 V
24 -43 V
24 0 V
24 153 V
23 -153 V
24 470 V
24 -683 V
24 549 V
24 -208 V
24 -170 V
23 993 V
24 -179 V
24 -302 V
24 -470 V
24 427 V
24 -480 V
23 23 V
24 0 V
24 -183 V
24 1280 V
5251 600 L
24 512 V
23 555 V
24 -214 V
24 -853 V
24 341 V
24 459 V
24 -499 V
24 -104 V
23 443 V
24 -443 V
24 591 V
24 -20 V
24 -585 V
24 282 V
23 -314 V
24 753 V
24 -603 V
24 1185 V
24 181 V
24 277 V
23 -15 V
24 307 V
24 -6 V
5823 771 L
24 12 V
24 491 V
23 -83 V
24 -225 V
24 -206 V
24 160 V
24 46 V
24 -169 V
24 443 V
23 -175 V
24 -71 V
24 317 V
24 -711 V
24 197 V
24 0 V
23 123 V
24 747 V
24 1958 V
24 -662 V
24 -1083 V
24 815 V
6347 994 L
24 -28 V
24 422 V
24 -57 V
24 -219 V
24 1063 V
23 -1095 V
24 -283 V
24 591 V
24 394 V
24 -451 V
24 451 V
6634 760 L
23 23 V
24 -183 V
24 683 V
24 -512 V
24 1365 V
6777 941 L
23 299 V
24 43 V
24 -683 V
912 600 BoxF
936 1522 BoxF
960 1819 BoxF
983 2876 BoxF
1007 3343 BoxF
1031 4342 BoxF
1055 1965 BoxF
1079 4440 BoxF
1103 1149 BoxF
1126 1453 BoxF
1150 994 BoxF
1174 1388 BoxF
1198 783 BoxF
1222 771 BoxF
1246 783 BoxF
1270 2462 BoxF
1293 1027 BoxF
1317 1149 BoxF
1341 783 BoxF
1365 1880 BoxF
1389 1880 BoxF
1413 1782 BoxF
1436 783 BoxF
1460 1782 BoxF
1484 1453 BoxF
1508 1697 BoxF
1532 813 BoxF
1556 994 BoxF
1579 1027 BoxF
1603 783 BoxF
1627 783 BoxF
1651 1298 BoxF
1675 600 BoxF
1699 783 BoxF
1722 813 BoxF
1746 1453 BoxF
1770 994 BoxF
1794 2648 BoxF
1818 600 BoxF
1842 994 BoxF
1866 1388 BoxF
1889 1880 BoxF
1913 1560 BoxF
1937 3373 BoxF
1961 797 BoxF
1985 1240 BoxF
2009 797 BoxF
2032 994 BoxF
2056 1027 BoxF
2080 1453 BoxF
2104 783 BoxF
2128 1667 BoxF
2152 1996 BoxF
2175 1880 BoxF
2199 941 BoxF
2223 1782 BoxF
2247 771 BoxF
2271 1514 BoxF
2295 1782 BoxF
2318 2520 BoxF
2342 941 BoxF
2366 2695 BoxF
2390 966 BoxF
2414 2093 BoxF
2438 1667 BoxF
2462 1782 BoxF
2485 1298 BoxF
2509 1764 BoxF
2533 600 BoxF
2557 1667 BoxF
2581 600 BoxF
2605 1388 BoxF
2628 1191 BoxF
2652 1880 BoxF
2676 600 BoxF
2700 1388 BoxF
2724 600 BoxF
2748 2462 BoxF
2771 2246 BoxF
2795 2766 BoxF
2819 2794 BoxF
2843 2164 BoxF
2867 1978 BoxF
2891 3160 BoxF
2914 2520 BoxF
2938 3160 BoxF
2962 1667 BoxF
2986 1880 BoxF
3010 1240 BoxF
3034 1880 BoxF
3058 797 BoxF
3081 1667 BoxF
3105 1388 BoxF
3129 1782 BoxF
3153 1514 BoxF
3177 1880 BoxF
3201 1191 BoxF
3224 1514 BoxF
3248 600 BoxF
3272 1697 BoxF
3296 941 BoxF
3320 742 BoxF
3344 783 BoxF
3367 1453 BoxF
3391 797 BoxF
3415 760 BoxF
3439 1112 BoxF
3463 1978 BoxF
3487 813 BoxF
3510 1531 BoxF
3534 600 BoxF
3558 2093 BoxF
3582 994 BoxF
3606 1880 BoxF
3630 1667 BoxF
3654 1453 BoxF
3677 994 BoxF
3701 1453 BoxF
3725 783 BoxF
3749 1782 BoxF
3773 2093 BoxF
3797 2307 BoxF
3820 1453 BoxF
3844 1667 BoxF
3868 1112 BoxF
3892 1978 BoxF
3916 1027 BoxF
3940 742 BoxF
3963 3160 BoxF
3987 4091 BoxF
4011 771 BoxF
4035 966 BoxF
4059 1240 BoxF
4083 751 BoxF
4106 1065 BoxF
4130 797 BoxF
4154 920 BoxF
4178 1453 BoxF
4202 966 BoxF
4226 1027 BoxF
4250 994 BoxF
4273 813 BoxF
4297 600 BoxF
4321 1667 BoxF
4345 1298 BoxF
4369 1149 BoxF
4393 2175 BoxF
4416 2429 BoxF
4440 1388 BoxF
4464 1080 BoxF
4488 1052 BoxF
4512 1306 BoxF
4536 1388 BoxF
4559 2307 BoxF
4583 1782 BoxF
4607 884 BoxF
4631 1585 BoxF
4655 1697 BoxF
4679 1764 BoxF
4702 600 BoxF
4726 1191 BoxF
4750 1764 BoxF
4774 856 BoxF
4798 813 BoxF
4822 813 BoxF
4846 966 BoxF
4869 813 BoxF
4893 1283 BoxF
4917 600 BoxF
4941 1149 BoxF
4965 941 BoxF
4989 771 BoxF
5012 1764 BoxF
5036 1585 BoxF
5060 1283 BoxF
5084 813 BoxF
5108 1240 BoxF
5132 760 BoxF
5155 783 BoxF
5179 783 BoxF
5203 600 BoxF
5227 1880 BoxF
5251 600 BoxF
5275 1112 BoxF
5298 1667 BoxF
5322 1453 BoxF
5346 600 BoxF
5370 941 BoxF
5394 1400 BoxF
5418 901 BoxF
5442 797 BoxF
5465 1240 BoxF
5489 797 BoxF
5513 1388 BoxF
5537 1368 BoxF
5561 783 BoxF
5585 1065 BoxF
5608 751 BoxF
5632 1504 BoxF
5656 901 BoxF
5680 2086 BoxF
5704 2267 BoxF
5728 2544 BoxF
5751 2529 BoxF
5775 2836 BoxF
5799 2830 BoxF
5823 771 BoxF
5847 783 BoxF
5871 1274 BoxF
5894 1191 BoxF
5918 966 BoxF
5942 760 BoxF
5966 920 BoxF
5990 966 BoxF
6014 797 BoxF
6038 1240 BoxF
6061 1065 BoxF
6085 994 BoxF
6109 1311 BoxF
6133 600 BoxF
6157 797 BoxF
6181 797 BoxF
6204 920 BoxF
6228 1667 BoxF
6252 3625 BoxF
6276 2963 BoxF
6300 1880 BoxF
6324 2695 BoxF
6347 994 BoxF
6371 966 BoxF
6395 1388 BoxF
6419 1331 BoxF
6443 1112 BoxF
6467 2175 BoxF
6490 1080 BoxF
6514 797 BoxF
6538 1388 BoxF
6562 1782 BoxF
6586 1331 BoxF
6610 1782 BoxF
6634 760 BoxF
6657 783 BoxF
6681 600 BoxF
6705 1283 BoxF
6729 771 BoxF
6753 2136 BoxF
6777 941 BoxF
6800 1240 BoxF
6824 1283 BoxF
6848 600 BoxF
6348 3877 BoxF
0.500 UL
LTb
900 4440 N
900 600 L
5960 0 V
0 3840 V
-5960 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
