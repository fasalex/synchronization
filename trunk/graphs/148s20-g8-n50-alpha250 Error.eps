%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/148s20-g8-n50-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Wed Jul 23 13:59:39 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/148s20-g8-n50-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jul 23 13:59:39 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
780 600 M
6080 0 V
stroke
0.500 UL
LTb
780 600 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1074 M
6080 0 V
stroke
0.500 UL
LTb
780 1074 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1074 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1548 M
6080 0 V
stroke
0.500 UL
LTb
780 1548 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1548 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2022 M
6080 0 V
stroke
0.500 UL
LTb
780 2022 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2022 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2496 M
6080 0 V
stroke
0.500 UL
LTb
780 2496 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2496 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2970 M
6080 0 V
stroke
0.500 UL
LTb
780 2970 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2970 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3444 M
6080 0 V
stroke
0.500 UL
LTb
780 3444 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3444 M
[ [(Helvetica) 200.0 0.0 true true 0 (60)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3919 M
4697 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
780 3919 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3919 M
[ [(Helvetica) 200.0 0.0 true true 0 (70)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 4393 M
6080 0 V
stroke
0.500 UL
LTb
780 4393 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 4393 M
[ [(Helvetica) 200.0 0.0 true true 0 (80)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 600 M
0 3840 V
stroke
0.500 UL
LTb
780 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 780 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
1996 600 M
0 3840 V
stroke
0.500 UL
LTb
1996 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 1996 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3212 600 M
0 3840 V
stroke
0.500 UL
LTb
3212 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3212 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4428 600 M
0 3840 V
stroke
0.500 UL
LTb
4428 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4428 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5644 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5644 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5644 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3820 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3820 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
792 1290 M
24 902 V
841 1097 L
24 26 V
24 349 V
25 294 V
24 155 V
24 60 V
25 11 V
24 -22 V
24 63 V
25 -18 V
24 165 V
24 151 V
25 84 V
24 175 V
24 128 V
25 43 V
24 66 V
24 36 V
25 -367 V
24 7 V
24 55 V
25 -378 V
24 137 V
24 24 V
24 -212 V
25 101 V
24 107 V
24 -68 V
25 137 V
24 169 V
24 72 V
25 -47 V
24 -59 V
24 -112 V
25 -6 V
24 -294 V
24 126 V
25 105 V
24 -180 V
24 184 V
25 111 V
24 -269 V
24 254 V
25 -133 V
24 377 V
24 361 V
25 -109 V
24 400 V
24 238 V
24 -842 V
25 233 V
24 257 V
24 -838 V
25 -77 V
24 96 V
24 305 V
25 645 V
24 85 V
24 -1071 V
25 116 V
24 8 V
24 -82 V
25 428 V
24 423 V
24 150 V
25 250 V
24 -916 V
24 -327 V
25 21 V
24 148 V
24 -197 V
25 696 V
24 -344 V
24 -65 V
24 -136 V
25 57 V
24 223 V
24 -337 V
25 -210 V
24 67 V
24 -142 V
25 -88 V
24 50 V
24 -124 V
25 51 V
24 -16 V
24 102 V
25 141 V
24 -281 V
24 483 V
25 434 V
24 397 V
24 381 V
25 -475 V
24 567 V
24 -1431 V
25 0 V
24 -55 V
24 -50 V
24 -207 V
25 168 V
24 -11 V
24 428 V
25 -318 V
24 385 V
3394 2531 L
25 -135 V
24 -32 V
24 467 V
25 421 V
24 -898 V
24 114 V
25 410 V
24 -455 V
24 281 V
25 -187 V
24 424 V
24 382 V
25 298 V
24 -1367 V
24 946 V
25 452 V
24 334 V
24 -1001 V
24 191 V
25 -114 V
24 -541 V
24 494 V
25 95 V
24 427 V
24 -177 V
25 -667 V
24 474 V
24 -197 V
25 223 V
24 370 V
24 473 V
25 337 V
24 63 V
24 -722 V
25 -1176 V
24 -146 V
24 31 V
25 17 V
24 20 V
24 298 V
25 -349 V
24 6 V
24 45 V
24 -28 V
25 -82 V
24 118 V
24 -178 V
25 70 V
24 -46 V
24 -37 V
25 24 V
24 95 V
24 72 V
25 -67 V
24 110 V
24 -45 V
25 130 V
24 -44 V
24 403 V
25 -344 V
24 -27 V
24 -124 V
25 -31 V
24 -198 V
24 192 V
25 457 V
24 225 V
24 -925 V
24 62 V
25 108 V
24 23 V
24 28 V
25 -157 V
24 110 V
24 -200 V
25 247 V
24 344 V
24 315 V
25 438 V
24 -543 V
24 421 V
25 324 V
24 -292 V
24 346 V
25 -6 V
24 218 V
24 -1678 V
25 540 V
24 196 V
24 196 V
25 -807 V
24 -17 V
24 282 V
24 430 V
25 546 V
24 340 V
24 -935 V
25 525 V
24 -1036 V
24 -368 V
25 -708 V
24 -619 V
24 1636 V
25 21 V
5948 2814 L
24 201 V
25 250 V
24 242 V
24 432 V
25 403 V
24 -145 V
24 -810 V
25 -741 V
24 369 V
24 -482 V
25 21 V
24 -43 V
24 -29 V
24 207 V
25 -426 V
24 61 V
24 -585 V
25 1002 V
24 -160 V
24 288 V
25 342 V
24 -829 V
24 -115 V
25 -174 V
24 238 V
24 -49 V
25 228 V
24 -419 V
24 150 V
25 -162 V
24 450 V
24 563 V
25 -732 V
24 -167 V
24 138 V
25 547 V
24 305 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
792 600 M
24 35 V
25 80 V
24 72 V
24 41 V
914 713 L
24 4 V
24 144 V
25 -35 V
24 107 V
24 -76 V
25 -142 V
24 142 V
24 -182 V
25 184 V
24 67 V
24 380 V
25 3 V
24 23 V
24 94 V
25 -475 V
24 -74 V
24 204 V
25 -331 V
24 37 V
24 -2 V
24 -70 V
25 144 V
24 67 V
24 -174 V
25 -39 V
24 246 V
24 -72 V
25 9 V
24 -72 V
24 -149 V
25 144 V
24 -28 V
24 -153 V
25 285 V
24 -246 V
24 180 V
25 132 V
24 -313 V
24 252 V
25 -108 V
24 659 V
24 557 V
25 -33 V
24 465 V
24 419 V
24 -1383 V
25 185 V
24 517 V
2105 918 L
25 -24 V
24 34 V
24 478 V
25 1067 V
24 -14 V
2251 928 L
25 -292 V
24 111 V
24 77 V
25 582 V
24 740 V
24 -355 V
25 -186 V
24 -490 V
24 -368 V
25 5 V
24 30 V
24 108 V
25 724 V
24 -631 V
24 -246 V
24 1146 V
25 875 V
24 -1411 V
24 -424 V
25 -173 V
24 209 V
24 -133 V
25 -2 V
24 33 V
24 -145 V
25 182 V
24 -141 V
24 291 V
25 51 V
24 -380 V
24 519 V
25 692 V
24 479 V
24 546 V
25 -636 V
24 848 V
24 -2129 V
25 0 V
24 275 V
24 810 V
24 -1020 V
25 -246 V
24 78 V
24 438 V
25 -585 V
24 827 V
24 -484 V
25 -168 V
24 -28 V
24 134 V
25 981 V
3516 824 L
24 135 V
25 103 V
24 -243 V
24 723 V
25 -419 V
24 603 V
24 614 V
25 400 V
3735 820 L
24 1411 V
25 363 V
24 151 V
24 -1634 V
24 56 V
25 77 V
24 -303 V
24 -135 V
25 1290 V
24 728 V
24 -361 V
25 -847 V
24 556 V
24 -189 V
25 162 V
24 529 V
24 726 V
25 441 V
24 68 V
24 -999 V
25 -1826 V
24 -260 V
24 68 V
25 97 V
24 -61 V
24 489 V
25 -419 V
24 -213 V
24 -76 V
24 71 V
25 476 V
24 -261 V
24 -101 V
25 65 V
24 -213 V
24 255 V
25 142 V
24 -220 V
24 108 V
25 -247 V
24 36 V
24 -33 V
25 241 V
24 95 V
24 530 V
25 -766 V
24 -103 V
24 181 V
25 -216 V
24 3 V
24 140 V
25 818 V
24 318 V
5048 820 L
24 -33 V
25 287 V
24 -40 V
24 -140 V
25 -256 V
24 149 V
24 -148 V
25 328 V
24 152 V
24 621 V
25 927 V
24 -1062 V
24 493 V
25 822 V
24 -341 V
24 585 V
25 -49 V
24 314 V
5510 959 L
25 898 V
24 -206 V
24 721 V
25 -1319 V
24 -22 V
24 218 V
24 757 V
25 644 V
24 542 V
24 -1407 V
25 548 V
5802 857 L
24 -73 V
25 -70 V
24 284 V
24 -6 V
25 68 V
24 538 V
24 3 V
25 537 V
24 407 V
24 322 V
25 363 V
24 284 V
24 -1377 V
25 -1025 V
24 666 V
24 -923 V
25 71 V
24 -106 V
24 142 V
24 367 V
25 -269 V
24 7 V
24 -210 V
25 630 V
24 -270 V
24 546 V
25 510 V
6483 956 L
24 -97 V
25 -72 V
24 39 V
24 -73 V
25 307 V
24 -345 V
24 177 V
25 -292 V
24 752 V
24 738 V
25 -951 V
24 -461 V
24 72 V
25 774 V
24 621 V
792 600 Pls
816 635 Pls
841 715 Pls
865 787 Pls
889 828 Pls
914 713 Pls
938 717 Pls
962 861 Pls
987 826 Pls
1011 933 Pls
1035 857 Pls
1060 715 Pls
1084 857 Pls
1108 675 Pls
1133 859 Pls
1157 926 Pls
1181 1306 Pls
1206 1309 Pls
1230 1332 Pls
1254 1426 Pls
1279 951 Pls
1303 877 Pls
1327 1081 Pls
1352 750 Pls
1376 787 Pls
1400 785 Pls
1424 715 Pls
1449 859 Pls
1473 926 Pls
1497 752 Pls
1522 713 Pls
1546 959 Pls
1570 887 Pls
1595 896 Pls
1619 824 Pls
1643 675 Pls
1668 819 Pls
1692 791 Pls
1716 638 Pls
1741 923 Pls
1765 677 Pls
1789 857 Pls
1814 989 Pls
1838 676 Pls
1862 928 Pls
1887 820 Pls
1911 1479 Pls
1935 2036 Pls
1960 2003 Pls
1984 2468 Pls
2008 2887 Pls
2032 1504 Pls
2057 1689 Pls
2081 2206 Pls
2105 918 Pls
2130 894 Pls
2154 928 Pls
2178 1406 Pls
2203 2473 Pls
2227 2459 Pls
2251 928 Pls
2276 636 Pls
2300 747 Pls
2324 824 Pls
2349 1406 Pls
2373 2146 Pls
2397 1791 Pls
2422 1605 Pls
2446 1115 Pls
2470 747 Pls
2495 752 Pls
2519 782 Pls
2543 890 Pls
2568 1614 Pls
2592 983 Pls
2616 737 Pls
2640 1883 Pls
2665 2758 Pls
2689 1347 Pls
2713 923 Pls
2738 750 Pls
2762 959 Pls
2786 826 Pls
2811 824 Pls
2835 857 Pls
2859 712 Pls
2884 894 Pls
2908 753 Pls
2932 1044 Pls
2957 1095 Pls
2981 715 Pls
3005 1234 Pls
3030 1926 Pls
3054 2405 Pls
3078 2951 Pls
3103 2315 Pls
3127 3163 Pls
3151 1034 Pls
3176 1034 Pls
3200 1309 Pls
3224 2119 Pls
3248 1099 Pls
3273 853 Pls
3297 931 Pls
3321 1369 Pls
3346 784 Pls
3370 1611 Pls
3394 1127 Pls
3419 959 Pls
3443 931 Pls
3467 1065 Pls
3492 2046 Pls
3516 824 Pls
3540 959 Pls
3565 1062 Pls
3589 819 Pls
3613 1542 Pls
3638 1123 Pls
3662 1726 Pls
3686 2340 Pls
3711 2740 Pls
3735 820 Pls
3759 2231 Pls
3784 2594 Pls
3808 2745 Pls
3832 1111 Pls
3856 1167 Pls
3881 1244 Pls
3905 941 Pls
3929 806 Pls
3954 2096 Pls
3978 2824 Pls
4002 2463 Pls
4027 1616 Pls
4051 2172 Pls
4075 1983 Pls
4100 2145 Pls
4124 2674 Pls
4148 3400 Pls
4173 3841 Pls
4197 3909 Pls
4221 2910 Pls
4246 1084 Pls
4270 824 Pls
4294 892 Pls
4319 989 Pls
4343 928 Pls
4367 1417 Pls
4392 998 Pls
4416 785 Pls
4440 709 Pls
4464 780 Pls
4489 1256 Pls
4513 995 Pls
4537 894 Pls
4562 959 Pls
4586 746 Pls
4610 1001 Pls
4635 1143 Pls
4659 923 Pls
4683 1031 Pls
4708 784 Pls
4732 820 Pls
4756 787 Pls
4781 1028 Pls
4805 1123 Pls
4829 1653 Pls
4854 887 Pls
4878 784 Pls
4902 965 Pls
4927 749 Pls
4951 752 Pls
4975 892 Pls
5000 1710 Pls
5024 2028 Pls
5048 820 Pls
5072 787 Pls
5097 1074 Pls
5121 1034 Pls
5145 894 Pls
5170 638 Pls
5194 787 Pls
5218 639 Pls
5243 967 Pls
5267 1119 Pls
5291 1740 Pls
5316 2667 Pls
5340 1605 Pls
5364 2098 Pls
5389 2920 Pls
5413 2579 Pls
5437 3164 Pls
5462 3115 Pls
5486 3429 Pls
5510 959 Pls
5535 1857 Pls
5559 1651 Pls
5583 2372 Pls
5608 1053 Pls
5632 1031 Pls
5656 1249 Pls
5680 2006 Pls
5705 2650 Pls
5729 3192 Pls
5753 1785 Pls
5778 2333 Pls
5802 857 Pls
5826 784 Pls
5851 714 Pls
5875 998 Pls
5899 992 Pls
5924 1060 Pls
5948 1598 Pls
5972 1601 Pls
5997 2138 Pls
6021 2545 Pls
6045 2867 Pls
6070 3230 Pls
6094 3514 Pls
6118 2137 Pls
6143 1112 Pls
6167 1778 Pls
6191 855 Pls
6216 926 Pls
6240 820 Pls
6264 962 Pls
6288 1329 Pls
6313 1060 Pls
6337 1067 Pls
6361 857 Pls
6386 1487 Pls
6410 1217 Pls
6434 1763 Pls
6459 2273 Pls
6483 956 Pls
6507 859 Pls
6532 787 Pls
6556 826 Pls
6580 753 Pls
6605 1060 Pls
6629 715 Pls
6653 892 Pls
6678 600 Pls
6702 1352 Pls
6726 2090 Pls
6751 1139 Pls
6775 678 Pls
6799 750 Pls
6824 1524 Pls
6848 2145 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
792 945 M
816 671 L
25 44 V
24 146 V
889 676 L
25 -76 V
24 155 V
24 -43 V
25 38 V
24 146 V
24 -2 V
25 -141 V
24 -43 V
24 3 V
25 -2 V
24 106 V
24 422 V
25 -123 V
24 89 V
24 282 V
25 -395 V
24 -42 V
24 134 V
25 -509 V
24 186 V
24 35 V
24 -181 V
25 144 V
24 31 V
24 -290 V
25 38 V
24 321 V
24 36 V
25 -136 V
24 2 V
24 -186 V
25 290 V
24 -327 V
24 112 V
25 173 V
24 -284 V
24 181 V
25 98 V
24 -280 V
24 181 V
25 1 V
24 596 V
24 -112 V
25 362 V
24 522 V
24 367 V
24 -1051 V
25 68 V
24 556 V
2105 848 L
25 -211 V
24 218 V
24 487 V
25 965 V
24 152 V
2251 709 L
25 71 V
24 114 V
24 -257 V
25 253 V
24 277 V
24 -393 V
25 1705 V
24 -1364 V
24 -368 V
25 -71 V
24 -3 V
24 72 V
25 869 V
24 -631 V
24 167 V
24 -300 V
25 139 V
24 260 V
24 -218 V
25 -431 V
24 180 V
24 -67 V
25 708 V
24 -527 V
24 -182 V
25 35 V
24 885 V
24 524 V
25 779 V
2981 676 L
24 425 V
25 628 V
24 604 V
24 501 V
25 -771 V
24 459 V
3151 781 L
25 0 V
24 -181 V
24 185 V
24 278 V
25 -173 V
24 -217 V
24 728 V
25 -581 V
24 254 V
24 439 V
25 -626 V
24 -103 V
24 808 V
25 454 V
3516 787 L
24 136 V
25 508 V
24 -466 V
24 -20 V
25 666 V
24 145 V
24 433 V
25 593 V
3735 710 L
24 1521 V
25 648 V
24 430 V
24 -1545 V
24 485 V
25 192 V
24 -1004 V
24 135 V
25 524 V
24 686 V
24 -366 V
25 -862 V
24 460 V
24 -342 V
25 238 V
24 828 V
24 582 V
25 545 V
24 67 V
24 -1102 V
4246 911 L
24 -236 V
24 180 V
25 134 V
24 -134 V
24 366 V
25 -404 V
24 -143 V
24 181 V
24 104 V
25 -67 V
24 -220 V
24 38 V
25 177 V
24 -287 V
24 182 V
25 180 V
24 33 V
24 -108 V
25 -67 V
24 0 V
24 -33 V
25 63 V
24 203 V
24 446 V
25 -684 V
24 42 V
24 -2 V
25 -218 V
24 -37 V
24 255 V
25 765 V
24 -239 V
24 726 V
5072 861 L
25 -115 V
24 107 V
24 -106 V
25 44 V
24 -191 V
24 39 V
25 292 V
24 153 V
24 476 V
25 860 V
24 -1035 V
24 787 V
25 148 V
24 -961 V
24 1713 V
25 -246 V
24 -61 V
5510 744 L
25 1027 V
24 -201 V
24 652 V
5608 949 L
24 -169 V
24 502 V
24 531 V
25 858 V
24 521 V
24 -1585 V
25 629 V
5802 747 L
24 -74 V
25 79 V
24 -116 V
24 214 V
25 847 V
24 -224 V
24 69 V
25 519 V
24 529 V
24 623 V
25 611 V
24 -338 V
24 -1948 V
25 -392 V
24 396 V
24 -906 V
25 290 V
24 -179 V
24 -2 V
24 551 V
25 -271 V
24 -102 V
24 -103 V
25 728 V
24 -136 V
24 235 V
25 550 V
6483 778 L
24 -104 V
25 75 V
24 1 V
24 -112 V
25 174 V
24 -136 V
24 -76 V
25 76 V
24 611 V
24 695 V
6751 959 L
24 -320 V
24 149 V
25 705 V
24 439 V
792 945 BoxF
816 671 BoxF
841 715 BoxF
865 861 BoxF
889 676 BoxF
914 600 BoxF
938 755 BoxF
962 712 BoxF
987 750 BoxF
1011 896 BoxF
1035 894 BoxF
1060 753 BoxF
1084 710 BoxF
1108 713 BoxF
1133 711 BoxF
1157 817 BoxF
1181 1239 BoxF
1206 1116 BoxF
1230 1205 BoxF
1254 1487 BoxF
1279 1092 BoxF
1303 1050 BoxF
1327 1184 BoxF
1352 675 BoxF
1376 861 BoxF
1400 896 BoxF
1424 715 BoxF
1449 859 BoxF
1473 890 BoxF
1497 600 BoxF
1522 638 BoxF
1546 959 BoxF
1570 995 BoxF
1595 859 BoxF
1619 861 BoxF
1643 675 BoxF
1668 965 BoxF
1692 638 BoxF
1716 750 BoxF
1741 923 BoxF
1765 639 BoxF
1789 820 BoxF
1814 918 BoxF
1838 638 BoxF
1862 819 BoxF
1887 820 BoxF
1911 1416 BoxF
1935 1304 BoxF
1960 1666 BoxF
1984 2188 BoxF
2008 2555 BoxF
2032 1504 BoxF
2057 1572 BoxF
2081 2128 BoxF
2105 848 BoxF
2130 637 BoxF
2154 855 BoxF
2178 1342 BoxF
2203 2307 BoxF
2227 2459 BoxF
2251 709 BoxF
2276 780 BoxF
2300 894 BoxF
2324 637 BoxF
2349 890 BoxF
2373 1167 BoxF
2397 774 BoxF
2422 2479 BoxF
2446 1115 BoxF
2470 747 BoxF
2495 676 BoxF
2519 673 BoxF
2543 745 BoxF
2568 1614 BoxF
2592 983 BoxF
2616 1150 BoxF
2640 850 BoxF
2665 989 BoxF
2689 1249 BoxF
2713 1031 BoxF
2738 600 BoxF
2762 780 BoxF
2786 713 BoxF
2811 1421 BoxF
2835 894 BoxF
2859 712 BoxF
2884 747 BoxF
2908 1632 BoxF
2932 2156 BoxF
2957 2935 BoxF
2981 676 BoxF
3005 1101 BoxF
3030 1729 BoxF
3054 2333 BoxF
3078 2834 BoxF
3103 2063 BoxF
3127 2522 BoxF
3151 781 BoxF
3176 781 BoxF
3200 600 BoxF
3224 785 BoxF
3248 1063 BoxF
3273 890 BoxF
3297 673 BoxF
3321 1401 BoxF
3346 820 BoxF
3370 1074 BoxF
3394 1513 BoxF
3419 887 BoxF
3443 784 BoxF
3467 1592 BoxF
3492 2046 BoxF
3516 787 BoxF
3540 923 BoxF
3565 1431 BoxF
3589 965 BoxF
3613 945 BoxF
3638 1611 BoxF
3662 1756 BoxF
3686 2189 BoxF
3711 2782 BoxF
3735 710 BoxF
3759 2231 BoxF
3784 2879 BoxF
3808 3309 BoxF
3832 1764 BoxF
3856 2249 BoxF
3881 2441 BoxF
3905 1437 BoxF
3929 1572 BoxF
3954 2096 BoxF
3978 2782 BoxF
4002 2416 BoxF
4027 1554 BoxF
4051 2014 BoxF
4075 1672 BoxF
4100 1910 BoxF
4124 2738 BoxF
4148 3320 BoxF
4173 3865 BoxF
4197 3932 BoxF
4221 2830 BoxF
4246 911 BoxF
4270 675 BoxF
4294 855 BoxF
4319 989 BoxF
4343 855 BoxF
4367 1221 BoxF
4392 817 BoxF
4416 674 BoxF
4440 855 BoxF
4464 959 BoxF
4489 892 BoxF
4513 672 BoxF
4537 710 BoxF
4562 887 BoxF
4586 600 BoxF
4610 782 BoxF
4635 962 BoxF
4659 995 BoxF
4683 887 BoxF
4708 820 BoxF
4732 820 BoxF
4756 787 BoxF
4781 850 BoxF
4805 1053 BoxF
4829 1499 BoxF
4854 815 BoxF
4878 857 BoxF
4902 855 BoxF
4927 637 BoxF
4951 600 BoxF
4975 855 BoxF
5000 1620 BoxF
5024 1381 BoxF
5048 2107 BoxF
5072 861 BoxF
5097 746 BoxF
5121 853 BoxF
5145 747 BoxF
5170 791 BoxF
5194 600 BoxF
5218 639 BoxF
5243 931 BoxF
5267 1084 BoxF
5291 1560 BoxF
5316 2420 BoxF
5340 1385 BoxF
5364 2172 BoxF
5389 2320 BoxF
5413 1359 BoxF
5437 3072 BoxF
5462 2826 BoxF
5486 2765 BoxF
5510 744 BoxF
5535 1771 BoxF
5559 1570 BoxF
5583 2222 BoxF
5608 949 BoxF
5632 780 BoxF
5656 1282 BoxF
5680 1813 BoxF
5705 2671 BoxF
5729 3192 BoxF
5753 1607 BoxF
5778 2236 BoxF
5802 747 BoxF
5826 673 BoxF
5851 752 BoxF
5875 636 BoxF
5899 850 BoxF
5924 1697 BoxF
5948 1473 BoxF
5972 1542 BoxF
5997 2061 BoxF
6021 2590 BoxF
6045 3213 BoxF
6070 3824 BoxF
6094 3486 BoxF
6118 1538 BoxF
6143 1146 BoxF
6167 1542 BoxF
6191 636 BoxF
6216 926 BoxF
6240 747 BoxF
6264 745 BoxF
6288 1296 BoxF
6313 1025 BoxF
6337 923 BoxF
6361 820 BoxF
6386 1548 BoxF
6410 1412 BoxF
6434 1647 BoxF
6459 2197 BoxF
6483 778 BoxF
6507 674 BoxF
6532 749 BoxF
6556 750 BoxF
6580 638 BoxF
6605 812 BoxF
6629 676 BoxF
6653 600 BoxF
6678 676 BoxF
6702 1287 BoxF
6726 1982 BoxF
6751 959 BoxF
6775 639 BoxF
6799 788 BoxF
6824 1493 BoxF
6848 1932 BoxF
6348 3877 BoxF
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
