%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/51s21-g8-n20-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Wed Jul 23 12:37:33 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/51s21-g8-n20-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jul 23 12:37:33 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
780 600 M
6080 0 V
stroke
0.500 UL
LTb
780 600 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1086 M
6080 0 V
stroke
0.500 UL
LTb
780 1086 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1086 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1572 M
6080 0 V
stroke
0.500 UL
LTb
780 1572 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1572 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2058 M
6080 0 V
stroke
0.500 UL
LTb
780 2058 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2058 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2544 M
6080 0 V
stroke
0.500 UL
LTb
780 2544 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2544 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3030 M
6080 0 V
stroke
0.500 UL
LTb
780 3030 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3030 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3516 M
6080 0 V
stroke
0.500 UL
LTb
780 3516 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3516 M
[ [(Helvetica) 200.0 0.0 true true 0 (60)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 4003 M
4697 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
780 4003 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 4003 M
[ [(Helvetica) 200.0 0.0 true true 0 (70)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 600 M
0 3840 V
stroke
0.500 UL
LTb
780 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 780 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
1996 600 M
0 3840 V
stroke
0.500 UL
LTb
1996 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 1996 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3212 600 M
0 3840 V
stroke
0.500 UL
LTb
3212 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3212 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4428 600 M
0 3840 V
stroke
0.500 UL
LTb
4428 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4428 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5644 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5644 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5644 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3820 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3820 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
792 1149 M
816 939 L
25 924 V
24 610 V
24 438 V
25 38 V
24 351 V
24 -70 V
25 102 V
24 -77 V
24 117 V
25 -23 V
24 137 V
24 -132 V
25 -162 V
24 -81 V
24 0 V
25 37 V
24 506 V
24 42 V
25 -501 V
24 101 V
24 70 V
25 172 V
24 640 V
24 226 V
24 -1153 V
25 4 V
24 151 V
24 103 V
25 -105 V
24 -26 V
24 -17 V
25 490 V
24 81 V
24 -408 V
25 61 V
24 -45 V
24 -128 V
25 231 V
24 -95 V
24 25 V
25 -144 V
24 -23 V
24 118 V
25 -135 V
24 -40 V
24 96 V
25 -33 V
24 -161 V
24 63 V
24 -23 V
25 -43 V
24 -18 V
24 114 V
25 34 V
24 11 V
24 -80 V
25 521 V
24 31 V
24 254 V
25 -567 V
24 -86 V
24 -33 V
25 56 V
24 31 V
24 -77 V
25 -228 V
24 -79 V
24 41 V
25 249 V
24 -39 V
24 580 V
25 -515 V
24 326 V
24 -447 V
24 189 V
25 -71 V
24 -85 V
24 75 V
25 34 V
24 -10 V
24 73 V
25 -70 V
24 -33 V
24 -23 V
25 79 V
24 -136 V
24 -35 V
25 52 V
24 -34 V
24 -27 V
25 -46 V
24 68 V
24 79 V
25 -115 V
24 98 V
24 23 V
25 10 V
24 0 V
24 79 V
24 254 V
25 274 V
24 -405 V
24 -45 V
25 -167 V
3370 3476 L
24 33 V
25 310 V
24 -374 V
24 211 V
25 20 V
24 89 V
24 -233 V
25 30 V
24 342 V
24 -242 V
25 10 V
24 -194 V
24 -144 V
25 55 V
24 6 V
24 83 V
25 -72 V
24 -11 V
24 11 V
24 -97 V
25 -54 V
24 72 V
24 167 V
25 -122 V
24 -23 V
24 63 V
25 -6 V
24 -155 V
24 54 V
25 44 V
24 40 V
24 -159 V
25 199 V
24 63 V
24 17 V
25 -64 V
24 -79 V
24 -133 V
25 -19 V
24 266 V
24 -207 V
25 32 V
24 -115 V
24 115 V
24 27 V
25 17 V
24 -119 V
24 434 V
25 -303 V
24 0 V
24 -169 V
25 99 V
24 -139 V
24 -41 V
25 97 V
24 -58 V
24 -19 V
25 241 V
24 -63 V
24 91 V
25 45 V
24 63 V
24 -79 V
25 -85 V
24 -75 V
24 149 V
25 491 V
24 119 V
24 -456 V
24 -206 V
25 -258 V
24 235 V
24 523 V
25 -25 V
24 -572 V
24 120 V
25 23 V
24 104 V
24 61 V
25 -22 V
24 172 V
24 286 V
25 313 V
24 -926 V
24 -131 V
25 119 V
24 275 V
24 225 V
25 -610 V
24 184 V
24 -56 V
25 79 V
24 198 V
24 -244 V
24 -143 V
25 133 V
24 -138 V
24 -40 V
25 63 V
24 -63 V
24 18 V
25 97 V
24 -136 V
24 0 V
5924 3230 L
24 0 V
24 -139 V
25 -81 V
24 40 V
24 1 V
25 20 V
24 220 V
24 58 V
25 0 V
24 80 V
24 -178 V
25 513 V
24 -240 V
24 -8 V
24 325 V
25 -429 V
24 112 V
24 383 V
25 -304 V
24 167 V
24 -254 V
25 -23 V
24 -15 V
24 -16 V
25 23 V
24 -30 V
24 -55 V
25 124 V
24 -237 V
24 91 V
25 -127 V
24 184 V
24 -162 V
25 36 V
24 63 V
24 11 V
25 -74 V
24 40 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
792 1253 M
24 -163 V
25 -31 V
865 640 L
24 159 V
914 681 L
24 189 V
24 -71 V
25 -78 V
24 -121 V
24 161 V
25 118 V
24 177 V
24 -375 V
25 -40 V
24 0 V
24 0 V
25 233 V
24 910 V
24 -8 V
1279 682 L
24 81 V
24 74 V
25 307 V
24 1183 V
24 847 V
1424 721 L
25 42 V
24 35 V
24 300 V
25 25 V
24 -253 V
24 119 V
25 818 V
24 46 V
24 -937 V
25 28 V
24 -30 V
24 -234 V
25 197 V
24 -157 V
24 -80 V
25 80 V
24 -1 V
24 -40 V
25 41 V
24 79 V
24 38 V
25 -197 V
24 121 V
24 1 V
24 -41 V
25 156 V
24 -237 V
24 38 V
25 231 V
24 -70 V
24 -80 V
25 363 V
24 -430 V
24 1583 V
2276 839 L
24 -43 V
24 -116 V
25 78 V
24 114 V
24 78 V
25 -69 V
24 -77 V
24 -163 V
25 233 V
24 -235 V
24 1431 V
25 -1052 V
24 574 V
24 -913 V
24 154 V
25 44 V
24 -277 V
24 122 V
25 77 V
24 -158 V
24 383 V
25 -150 V
24 -115 V
24 -40 V
25 118 V
24 2 V
24 -77 V
25 115 V
24 -76 V
24 73 V
25 -274 V
24 316 V
24 0 V
25 -115 V
24 -42 V
24 -159 V
25 314 V
24 -157 V
24 333 V
24 540 V
25 252 V
24 -899 V
24 -226 V
25 -77 V
24 -39 V
24 342 V
25 504 V
24 -847 V
24 402 V
25 -138 V
24 35 V
24 -146 V
25 339 V
24 548 V
24 -697 V
25 -111 V
24 -155 V
24 377 V
25 -255 V
24 -198 V
24 387 V
25 -388 V
24 1 V
24 -1 V
24 199 V
25 -116 V
24 -4 V
24 475 V
25 -313 V
24 -82 V
24 -119 V
25 315 V
24 -234 V
24 153 V
25 -234 V
24 -40 V
24 119 V
25 -79 V
24 121 V
24 143 V
25 -107 V
24 -118 V
24 3 V
25 41 V
24 449 V
24 -450 V
25 -5 V
24 42 V
24 75 V
24 -234 V
25 119 V
24 -39 V
24 549 V
25 -436 V
24 117 V
24 -147 V
25 -163 V
24 41 V
24 81 V
25 115 V
24 -118 V
24 -38 V
25 -41 V
24 -80 V
4829 794 L
25 -36 V
24 1 V
24 -39 V
25 76 V
24 -156 V
24 700 V
25 666 V
24 359 V
5048 810 L
24 1726 V
5097 986 L
24 274 V
24 1192 V
25 -289 V
5194 799 L
24 -119 V
25 81 V
24 72 V
24 106 V
25 -300 V
24 777 V
24 768 V
25 707 V
5413 756 L
24 -36 V
25 257 V
24 489 V
24 506 V
5535 641 L
24 233 V
24 -37 V
25 -79 V
24 459 V
24 -306 V
24 -229 V
25 117 V
24 -119 V
24 41 V
25 1 V
24 -42 V
24 79 V
25 78 V
24 -157 V
24 79 V
25 -39 V
24 239 V
24 -238 V
25 2 V
24 -43 V
24 43 V
25 -123 V
24 80 V
24 119 V
25 -40 V
24 -79 V
24 41 V
25 792 V
24 -755 V
24 75 V
24 190 V
25 -302 V
24 274 V
24 564 V
25 -643 V
24 388 V
24 -432 V
25 114 V
24 -192 V
24 80 V
25 -195 V
24 307 V
24 -269 V
25 658 V
24 -498 V
24 -7 V
25 -109 V
24 -120 V
24 243 V
25 -5 V
24 -78 V
24 -44 V
25 2 V
24 0 V
792 1253 Pls
816 1090 Pls
841 1059 Pls
865 640 Pls
889 799 Pls
914 681 Pls
938 870 Pls
962 799 Pls
987 721 Pls
1011 600 Pls
1035 761 Pls
1060 879 Pls
1084 1056 Pls
1108 681 Pls
1133 641 Pls
1157 641 Pls
1181 641 Pls
1206 874 Pls
1230 1784 Pls
1254 1776 Pls
1279 682 Pls
1303 763 Pls
1327 837 Pls
1352 1144 Pls
1376 2327 Pls
1400 3174 Pls
1424 721 Pls
1449 763 Pls
1473 798 Pls
1497 1098 Pls
1522 1123 Pls
1546 870 Pls
1570 989 Pls
1595 1807 Pls
1619 1853 Pls
1643 916 Pls
1668 944 Pls
1692 914 Pls
1716 680 Pls
1741 877 Pls
1765 720 Pls
1789 640 Pls
1814 720 Pls
1838 719 Pls
1862 679 Pls
1887 720 Pls
1911 799 Pls
1935 837 Pls
1960 640 Pls
1984 761 Pls
2008 762 Pls
2032 721 Pls
2057 877 Pls
2081 640 Pls
2105 678 Pls
2130 909 Pls
2154 839 Pls
2178 759 Pls
2203 1122 Pls
2227 692 Pls
2251 2275 Pls
2276 839 Pls
2300 796 Pls
2324 680 Pls
2349 758 Pls
2373 872 Pls
2397 950 Pls
2422 881 Pls
2446 804 Pls
2470 641 Pls
2495 874 Pls
2519 639 Pls
2543 2070 Pls
2568 1018 Pls
2592 1592 Pls
2616 679 Pls
2640 833 Pls
2665 877 Pls
2689 600 Pls
2713 722 Pls
2738 799 Pls
2762 641 Pls
2786 1024 Pls
2811 874 Pls
2835 759 Pls
2859 719 Pls
2884 837 Pls
2908 839 Pls
2932 762 Pls
2957 877 Pls
2981 801 Pls
3005 874 Pls
3030 600 Pls
3054 916 Pls
3078 916 Pls
3103 801 Pls
3127 759 Pls
3151 600 Pls
3176 914 Pls
3200 757 Pls
3224 1090 Pls
3248 1630 Pls
3273 1882 Pls
3297 983 Pls
3321 757 Pls
3346 680 Pls
3370 641 Pls
3394 983 Pls
3419 1487 Pls
3443 640 Pls
3467 1042 Pls
3492 904 Pls
3516 939 Pls
3540 793 Pls
3565 1132 Pls
3589 1680 Pls
3613 983 Pls
3638 872 Pls
3662 717 Pls
3686 1094 Pls
3711 839 Pls
3735 641 Pls
3759 1028 Pls
3784 640 Pls
3808 641 Pls
3832 640 Pls
3856 839 Pls
3881 723 Pls
3905 719 Pls
3929 1194 Pls
3954 881 Pls
3978 799 Pls
4002 680 Pls
4027 995 Pls
4051 761 Pls
4075 914 Pls
4100 680 Pls
4124 640 Pls
4148 759 Pls
4173 680 Pls
4197 801 Pls
4221 944 Pls
4246 837 Pls
4270 719 Pls
4294 722 Pls
4319 763 Pls
4343 1212 Pls
4367 762 Pls
4392 757 Pls
4416 799 Pls
4440 874 Pls
4464 640 Pls
4489 759 Pls
4513 720 Pls
4537 1269 Pls
4562 833 Pls
4586 950 Pls
4610 803 Pls
4635 640 Pls
4659 681 Pls
4683 762 Pls
4708 877 Pls
4732 759 Pls
4756 721 Pls
4781 680 Pls
4805 600 Pls
4829 794 Pls
4854 758 Pls
4878 759 Pls
4902 720 Pls
4927 796 Pls
4951 640 Pls
4975 1340 Pls
5000 2006 Pls
5024 2365 Pls
5048 810 Pls
5072 2536 Pls
5097 986 Pls
5121 1260 Pls
5145 2452 Pls
5170 2163 Pls
5194 799 Pls
5218 680 Pls
5243 761 Pls
5267 833 Pls
5291 939 Pls
5316 639 Pls
5340 1416 Pls
5364 2184 Pls
5389 2891 Pls
5413 756 Pls
5437 720 Pls
5462 977 Pls
5486 1466 Pls
5510 1972 Pls
5535 641 Pls
5559 874 Pls
5583 837 Pls
5608 758 Pls
5632 1217 Pls
5656 911 Pls
5680 682 Pls
5705 799 Pls
5729 680 Pls
5753 721 Pls
5778 722 Pls
5802 680 Pls
5826 759 Pls
5851 837 Pls
5875 680 Pls
5899 759 Pls
5924 720 Pls
5948 959 Pls
5972 721 Pls
5997 723 Pls
6021 680 Pls
6045 723 Pls
6070 600 Pls
6094 680 Pls
6118 799 Pls
6143 759 Pls
6167 680 Pls
6191 721 Pls
6216 1513 Pls
6240 758 Pls
6264 833 Pls
6288 1023 Pls
6313 721 Pls
6337 995 Pls
6361 1559 Pls
6386 916 Pls
6410 1304 Pls
6434 872 Pls
6459 986 Pls
6483 794 Pls
6507 874 Pls
6532 679 Pls
6556 986 Pls
6580 717 Pls
6605 1375 Pls
6629 877 Pls
6653 870 Pls
6678 761 Pls
6702 641 Pls
6726 884 Pls
6751 879 Pls
6775 801 Pls
6799 757 Pls
6824 759 Pls
6848 759 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
792 809 M
24 205 V
841 868 L
865 680 L
24 199 V
914 722 L
24 148 V
24 -31 V
25 -78 V
24 -120 V
24 39 V
25 119 V
24 105 V
24 -182 V
25 40 V
24 0 V
24 -40 V
25 35 V
24 902 V
24 210 V
1279 682 L
24 0 V
24 155 V
25 235 V
24 1280 V
24 784 V
1424 680 L
25 2 V
24 195 V
24 -9 V
25 143 V
24 -257 V
24 157 V
25 835 V
24 16 V
1643 640 L
25 190 V
24 -73 V
24 -36 V
25 37 V
24 41 V
24 2 V
25 -2 V
24 -80 V
24 39 V
25 -118 V
24 119 V
24 -119 V
25 40 V
24 0 V
24 1 V
24 40 V
25 77 V
24 -118 V
24 155 V
25 35 V
24 -190 V
24 79 V
25 330 V
24 188 V
24 888 V
2276 759 L
24 115 V
24 -115 V
25 78 V
24 74 V
24 -155 V
25 5 V
24 -120 V
24 0 V
25 273 V
24 -157 V
24 1313 V
2568 904 L
24 655 V
24 -761 V
24 35 V
25 -193 V
24 1 V
24 0 V
25 198 V
24 -76 V
24 339 V
25 -267 V
24 -76 V
24 39 V
25 197 V
24 -196 V
24 -37 V
25 115 V
24 -237 V
24 195 V
25 -235 V
24 869 V
24 -632 V
25 -36 V
24 38 V
24 163 V
25 -128 V
24 79 V
24 -127 V
24 804 V
25 372 V
3297 868 L
24 -33 V
25 -155 V
24 1 V
24 263 V
25 674 V
24 -978 V
24 512 V
25 -324 V
24 73 V
24 -70 V
25 -79 V
24 960 V
24 -691 V
25 -149 V
24 -116 V
24 148 V
25 -184 V
24 -120 V
24 272 V
25 -153 V
24 43 V
24 115 V
24 -38 V
25 -198 V
24 196 V
24 357 V
25 -433 V
24 -2 V
24 -159 V
25 119 V
24 -79 V
24 234 V
25 -194 V
24 -80 V
24 0 V
25 40 V
24 40 V
24 226 V
25 -29 V
24 39 V
24 -235 V
25 1 V
24 458 V
24 -499 V
25 77 V
24 -38 V
24 194 V
24 -234 V
25 119 V
24 -39 V
24 584 V
25 -393 V
24 0 V
24 -230 V
25 40 V
24 1 V
24 -41 V
25 77 V
24 1 V
24 -119 V
25 121 V
24 -81 V
24 270 V
25 -113 V
24 -117 V
24 119 V
25 -43 V
24 -196 V
24 634 V
25 596 V
24 638 V
24 -1169 V
24 -422 V
25 70 V
24 382 V
24 1071 V
25 -208 V
5194 799 L
24 -79 V
25 1 V
24 112 V
24 219 V
25 -258 V
24 554 V
24 781 V
25 784 V
5413 872 L
24 -232 V
25 374 V
24 318 V
24 640 V
5535 682 L
24 -82 V
24 79 V
25 -39 V
24 468 V
24 -275 V
24 -192 V
25 -1 V
24 40 V
24 41 V
25 -80 V
24 -1 V
24 119 V
25 -1 V
24 -78 V
24 199 V
25 -159 V
24 119 V
24 -159 V
25 2 V
24 -2 V
24 43 V
25 -82 V
24 39 V
24 -80 V
25 319 V
24 -279 V
24 40 V
25 899 V
24 -860 V
24 192 V
24 358 V
25 -589 V
24 118 V
24 761 V
25 -406 V
24 46 V
24 -366 V
25 153 V
24 -36 V
24 -76 V
25 -76 V
24 -121 V
24 1206 V
25 -579 V
24 -664 V
24 76 V
25 -76 V
24 41 V
24 -81 V
25 80 V
24 -40 V
24 195 V
25 4 V
24 0 V
792 809 BoxF
816 1014 BoxF
841 868 BoxF
865 680 BoxF
889 879 BoxF
914 722 BoxF
938 870 BoxF
962 839 BoxF
987 761 BoxF
1011 641 BoxF
1035 680 BoxF
1060 799 BoxF
1084 904 BoxF
1108 722 BoxF
1133 762 BoxF
1157 762 BoxF
1181 722 BoxF
1206 757 BoxF
1230 1659 BoxF
1254 1869 BoxF
1279 682 BoxF
1303 682 BoxF
1327 837 BoxF
1352 1072 BoxF
1376 2352 BoxF
1400 3136 BoxF
1424 680 BoxF
1449 682 BoxF
1473 877 BoxF
1497 868 BoxF
1522 1011 BoxF
1546 754 BoxF
1570 911 BoxF
1595 1746 BoxF
1619 1762 BoxF
1643 640 BoxF
1668 830 BoxF
1692 757 BoxF
1716 721 BoxF
1741 758 BoxF
1765 799 BoxF
1789 801 BoxF
1814 799 BoxF
1838 719 BoxF
1862 758 BoxF
1887 640 BoxF
1911 759 BoxF
1935 640 BoxF
1960 680 BoxF
1984 680 BoxF
2008 681 BoxF
2032 721 BoxF
2057 798 BoxF
2081 680 BoxF
2105 835 BoxF
2130 870 BoxF
2154 680 BoxF
2178 759 BoxF
2203 1089 BoxF
2227 1277 BoxF
2251 2165 BoxF
2276 759 BoxF
2300 874 BoxF
2324 759 BoxF
2349 837 BoxF
2373 911 BoxF
2397 756 BoxF
2422 761 BoxF
2446 641 BoxF
2470 641 BoxF
2495 914 BoxF
2519 757 BoxF
2543 2070 BoxF
2568 904 BoxF
2592 1559 BoxF
2616 798 BoxF
2640 833 BoxF
2665 640 BoxF
2689 641 BoxF
2713 641 BoxF
2738 839 BoxF
2762 763 BoxF
2786 1102 BoxF
2811 835 BoxF
2835 759 BoxF
2859 798 BoxF
2884 995 BoxF
2908 799 BoxF
2932 762 BoxF
2957 877 BoxF
2981 640 BoxF
3005 835 BoxF
3030 600 BoxF
3054 1469 BoxF
3078 837 BoxF
3103 801 BoxF
3127 839 BoxF
3151 1002 BoxF
3176 874 BoxF
3200 953 BoxF
3224 826 BoxF
3248 1630 BoxF
3273 2002 BoxF
3297 868 BoxF
3321 835 BoxF
3346 680 BoxF
3370 681 BoxF
3394 944 BoxF
3419 1618 BoxF
3443 640 BoxF
3467 1152 BoxF
3492 828 BoxF
3516 901 BoxF
3540 831 BoxF
3565 752 BoxF
3589 1712 BoxF
3613 1021 BoxF
3638 872 BoxF
3662 756 BoxF
3686 904 BoxF
3711 720 BoxF
3735 600 BoxF
3759 872 BoxF
3784 719 BoxF
3808 762 BoxF
3832 877 BoxF
3856 839 BoxF
3881 641 BoxF
3905 837 BoxF
3929 1194 BoxF
3954 761 BoxF
3978 759 BoxF
4002 600 BoxF
4027 719 BoxF
4051 640 BoxF
4075 874 BoxF
4100 680 BoxF
4124 600 BoxF
4148 600 BoxF
4173 640 BoxF
4197 680 BoxF
4221 906 BoxF
4246 877 BoxF
4270 916 BoxF
4294 681 BoxF
4319 682 BoxF
4343 1140 BoxF
4367 641 BoxF
4392 718 BoxF
4416 680 BoxF
4440 874 BoxF
4464 640 BoxF
4489 759 BoxF
4513 720 BoxF
4537 1304 BoxF
4562 911 BoxF
4586 911 BoxF
4610 681 BoxF
4635 721 BoxF
4659 722 BoxF
4683 681 BoxF
4708 758 BoxF
4732 759 BoxF
4756 640 BoxF
4781 761 BoxF
4805 680 BoxF
4829 950 BoxF
4854 837 BoxF
4878 720 BoxF
4902 839 BoxF
4927 796 BoxF
4951 600 BoxF
4975 1234 BoxF
5000 1830 BoxF
5024 2468 BoxF
5048 1299 BoxF
5072 877 BoxF
5097 947 BoxF
5121 1329 BoxF
5145 2400 BoxF
5170 2192 BoxF
5194 799 BoxF
5218 720 BoxF
5243 721 BoxF
5267 833 BoxF
5291 1052 BoxF
5316 794 BoxF
5340 1348 BoxF
5364 2129 BoxF
5389 2913 BoxF
5413 872 BoxF
5437 640 BoxF
5462 1014 BoxF
5486 1332 BoxF
5510 1972 BoxF
5535 682 BoxF
5559 600 BoxF
5583 679 BoxF
5608 640 BoxF
5632 1108 BoxF
5656 833 BoxF
5680 641 BoxF
5705 640 BoxF
5729 680 BoxF
5753 721 BoxF
5778 641 BoxF
5802 640 BoxF
5826 759 BoxF
5851 758 BoxF
5875 680 BoxF
5899 879 BoxF
5924 720 BoxF
5948 839 BoxF
5972 680 BoxF
5997 682 BoxF
6021 680 BoxF
6045 723 BoxF
6070 641 BoxF
6094 680 BoxF
6118 600 BoxF
6143 919 BoxF
6167 640 BoxF
6191 680 BoxF
6216 1579 BoxF
6240 719 BoxF
6264 911 BoxF
6288 1269 BoxF
6313 680 BoxF
6337 798 BoxF
6361 1559 BoxF
6386 1153 BoxF
6410 1199 BoxF
6434 833 BoxF
6459 986 BoxF
6483 950 BoxF
6507 874 BoxF
6532 798 BoxF
6556 677 BoxF
6580 1883 BoxF
6605 1304 BoxF
6629 640 BoxF
6653 716 BoxF
6678 640 BoxF
6702 681 BoxF
6726 600 BoxF
6751 680 BoxF
6775 640 BoxF
6799 835 BoxF
6824 839 BoxF
6848 839 BoxF
6348 3877 BoxF
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
