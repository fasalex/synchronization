%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/471s20-g8-n50-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Fri Jul 25 14:59:54 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/471s20-g8-n50-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jul 25 14:59:54 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
780 600 M
6080 0 V
stroke
0.500 UL
LTb
780 600 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1133 M
6080 0 V
stroke
0.500 UL
LTb
780 1133 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1133 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1667 M
6080 0 V
stroke
0.500 UL
LTb
780 1667 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 1667 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2200 M
6080 0 V
stroke
0.500 UL
LTb
780 2200 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2200 M
[ [(Helvetica) 200.0 0.0 true true 0 (30)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2733 M
6080 0 V
stroke
0.500 UL
LTb
780 2733 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 2733 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3267 M
6080 0 V
stroke
0.500 UL
LTb
780 3267 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3267 M
[ [(Helvetica) 200.0 0.0 true true 0 (50)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3800 M
4697 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
780 3800 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 3800 M
[ [(Helvetica) 200.0 0.0 true true 0 (60)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 4333 M
4697 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
780 4333 M
63 0 V
6017 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 660 4333 M
[ [(Helvetica) 200.0 0.0 true true 0 (70)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 600 M
0 3840 V
stroke
0.500 UL
LTb
780 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 780 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
1996 600 M
0 3840 V
stroke
0.500 UL
LTb
1996 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 1996 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3212 600 M
0 3840 V
stroke
0.500 UL
LTb
3212 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3212 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4428 600 M
0 3840 V
stroke
0.500 UL
LTb
4428 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4428 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5644 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5644 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5644 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3820 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3820 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
792 1369 M
24 1089 V
25 -721 V
865 663 L
24 590 V
25 363 V
24 276 V
24 67 V
25 -181 V
24 64 V
24 28 V
25 245 V
24 67 V
24 255 V
25 29 V
24 103 V
24 193 V
25 278 V
24 -135 V
24 206 V
25 -267 V
24 -47 V
24 126 V
25 -318 V
24 -18 V
24 -160 V
24 -35 V
25 56 V
24 38 V
24 16 V
25 69 V
24 80 V
24 58 V
25 -50 V
24 -12 V
24 37 V
25 -69 V
24 -138 V
24 38 V
25 -144 V
24 103 V
24 -41 V
25 8 V
24 28 V
24 106 V
25 115 V
24 270 V
24 282 V
25 -304 V
24 194 V
24 86 V
24 -746 V
25 223 V
24 626 V
24 -170 V
25 -88 V
24 -289 V
24 185 V
25 -318 V
24 -24 V
24 355 V
25 2 V
24 -489 V
24 441 V
25 146 V
24 161 V
24 451 V
25 349 V
24 -158 V
24 -107 V
25 -319 V
24 -208 V
24 115 V
25 205 V
24 -807 V
24 101 V
24 420 V
25 282 V
24 -109 V
24 -221 V
25 -122 V
24 -63 V
24 285 V
25 -340 V
24 469 V
24 -22 V
25 471 V
24 -304 V
24 -107 V
25 -77 V
24 -1094 V
24 235 V
25 -53 V
24 -93 V
24 58 V
25 -134 V
24 1 V
24 0 V
25 352 V
24 138 V
24 -312 V
24 240 V
25 -146 V
24 1065 V
24 -265 V
25 -1003 V
24 -7 V
24 287 V
3419 2988 L
24 564 V
24 -21 V
25 216 V
24 -400 V
24 8 V
25 -589 V
24 58 V
24 484 V
25 -652 V
24 200 V
24 -211 V
25 251 V
24 -237 V
24 156 V
25 -95 V
24 855 V
24 -216 V
24 -309 V
25 -562 V
24 160 V
24 -115 V
25 955 V
24 198 V
24 504 V
25 227 V
24 -1091 V
24 205 V
25 18 V
24 654 V
24 144 V
25 -633 V
24 287 V
24 -188 V
25 309 V
24 -216 V
24 -615 V
25 -589 V
24 360 V
24 283 V
25 -481 V
24 535 V
24 -607 V
24 33 V
25 -3 V
24 369 V
24 -125 V
25 -360 V
24 -78 V
24 82 V
25 87 V
24 -289 V
24 3 V
25 97 V
24 43 V
24 307 V
25 -434 V
24 104 V
24 94 V
25 134 V
24 -354 V
24 -8 V
25 134 V
24 -58 V
24 -178 V
25 -91 V
24 -7 V
24 70 V
24 138 V
25 -77 V
24 44 V
24 28 V
25 -105 V
24 443 V
24 -305 V
25 19 V
24 -34 V
24 -102 V
25 136 V
24 66 V
24 4 V
25 -636 V
24 754 V
24 333 V
25 532 V
24 300 V
24 -170 V
25 -689 V
24 608 V
24 -681 V
25 1091 V
24 -692 V
24 -27 V
24 74 V
25 -1011 V
24 467 V
24 263 V
25 425 V
24 492 V
24 229 V
25 -436 V
24 333 V
24 114 V
25 -540 V
24 -1214 V
5972 2829 L
25 481 V
24 276 V
24 -285 V
25 -1161 V
24 751 V
24 -331 V
25 315 V
24 523 V
24 234 V
25 -693 V
24 132 V
24 -260 V
24 -122 V
25 -50 V
24 534 V
24 300 V
25 -902 V
24 101 V
24 93 V
25 258 V
24 227 V
24 -747 V
25 230 V
24 214 V
24 -413 V
25 -34 V
24 441 V
24 -501 V
25 -111 V
24 -62 V
24 111 V
25 255 V
24 -311 V
24 -42 V
25 118 V
24 268 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
792 720 M
24 493 V
841 931 L
24 26 V
889 853 L
25 64 V
24 196 V
962 950 L
987 793 L
24 -22 V
24 41 V
25 192 V
24 -59 V
24 129 V
25 -89 V
24 25 V
24 -46 V
25 260 V
24 -155 V
24 264 V
25 -241 V
24 -33 V
24 377 V
25 -547 V
24 -164 V
24 64 V
24 43 V
25 41 V
24 92 V
24 -55 V
25 -123 V
24 100 V
24 58 V
25 -98 V
24 84 V
24 -24 V
25 39 V
24 -197 V
24 242 V
25 -284 V
24 181 V
24 -38 V
25 -20 V
24 1 V
24 54 V
25 113 V
24 539 V
24 -111 V
25 -132 V
24 463 V
24 241 V
2032 942 L
25 344 V
24 853 V
24 -280 V
25 -87 V
24 -392 V
24 206 V
25 -370 V
24 -170 V
24 571 V
25 -308 V
24 -368 V
24 283 V
25 -130 V
24 -275 V
24 92 V
25 1388 V
24 398 V
24 -92 V
25 -549 V
24 -427 V
24 227 V
25 315 V
2592 723 L
24 269 V
24 921 V
25 484 V
24 -130 V
24 -706 V
25 -444 V
24 663 V
24 378 V
25 -373 V
24 719 V
24 -326 V
25 1033 V
24 -367 V
24 -127 V
25 -258 V
2981 785 L
24 1 V
25 662 V
24 -477 V
24 82 V
25 -265 V
24 78 V
24 77 V
25 463 V
24 -254 V
24 -534 V
24 1587 V
25 158 V
24 282 V
24 -317 V
3346 810 L
24 1108 V
24 552 V
25 -900 V
24 827 V
24 -241 V
25 264 V
24 -399 V
24 -35 V
25 -977 V
24 122 V
24 773 V
25 -938 V
24 380 V
24 -265 V
25 334 V
24 -364 V
24 470 V
25 -40 V
24 719 V
24 -737 V
24 -776 V
25 121 V
24 82 V
24 159 V
25 1319 V
24 578 V
24 458 V
25 468 V
24 -1534 V
24 257 V
25 231 V
24 -66 V
24 257 V
25 -332 V
24 435 V
24 -387 V
25 318 V
24 -247 V
24 -777 V
25 -991 V
24 170 V
24 766 V
4392 918 L
24 1221 V
24 -918 V
24 -65 V
25 24 V
24 648 V
24 -633 V
25 -131 V
24 -79 V
24 84 V
25 263 V
24 -363 V
24 -264 V
25 301 V
24 -98 V
24 345 V
25 -297 V
24 29 V
24 199 V
25 66 V
24 -423 V
24 0 V
25 562 V
24 366 V
24 -784 V
25 -98 V
24 62 V
24 -190 V
24 103 V
25 158 V
24 -280 V
24 85 V
25 66 V
24 493 V
24 -479 V
25 -45 V
24 1 V
24 -99 V
25 303 V
24 23 V
24 322 V
25 -716 V
24 13 V
24 1232 V
25 471 V
24 81 V
24 -508 V
25 -244 V
24 1133 V
24 -422 V
25 809 V
24 -794 V
24 -1321 V
24 459 V
25 -685 V
24 -210 V
24 874 V
25 558 V
24 919 V
24 454 V
25 -771 V
24 472 V
24 -23 V
25 -611 V
24 -1352 V
24 96 V
25 1082 V
24 307 V
24 -376 V
6070 638 L
24 941 V
24 -575 V
25 305 V
24 821 V
24 295 V
25 -1170 V
24 341 V
24 -395 V
24 -297 V
25 -36 V
24 857 V
24 480 V
6386 828 L
24 39 V
24 245 V
25 464 V
24 232 V
6507 767 L
25 233 V
24 756 V
24 -810 V
25 22 V
24 688 V
24 -767 V
25 -101 V
24 208 V
24 -28 V
25 415 V
24 -489 V
24 63 V
25 -150 V
24 324 V
792 720 Pls
816 1213 Pls
841 931 Pls
865 957 Pls
889 853 Pls
914 917 Pls
938 1113 Pls
962 950 Pls
987 793 Pls
1011 771 Pls
1035 812 Pls
1060 1004 Pls
1084 945 Pls
1108 1074 Pls
1133 985 Pls
1157 1010 Pls
1181 964 Pls
1206 1224 Pls
1230 1069 Pls
1254 1333 Pls
1279 1092 Pls
1303 1059 Pls
1327 1436 Pls
1352 889 Pls
1376 725 Pls
1400 789 Pls
1424 832 Pls
1449 873 Pls
1473 965 Pls
1497 910 Pls
1522 787 Pls
1546 887 Pls
1570 945 Pls
1595 847 Pls
1619 931 Pls
1643 907 Pls
1668 946 Pls
1692 749 Pls
1716 991 Pls
1741 707 Pls
1765 888 Pls
1789 850 Pls
1814 830 Pls
1838 831 Pls
1862 885 Pls
1887 998 Pls
1911 1537 Pls
1935 1426 Pls
1960 1294 Pls
1984 1757 Pls
2008 1998 Pls
2032 942 Pls
2057 1286 Pls
2081 2139 Pls
2105 1859 Pls
2130 1772 Pls
2154 1380 Pls
2178 1586 Pls
2203 1216 Pls
2227 1046 Pls
2251 1617 Pls
2276 1309 Pls
2300 941 Pls
2324 1224 Pls
2349 1094 Pls
2373 819 Pls
2397 911 Pls
2422 2299 Pls
2446 2697 Pls
2470 2605 Pls
2495 2056 Pls
2519 1629 Pls
2543 1856 Pls
2568 2171 Pls
2592 723 Pls
2616 992 Pls
2640 1913 Pls
2665 2397 Pls
2689 2267 Pls
2713 1561 Pls
2738 1117 Pls
2762 1780 Pls
2786 2158 Pls
2811 1785 Pls
2835 2504 Pls
2859 2178 Pls
2884 3211 Pls
2908 2844 Pls
2932 2717 Pls
2957 2459 Pls
2981 785 Pls
3005 786 Pls
3030 1448 Pls
3054 971 Pls
3078 1053 Pls
3103 788 Pls
3127 866 Pls
3151 943 Pls
3176 1406 Pls
3200 1152 Pls
3224 618 Pls
3248 2205 Pls
3273 2363 Pls
3297 2645 Pls
3321 2328 Pls
3346 810 Pls
3370 1918 Pls
3394 2470 Pls
3419 1570 Pls
3443 2397 Pls
3467 2156 Pls
3492 2420 Pls
3516 2021 Pls
3540 1986 Pls
3565 1009 Pls
3589 1131 Pls
3613 1904 Pls
3638 966 Pls
3662 1346 Pls
3686 1081 Pls
3711 1415 Pls
3735 1051 Pls
3759 1521 Pls
3784 1481 Pls
3808 2200 Pls
3832 1463 Pls
3856 687 Pls
3881 808 Pls
3905 890 Pls
3929 1049 Pls
3954 2368 Pls
3978 2946 Pls
4002 3404 Pls
4027 3872 Pls
4051 2338 Pls
4075 2595 Pls
4100 2826 Pls
4124 2760 Pls
4148 3017 Pls
4173 2685 Pls
4197 3120 Pls
4221 2733 Pls
4246 3051 Pls
4270 2804 Pls
4294 2027 Pls
4319 1036 Pls
4343 1206 Pls
4367 1972 Pls
4392 918 Pls
4416 2139 Pls
4440 1221 Pls
4464 1156 Pls
4489 1180 Pls
4513 1828 Pls
4537 1195 Pls
4562 1064 Pls
4586 985 Pls
4610 1069 Pls
4635 1332 Pls
4659 969 Pls
4683 705 Pls
4708 1006 Pls
4732 908 Pls
4756 1253 Pls
4781 956 Pls
4805 985 Pls
4829 1184 Pls
4854 1250 Pls
4878 827 Pls
4902 827 Pls
4927 1389 Pls
4951 1755 Pls
4975 971 Pls
5000 873 Pls
5024 935 Pls
5048 745 Pls
5072 848 Pls
5097 1006 Pls
5121 726 Pls
5145 811 Pls
5170 877 Pls
5194 1370 Pls
5218 891 Pls
5243 846 Pls
5267 847 Pls
5291 748 Pls
5316 1051 Pls
5340 1074 Pls
5364 1396 Pls
5389 680 Pls
5413 693 Pls
5437 1925 Pls
5462 2396 Pls
5486 2477 Pls
5510 1969 Pls
5535 1725 Pls
5559 2858 Pls
5583 2436 Pls
5608 3245 Pls
5632 2451 Pls
5656 1130 Pls
5680 1589 Pls
5705 904 Pls
5729 694 Pls
5753 1568 Pls
5778 2126 Pls
5802 3045 Pls
5826 3499 Pls
5851 2728 Pls
5875 3200 Pls
5899 3177 Pls
5924 2566 Pls
5948 1214 Pls
5972 1310 Pls
5997 2392 Pls
6021 2699 Pls
6045 2323 Pls
6070 638 Pls
6094 1579 Pls
6118 1004 Pls
6143 1309 Pls
6167 2130 Pls
6191 2425 Pls
6216 1255 Pls
6240 1596 Pls
6264 1201 Pls
6288 904 Pls
6313 868 Pls
6337 1725 Pls
6361 2205 Pls
6386 828 Pls
6410 867 Pls
6434 1112 Pls
6459 1576 Pls
6483 1808 Pls
6507 767 Pls
6532 1000 Pls
6556 1756 Pls
6580 946 Pls
6605 968 Pls
6629 1656 Pls
6653 889 Pls
6678 788 Pls
6702 996 Pls
6726 968 Pls
6751 1383 Pls
6775 894 Pls
6799 957 Pls
6824 807 Pls
6848 1131 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
792 804 M
24 130 V
841 745 L
24 65 V
24 43 V
25 43 V
24 114 V
24 -39 V
987 750 L
24 -64 V
24 104 V
25 133 V
24 -222 V
24 176 V
25 108 V
24 -118 V
24 56 V
25 188 V
24 -159 V
24 344 V
25 -401 V
24 45 V
24 403 V
25 -578 V
24 23 V
24 -146 V
24 42 V
25 189 V
24 -90 V
24 -18 V
25 -20 V
24 101 V
24 58 V
25 -242 V
24 145 V
24 140 V
25 -62 V
24 -200 V
24 162 V
25 -119 V
24 99 V
24 23 V
25 -83 V
24 -20 V
24 199 V
25 32 V
24 361 V
24 400 V
25 -281 V
24 249 V
24 178 V
2032 862 L
25 252 V
24 885 V
24 -173 V
25 -173 V
24 -310 V
24 243 V
25 -524 V
24 62 V
24 368 V
25 -6 V
24 -826 V
24 564 V
25 277 V
24 213 V
24 598 V
25 699 V
24 -301 V
24 -145 V
25 -541 V
24 -344 V
24 -20 V
25 -78 V
24 64 V
24 -752 V
24 1019 V
25 470 V
24 -162 V
24 -340 V
25 -20 V
24 -15 V
24 327 V
25 -439 V
24 658 V
24 79 V
25 728 V
24 -519 V
24 -124 V
25 -126 V
2981 908 L
24 158 V
25 -345 V
24 1094 V
24 -782 V
25 -370 V
24 121 V
24 159 V
25 390 V
24 147 V
24 -540 V
24 363 V
25 -38 V
24 1327 V
24 -384 V
3346 747 L
24 -126 V
24 412 V
25 429 V
24 818 V
24 -18 V
25 499 V
24 -804 V
24 29 V
3565 825 L
24 247 V
24 667 V
25 -834 V
24 326 V
24 -150 V
25 315 V
24 -306 V
24 148 V
25 -589 V
24 456 V
24 1036 V
24 -447 V
25 -928 V
24 723 V
24 -544 V
25 -153 V
24 1401 V
24 130 V
25 1123 V
24 -1152 V
24 572 V
25 175 V
24 226 V
24 -213 V
25 -462 V
24 494 V
24 -391 V
25 522 V
24 -387 V
24 -998 V
4319 818 L
24 406 V
24 717 V
25 -761 V
24 897 V
24 -837 V
24 -122 V
25 -54 V
24 630 V
24 -115 V
25 -380 V
24 -335 V
24 205 V
25 188 V
24 -493 V
24 -101 V
25 79 V
24 104 V
24 607 V
25 -644 V
24 75 V
24 183 V
25 68 V
24 -266 V
24 -63 V
25 451 V
24 549 V
4975 744 L
25 45 V
24 -22 V
24 -167 V
24 227 V
25 179 V
24 -175 V
24 -126 V
25 23 V
24 473 V
24 -435 V
25 162 V
24 -122 V
24 26 V
25 76 V
24 28 V
24 -95 V
25 1423 V
24 -1107 V
24 -279 V
25 258 V
24 2037 V
24 44 V
25 -532 V
24 112 V
24 -491 V
25 906 V
24 -816 V
24 -220 V
24 -63 V
5705 965 L
24 311 V
24 274 V
25 499 V
24 768 V
24 305 V
25 -880 V
24 358 V
24 100 V
25 -214 V
5948 773 L
24 355 V
25 275 V
24 162 V
24 937 V
25 -1264 V
24 341 V
24 -797 V
25 545 V
24 711 V
24 457 V
25 -1221 V
24 233 V
24 -306 V
24 -459 V
25 187 V
24 233 V
24 1027 V
6386 704 L
24 19 V
24 310 V
25 344 V
24 397 V
6507 767 L
25 519 V
24 281 V
24 -804 V
25 144 V
24 767 V
24 -785 V
25 -206 V
24 105 V
24 78 V
25 536 V
24 -550 V
24 -231 V
25 144 V
24 327 V
792 804 BoxF
816 934 BoxF
841 745 BoxF
865 810 BoxF
889 853 BoxF
914 896 BoxF
938 1010 BoxF
962 971 BoxF
987 750 BoxF
1011 686 BoxF
1035 790 BoxF
1060 923 BoxF
1084 701 BoxF
1108 877 BoxF
1133 985 BoxF
1157 867 BoxF
1181 923 BoxF
1206 1111 BoxF
1230 952 BoxF
1254 1296 BoxF
1279 895 BoxF
1303 940 BoxF
1327 1343 BoxF
1352 765 BoxF
1376 788 BoxF
1400 642 BoxF
1424 684 BoxF
1449 873 BoxF
1473 783 BoxF
1497 765 BoxF
1522 745 BoxF
1546 846 BoxF
1570 904 BoxF
1595 662 BoxF
1619 807 BoxF
1643 947 BoxF
1668 885 BoxF
1692 685 BoxF
1716 847 BoxF
1741 728 BoxF
1765 827 BoxF
1789 850 BoxF
1814 767 BoxF
1838 747 BoxF
1862 946 BoxF
1887 978 BoxF
1911 1339 BoxF
1935 1739 BoxF
1960 1458 BoxF
1984 1707 BoxF
2008 1885 BoxF
2032 862 BoxF
2057 1114 BoxF
2081 1999 BoxF
2105 1826 BoxF
2130 1653 BoxF
2154 1343 BoxF
2178 1586 BoxF
2203 1062 BoxF
2227 1124 BoxF
2251 1492 BoxF
2276 1486 BoxF
2300 660 BoxF
2324 1224 BoxF
2349 1501 BoxF
2373 1714 BoxF
2397 2312 BoxF
2422 3011 BoxF
2446 2710 BoxF
2470 2565 BoxF
2495 2024 BoxF
2519 1680 BoxF
2543 1660 BoxF
2568 1582 BoxF
2592 1646 BoxF
2616 894 BoxF
2640 1913 BoxF
2665 2383 BoxF
2689 2221 BoxF
2713 1881 BoxF
2738 1861 BoxF
2762 1846 BoxF
2786 2173 BoxF
2811 1734 BoxF
2835 2392 BoxF
2859 2471 BoxF
2884 3199 BoxF
2908 2680 BoxF
2932 2556 BoxF
2957 2430 BoxF
2981 908 BoxF
3005 1066 BoxF
3030 721 BoxF
3054 1815 BoxF
3078 1033 BoxF
3103 663 BoxF
3127 784 BoxF
3151 943 BoxF
3176 1333 BoxF
3200 1480 BoxF
3224 940 BoxF
3248 1303 BoxF
3273 1265 BoxF
3297 2592 BoxF
3321 2208 BoxF
3346 747 BoxF
3370 621 BoxF
3394 1033 BoxF
3419 1462 BoxF
3443 2280 BoxF
3467 2262 BoxF
3492 2761 BoxF
3516 1957 BoxF
3540 1986 BoxF
3565 825 BoxF
3589 1072 BoxF
3613 1739 BoxF
3638 905 BoxF
3662 1231 BoxF
3686 1081 BoxF
3711 1396 BoxF
3735 1090 BoxF
3759 1238 BoxF
3784 649 BoxF
3808 1105 BoxF
3832 2141 BoxF
3856 1694 BoxF
3881 766 BoxF
3905 1489 BoxF
3929 945 BoxF
3954 792 BoxF
3978 2193 BoxF
4002 2323 BoxF
4027 3446 BoxF
4051 2294 BoxF
4075 2866 BoxF
4100 3041 BoxF
4124 3267 BoxF
4148 3054 BoxF
4173 2592 BoxF
4197 3086 BoxF
4221 2695 BoxF
4246 3217 BoxF
4270 2830 BoxF
4294 1832 BoxF
4319 818 BoxF
4343 1224 BoxF
4367 1941 BoxF
4392 1180 BoxF
4416 2077 BoxF
4440 1240 BoxF
4464 1118 BoxF
4489 1064 BoxF
4513 1694 BoxF
4537 1579 BoxF
4562 1199 BoxF
4586 864 BoxF
4610 1069 BoxF
4635 1257 BoxF
4659 764 BoxF
4683 663 BoxF
4708 742 BoxF
4732 846 BoxF
4756 1453 BoxF
4781 809 BoxF
4805 884 BoxF
4829 1067 BoxF
4854 1135 BoxF
4878 869 BoxF
4902 806 BoxF
4927 1257 BoxF
4951 1806 BoxF
4975 744 BoxF
5000 789 BoxF
5024 767 BoxF
5048 600 BoxF
5072 827 BoxF
5097 1006 BoxF
5121 831 BoxF
5145 705 BoxF
5170 728 BoxF
5194 1201 BoxF
5218 766 BoxF
5243 928 BoxF
5267 806 BoxF
5291 832 BoxF
5316 908 BoxF
5340 936 BoxF
5364 841 BoxF
5389 2264 BoxF
5413 1157 BoxF
5437 878 BoxF
5462 1136 BoxF
5486 3173 BoxF
5510 3217 BoxF
5535 2685 BoxF
5559 2797 BoxF
5583 2306 BoxF
5608 3212 BoxF
5632 2396 BoxF
5656 2176 BoxF
5680 2113 BoxF
5705 965 BoxF
5729 1276 BoxF
5753 1550 BoxF
5778 2049 BoxF
5802 2817 BoxF
5826 3122 BoxF
5851 2242 BoxF
5875 2600 BoxF
5899 2700 BoxF
5924 2486 BoxF
5948 773 BoxF
5972 1128 BoxF
5997 1403 BoxF
6021 1565 BoxF
6045 2502 BoxF
6070 1238 BoxF
6094 1579 BoxF
6118 782 BoxF
6143 1327 BoxF
6167 2038 BoxF
6191 2495 BoxF
6216 1274 BoxF
6240 1507 BoxF
6264 1201 BoxF
6288 742 BoxF
6313 929 BoxF
6337 1162 BoxF
6361 2189 BoxF
6386 704 BoxF
6410 723 BoxF
6434 1033 BoxF
6459 1377 BoxF
6483 1774 BoxF
6507 767 BoxF
6532 1286 BoxF
6556 1567 BoxF
6580 763 BoxF
6605 907 BoxF
6629 1674 BoxF
6653 889 BoxF
6678 683 BoxF
6702 788 BoxF
6726 866 BoxF
6751 1402 BoxF
6775 852 BoxF
6799 621 BoxF
6824 765 BoxF
6848 1092 BoxF
6348 3877 BoxF
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
