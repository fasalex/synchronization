%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/39s0-g8-n20-alpha250.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Sat Aug  2 13:06:55 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/39s0-g8-n20-alpha250.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Aug  2 13:06:55 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
780 600 M
6080 0 V
stroke
0.500 UL
LTb
780 600 M
63 0 V
6017 0 R
-63 0 V
stroke
660 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (5)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 1560 M
6080 0 V
stroke
0.500 UL
LTb
780 1560 M
63 0 V
6017 0 R
-63 0 V
stroke
660 1560 M
[ [(Helvetica) 200.0 0.0 true true 0 (10)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 2520 M
6080 0 V
stroke
0.500 UL
LTb
780 2520 M
63 0 V
6017 0 R
-63 0 V
stroke
660 2520 M
[ [(Helvetica) 200.0 0.0 true true 0 (15)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 3480 M
6080 0 V
stroke
0.500 UL
LTb
780 3480 M
63 0 V
6017 0 R
-63 0 V
stroke
660 3480 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 4440 M
6080 0 V
stroke
0.500 UL
LTb
780 4440 M
63 0 V
6017 0 R
-63 0 V
stroke
660 4440 M
[ [(Helvetica) 200.0 0.0 true true 0 (25)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
780 600 M
0 3840 V
stroke
0.500 UL
LTb
780 600 M
0 63 V
0 3777 R
0 -63 V
stroke
780 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
1996 600 M
0 3840 V
stroke
0.500 UL
LTb
1996 600 M
0 63 V
0 3777 R
0 -63 V
stroke
1996 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3212 600 M
0 3840 V
stroke
0.500 UL
LTb
3212 600 M
0 63 V
0 3777 R
0 -63 V
stroke
3212 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4428 600 M
0 3840 V
stroke
0.500 UL
LTb
4428 600 M
0 63 V
0 3777 R
0 -63 V
stroke
4428 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5644 600 M
0 2977 V
0 800 R
0 63 V
stroke
0.500 UL
LTb
5644 600 M
0 63 V
0 3777 R
0 -63 V
stroke
5644 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Synchronization error\(clock cycles\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3820 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3820 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Synchronization error for 20 nodes moving at 0 km/hr)]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
792 4248 M
24 -192 V
25 -768 V
24 -576 V
24 -960 V
25 -576 V
938 984 L
962 792 L
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 -192 V
25 192 V
24 0 V
24 -192 V
25 0 V
24 0 V
24 0 V
25 192 V
24 0 V
24 -192 V
24 192 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 -192 V
25 0 V
24 192 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
3516 792 L
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
6070 792 L
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
24 0 V
25 0 V
24 0 V
1.000 UP
stroke
LT1
1.00 0.00 0.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (M)]
] -66.7 MRshow
LT1
1.00 0.00 0.00 C 792 4440 Pnt
816 2136 Pnt
841 2136 Pnt
865 1944 Pnt
889 1944 Pnt
914 2136 Pnt
938 1752 Pnt
962 2328 Pnt
987 2328 Pnt
1011 2328 Pnt
1035 2136 Pnt
1060 2136 Pnt
1084 2136 Pnt
1108 2328 Pnt
1133 2136 Pnt
1157 2328 Pnt
1181 2136 Pnt
1206 2136 Pnt
1230 2136 Pnt
1254 2328 Pnt
1279 2136 Pnt
1303 2328 Pnt
1327 2136 Pnt
1352 2136 Pnt
1376 2136 Pnt
1400 2328 Pnt
1424 2136 Pnt
1449 2328 Pnt
1473 2136 Pnt
1497 2136 Pnt
1522 2136 Pnt
1546 2328 Pnt
1570 2136 Pnt
1595 2328 Pnt
1619 2136 Pnt
1643 2136 Pnt
1668 2136 Pnt
1692 2328 Pnt
1716 2136 Pnt
1741 2328 Pnt
1765 2136 Pnt
1789 2136 Pnt
1814 2136 Pnt
1838 2328 Pnt
1862 2136 Pnt
1887 2328 Pnt
1911 2136 Pnt
1935 2136 Pnt
1960 2136 Pnt
1984 2328 Pnt
2008 2136 Pnt
2032 2328 Pnt
2057 2136 Pnt
2081 2136 Pnt
2105 2136 Pnt
2130 2328 Pnt
2154 2136 Pnt
2178 2328 Pnt
2203 2136 Pnt
2227 2136 Pnt
2251 2136 Pnt
2276 2328 Pnt
2300 2136 Pnt
2324 2328 Pnt
2349 2136 Pnt
2373 2136 Pnt
2397 2136 Pnt
2422 2328 Pnt
2446 2136 Pnt
2470 2328 Pnt
2495 2136 Pnt
2519 2136 Pnt
2543 2136 Pnt
2568 2328 Pnt
2592 2136 Pnt
2616 2328 Pnt
2640 2136 Pnt
2665 2136 Pnt
2689 2136 Pnt
2713 2328 Pnt
2738 2136 Pnt
2762 2328 Pnt
2786 2136 Pnt
2811 2136 Pnt
2835 2136 Pnt
2859 2328 Pnt
2884 2136 Pnt
2908 2328 Pnt
2932 2136 Pnt
2957 2136 Pnt
2981 2136 Pnt
3005 2328 Pnt
3030 2136 Pnt
3054 2328 Pnt
3078 2136 Pnt
3103 2136 Pnt
3127 2136 Pnt
3151 2328 Pnt
3176 2136 Pnt
3200 2328 Pnt
3224 2136 Pnt
3248 2136 Pnt
3273 2136 Pnt
3297 2328 Pnt
3321 2136 Pnt
3346 2328 Pnt
3370 2136 Pnt
3394 2136 Pnt
3419 2136 Pnt
3443 2328 Pnt
3467 2136 Pnt
3492 2328 Pnt
3516 2136 Pnt
3540 2136 Pnt
3565 2136 Pnt
3589 2328 Pnt
3613 2136 Pnt
3638 2328 Pnt
3662 2136 Pnt
3686 2136 Pnt
3711 2136 Pnt
3735 2328 Pnt
3759 2136 Pnt
3784 2328 Pnt
3808 2136 Pnt
3832 2136 Pnt
3856 2136 Pnt
3881 2328 Pnt
3905 2136 Pnt
3929 2328 Pnt
3954 2136 Pnt
3978 2136 Pnt
4002 2136 Pnt
4027 2328 Pnt
4051 2136 Pnt
4075 2328 Pnt
4100 2136 Pnt
4124 2136 Pnt
4148 2136 Pnt
4173 2328 Pnt
4197 2136 Pnt
4221 2328 Pnt
4246 2136 Pnt
4270 2136 Pnt
4294 2136 Pnt
4319 2328 Pnt
4343 2136 Pnt
4367 2328 Pnt
4392 2136 Pnt
4416 2136 Pnt
4440 2136 Pnt
4464 2328 Pnt
4489 2136 Pnt
4513 2328 Pnt
4537 2136 Pnt
4562 2136 Pnt
4586 2136 Pnt
4610 2328 Pnt
4635 2136 Pnt
4659 2328 Pnt
4683 2136 Pnt
4708 2136 Pnt
4732 2136 Pnt
4756 2328 Pnt
4781 2136 Pnt
4805 2328 Pnt
4829 2136 Pnt
4854 2136 Pnt
4878 2136 Pnt
4902 2328 Pnt
4927 2136 Pnt
4951 2328 Pnt
4975 2136 Pnt
5000 2136 Pnt
5024 2136 Pnt
5048 2328 Pnt
5072 2136 Pnt
5097 2328 Pnt
5121 2136 Pnt
5145 2136 Pnt
5170 2136 Pnt
5194 2328 Pnt
5218 2136 Pnt
5243 2328 Pnt
5267 2136 Pnt
5291 2136 Pnt
5316 2136 Pnt
5340 2328 Pnt
5364 2136 Pnt
5389 2328 Pnt
5413 2136 Pnt
5437 2136 Pnt
5462 2136 Pnt
5486 2328 Pnt
5510 2136 Pnt
5535 2328 Pnt
5559 2136 Pnt
5583 2136 Pnt
5608 2136 Pnt
5632 2328 Pnt
5656 2136 Pnt
5680 2328 Pnt
5705 2136 Pnt
5729 2136 Pnt
5753 2136 Pnt
5778 2328 Pnt
5802 2136 Pnt
5826 2328 Pnt
5851 2136 Pnt
5875 2136 Pnt
5899 2136 Pnt
5924 2328 Pnt
5948 2136 Pnt
5972 2328 Pnt
5997 2136 Pnt
6021 2136 Pnt
6045 2136 Pnt
6070 2328 Pnt
6094 2136 Pnt
6118 2328 Pnt
6143 2136 Pnt
6167 2136 Pnt
6191 2136 Pnt
6216 2328 Pnt
6240 2136 Pnt
6264 2328 Pnt
6288 2136 Pnt
6313 2136 Pnt
6337 2136 Pnt
6361 2328 Pnt
6386 2136 Pnt
6410 2328 Pnt
6434 2136 Pnt
6459 2136 Pnt
6483 2136 Pnt
6507 2328 Pnt
6532 2136 Pnt
6556 2328 Pnt
6580 2136 Pnt
6605 2136 Pnt
6629 2136 Pnt
6653 2328 Pnt
6678 2136 Pnt
6702 2328 Pnt
6726 2136 Pnt
6751 2136 Pnt
6775 2136 Pnt
6799 2328 Pnt
6824 2136 Pnt
6848 2328 Pnt
6348 4077 Pnt
1.000 UP
3.000 UL
LT2
1.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT2
1.00 0.00 1.00 C 792 4440 Pnt
816 2136 Pnt
841 1944 Pnt
865 1752 Pnt
889 1944 Pnt
914 1752 Pnt
938 1752 Pnt
962 1944 Pnt
987 1752 Pnt
1011 1944 Pnt
1035 2136 Pnt
1060 1944 Pnt
1084 1752 Pnt
1108 1944 Pnt
1133 1752 Pnt
1157 1944 Pnt
1181 1752 Pnt
1206 1944 Pnt
1230 1752 Pnt
1254 1944 Pnt
1279 1752 Pnt
1303 1944 Pnt
1327 1752 Pnt
1352 1944 Pnt
1376 1752 Pnt
1400 1944 Pnt
1424 1752 Pnt
1449 1944 Pnt
1473 1752 Pnt
1497 1944 Pnt
1522 1752 Pnt
1546 1944 Pnt
1570 1752 Pnt
1595 1944 Pnt
1619 1752 Pnt
1643 1944 Pnt
1668 1752 Pnt
1692 1944 Pnt
1716 1752 Pnt
1741 1944 Pnt
1765 1752 Pnt
1789 1944 Pnt
1814 1752 Pnt
1838 1944 Pnt
1862 1752 Pnt
1887 1944 Pnt
1911 1752 Pnt
1935 1944 Pnt
1960 1752 Pnt
1984 1944 Pnt
2008 1752 Pnt
2032 1944 Pnt
2057 1752 Pnt
2081 1944 Pnt
2105 1752 Pnt
2130 1944 Pnt
2154 1752 Pnt
2178 1944 Pnt
2203 1752 Pnt
2227 1944 Pnt
2251 1752 Pnt
2276 1944 Pnt
2300 1752 Pnt
2324 1944 Pnt
2349 1752 Pnt
2373 1944 Pnt
2397 1752 Pnt
2422 1944 Pnt
2446 1752 Pnt
2470 1944 Pnt
2495 1752 Pnt
2519 1944 Pnt
2543 1752 Pnt
2568 1944 Pnt
2592 1752 Pnt
2616 1944 Pnt
2640 1752 Pnt
2665 1944 Pnt
2689 1752 Pnt
2713 1944 Pnt
2738 1752 Pnt
2762 1944 Pnt
2786 1752 Pnt
2811 1944 Pnt
2835 1752 Pnt
2859 1944 Pnt
2884 1752 Pnt
2908 1944 Pnt
2932 1752 Pnt
2957 1944 Pnt
2981 1752 Pnt
3005 1944 Pnt
3030 1752 Pnt
3054 1944 Pnt
3078 1752 Pnt
3103 1944 Pnt
3127 1752 Pnt
3151 1944 Pnt
3176 1752 Pnt
3200 1944 Pnt
3224 1752 Pnt
3248 1944 Pnt
3273 1752 Pnt
3297 1944 Pnt
3321 1752 Pnt
3346 1944 Pnt
3370 1752 Pnt
3394 1944 Pnt
3419 1752 Pnt
3443 1944 Pnt
3467 1752 Pnt
3492 1944 Pnt
3516 1752 Pnt
3540 1944 Pnt
3565 1752 Pnt
3589 1944 Pnt
3613 1752 Pnt
3638 1944 Pnt
3662 1752 Pnt
3686 1944 Pnt
3711 1752 Pnt
3735 1944 Pnt
3759 1752 Pnt
3784 1944 Pnt
3808 1752 Pnt
3832 1944 Pnt
3856 1752 Pnt
3881 1944 Pnt
3905 1752 Pnt
3929 1944 Pnt
3954 1752 Pnt
3978 1944 Pnt
4002 1752 Pnt
4027 1944 Pnt
4051 1752 Pnt
4075 1944 Pnt
4100 1752 Pnt
4124 1944 Pnt
4148 1752 Pnt
4173 1944 Pnt
4197 1752 Pnt
4221 1944 Pnt
4246 1752 Pnt
4270 1944 Pnt
4294 1752 Pnt
4319 1944 Pnt
4343 1752 Pnt
4367 1944 Pnt
4392 1752 Pnt
4416 1944 Pnt
4440 1752 Pnt
4464 1944 Pnt
4489 1752 Pnt
4513 1944 Pnt
4537 1752 Pnt
4562 1944 Pnt
4586 1752 Pnt
4610 1944 Pnt
4635 1752 Pnt
4659 1944 Pnt
4683 1752 Pnt
4708 1944 Pnt
4732 1752 Pnt
4756 1944 Pnt
4781 1752 Pnt
4805 1944 Pnt
4829 1752 Pnt
4854 1944 Pnt
4878 1752 Pnt
4902 1944 Pnt
4927 1752 Pnt
4951 1944 Pnt
4975 1752 Pnt
5000 1944 Pnt
5024 1752 Pnt
5048 1944 Pnt
5072 1752 Pnt
5097 1944 Pnt
5121 1752 Pnt
5145 1944 Pnt
5170 1752 Pnt
5194 1944 Pnt
5218 1752 Pnt
5243 1944 Pnt
5267 1752 Pnt
5291 1944 Pnt
5316 1752 Pnt
5340 1944 Pnt
5364 1752 Pnt
5389 1944 Pnt
5413 1752 Pnt
5437 1944 Pnt
5462 1752 Pnt
5486 1944 Pnt
5510 1752 Pnt
5535 1944 Pnt
5559 1752 Pnt
5583 1944 Pnt
5608 1752 Pnt
5632 1944 Pnt
5656 1752 Pnt
5680 1944 Pnt
5705 1752 Pnt
5729 1944 Pnt
5753 1752 Pnt
5778 1944 Pnt
5802 1752 Pnt
5826 1944 Pnt
5851 1752 Pnt
5875 1944 Pnt
5899 1752 Pnt
5924 1944 Pnt
5948 1752 Pnt
5972 1944 Pnt
5997 1752 Pnt
6021 1944 Pnt
6045 1752 Pnt
6070 1944 Pnt
6094 1752 Pnt
6118 1944 Pnt
6143 1752 Pnt
6167 1944 Pnt
6191 1752 Pnt
6216 1944 Pnt
6240 1752 Pnt
6264 1944 Pnt
6288 1752 Pnt
6313 1944 Pnt
6337 1752 Pnt
6361 1944 Pnt
6386 1752 Pnt
6410 1944 Pnt
6434 1752 Pnt
6459 1944 Pnt
6483 1752 Pnt
6507 1944 Pnt
6532 1752 Pnt
6556 1944 Pnt
6580 1752 Pnt
6605 1944 Pnt
6629 1752 Pnt
6653 1944 Pnt
6678 1752 Pnt
6702 1944 Pnt
6726 1752 Pnt
6751 1944 Pnt
6775 1752 Pnt
6799 1944 Pnt
6824 1752 Pnt
6848 1944 Pnt
6348 3877 Pnt
3.000 UL
LT3
0.00 0.00 1.00 C LTb
5957 3677 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT3
0.00 0.00 1.00 C 6077 3677 M
543 0 V
792 4440 M
816 2136 L
25 0 V
24 -192 V
24 192 V
25 0 V
24 192 V
24 -384 V
25 -192 V
24 384 V
24 -192 V
25 0 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
24 192 V
25 -192 V
24 -384 V
24 192 V
25 192 V
24 0 V
24 192 V
25 -192 V
24 -384 V
24 192 V
25 192 V
24 0 V
24 192 V
25 -192 V
24 -384 V
24 192 V
25 192 V
24 0 V
24 192 V
25 -192 V
24 -384 V
24 192 V
25 192 V
24 0 V
24 192 V
24 -192 V
25 -384 V
24 192 V
24 192 V
25 0 V
24 192 V
24 -192 V
25 -384 V
24 192 V
24 192 V
25 0 V
24 192 V
24 -192 V
25 -384 V
24 192 V
24 192 V
25 0 V
24 192 V
24 -192 V
25 -384 V
24 192 V
24 192 V
25 0 V
24 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
24 192 V
25 192 V
24 0 V
24 192 V
25 -192 V
3370 1752 L
24 192 V
25 192 V
24 0 V
24 192 V
25 -192 V
24 -384 V
24 192 V
25 192 V
24 0 V
24 192 V
25 -192 V
24 -384 V
24 192 V
25 192 V
24 0 V
24 192 V
25 -192 V
24 -384 V
24 192 V
24 192 V
25 0 V
24 192 V
24 -192 V
25 -384 V
24 192 V
24 192 V
25 0 V
24 192 V
24 -192 V
25 -384 V
24 192 V
24 192 V
25 0 V
24 192 V
24 -192 V
25 -384 V
24 192 V
24 192 V
25 0 V
24 192 V
24 -192 V
25 -384 V
24 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
24 192 V
25 -192 V
24 -384 V
24 192 V
25 192 V
24 0 V
24 192 V
25 -192 V
24 -384 V
24 192 V
25 192 V
24 0 V
24 192 V
25 -192 V
24 -384 V
24 192 V
25 192 V
24 0 V
24 192 V
25 -192 V
24 -384 V
24 192 V
25 192 V
24 0 V
24 192 V
24 -192 V
25 -384 V
24 192 V
24 192 V
25 0 V
24 192 V
24 -192 V
25 -384 V
24 192 V
24 192 V
5924 2136 L
24 192 V
24 -192 V
25 -384 V
24 192 V
24 192 V
25 0 V
24 192 V
24 -192 V
25 -384 V
24 192 V
24 192 V
25 0 V
24 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
24 -384 V
25 192 V
24 192 V
24 0 V
25 192 V
24 -192 V
stroke
0.500 UL
LTb
780 4440 N
780 600 L
6080 0 V
0 3840 V
-6080 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
