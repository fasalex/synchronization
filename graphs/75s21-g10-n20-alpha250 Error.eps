%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/75s21-g10-n20-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Fri Jul 25 15:58:25 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/75s21-g10-n20-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jul 25 15:58:25 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
900 600 M
5960 0 V
stroke
0.500 UL
LTb
900 600 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 1298 M
5960 0 V
stroke
0.500 UL
LTb
900 1298 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 1298 M
[ [(Helvetica) 200.0 0.0 true true 0 (20)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 1996 M
5960 0 V
stroke
0.500 UL
LTb
900 1996 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 1996 M
[ [(Helvetica) 200.0 0.0 true true 0 (40)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 2695 M
5960 0 V
stroke
0.500 UL
LTb
900 2695 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 2695 M
[ [(Helvetica) 200.0 0.0 true true 0 (60)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 3393 M
5960 0 V
stroke
0.500 UL
LTb
900 3393 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 3393 M
[ [(Helvetica) 200.0 0.0 true true 0 (80)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 4091 M
4577 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
900 4091 M
63 0 V
5897 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 780 4091 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
900 600 M
0 3840 V
stroke
0.500 UL
LTb
900 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 900 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
2092 600 M
0 3840 V
stroke
0.500 UL
LTb
2092 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 2092 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3284 600 M
0 3840 V
stroke
0.500 UL
LTb
3284 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3284 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4476 600 M
0 3840 V
stroke
0.500 UL
LTb
4476 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4476 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5668 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5668 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5668 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
900 4440 N
900 600 L
5960 0 V
0 3840 V
-5960 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3880 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3880 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
912 600 M
24 27 V
24 2 V
23 1 V
24 -1 V
24 28 V
24 28 V
24 -85 V
24 58 V
23 -29 V
24 111 V
24 -53 V
24 -30 V
24 0 V
24 -28 V
24 30 V
23 -30 V
24 -1 V
24 476 V
24 -504 V
24 28 V
24 87 V
23 -1 V
24 71 V
24 -18 V
24 1364 V
1532 686 L
24 -2 V
23 0 V
24 2 V
24 -30 V
24 -56 V
24 28 V
24 467 V
23 135 V
24 -601 V
24 -2 V
24 29 V
24 0 V
24 -56 V
24 57 V
23 -57 V
24 29 V
24 86 V
24 -115 V
24 0 V
24 148 V
23 -148 V
24 147 V
24 -29 V
24 1 V
24 -90 V
24 57 V
23 -58 V
24 81 V
24 -81 V
24 145 V
24 -89 V
24 -56 V
23 30 V
24 131 V
24 -133 V
24 29 V
24 -28 V
24 30 V
24 -59 V
23 29 V
24 58 V
24 -58 V
24 -28 V
24 58 V
24 23 V
23 533 V
24 -479 V
24 525 V
24 -605 V
24 -28 V
24 84 V
23 -57 V
24 -25 V
24 -1 V
24 27 V
24 28 V
24 -84 V
23 57 V
24 -29 V
24 27 V
24 1 V
24 56 V
24 -83 V
24 -57 V
23 488 V
24 -431 V
24 -28 V
24 29 V
24 178 V
24 -208 V
23 147 V
24 226 V
24 978 V
24 1482 V
24 -944 V
24 -458 V
3367 656 L
24 -56 V
24 84 V
24 27 V
24 -27 V
24 89 V
23 -29 V
24 -144 V
24 28 V
24 0 V
24 351 V
24 -270 V
24 137 V
23 184 V
24 642 V
24 -913 V
24 33 V
24 23 V
24 407 V
23 -594 V
24 0 V
24 58 V
24 1 V
24 -87 V
24 87 V
23 -58 V
24 312 V
24 -175 V
24 -84 V
24 -27 V
24 28 V
23 -26 V
24 -28 V
24 19 V
24 240 V
24 645 V
24 126 V
24 -975 V
23 -56 V
24 249 V
24 -191 V
24 612 V
24 -670 V
24 399 V
23 -399 V
24 625 V
24 835 V
4488 629 L
24 29 V
24 147 V
23 4 V
24 52 V
24 482 V
24 375 V
4655 657 L
24 90 V
23 -90 V
24 -1 V
24 -56 V
24 28 V
24 56 V
24 3 V
24 81 V
23 -111 V
24 -10 V
24 -7 V
24 301 V
24 -257 V
24 -27 V
23 1 V
24 453 V
24 237 V
24 150 V
24 1720 V
24 -1394 V
23 -855 V
24 412 V
24 -92 V
24 423 V
5251 684 L
24 -27 V
23 -1 V
24 348 V
24 463 V
24 2395 V
5394 600 L
24 764 V
24 376 V
23 506 V
24 -397 V
24 -659 V
24 333 V
24 -784 V
24 -110 V
23 -29 V
24 58 V
24 -29 V
24 -1 V
24 55 V
24 -55 V
23 87 V
24 -86 V
24 57 V
24 715 V
24 -714 V
24 -30 V
23 -28 V
24 0 V
24 -29 V
24 0 V
24 194 V
24 -137 V
24 258 V
23 -226 V
24 52 V
24 -141 V
24 29 V
24 411 V
24 656 V
23 -878 V
24 -11 V
24 474 V
24 -279 V
24 -320 V
24 -26 V
23 1 V
24 -1 V
24 25 V
24 458 V
24 -238 V
24 733 V
23 -832 V
24 1858 V
24 -1547 V
24 -513 V
24 58 V
24 -29 V
24 -29 V
23 1476 V
6681 684 L
24 -56 V
24 59 V
24 -31 V
24 -28 V
23 0 V
24 53 V
24 462 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
912 665 M
24 -38 V
24 2 V
23 60 V
24 -89 V
24 28 V
24 -28 V
24 57 V
24 59 V
23 -58 V
24 -30 V
24 30 V
24 -58 V
24 85 V
24 -85 V
24 59 V
23 27 V
24 -2 V
24 98 V
24 -182 V
24 28 V
24 59 V
23 -59 V
24 78 V
24 1524 V
1508 722 L
24 -122 V
24 0 V
23 113 V
24 -56 V
24 -29 V
24 0 V
24 56 V
24 -55 V
23 128 V
24 -71 V
24 -4 V
24 -26 V
24 56 V
24 -84 V
24 0 V
23 56 V
24 -55 V
24 29 V
24 -30 V
24 0 V
24 238 V
23 -210 V
24 61 V
24 90 V
24 32 V
24 -35 V
24 -118 V
23 -58 V
24 27 V
24 57 V
24 32 V
24 -88 V
24 223 V
23 875 V
2342 681 L
24 -81 V
24 85 V
24 -28 V
24 59 V
24 -59 V
23 198 V
24 -140 V
24 -29 V
24 260 V
24 -231 V
24 22 V
23 391 V
24 -446 V
24 538 V
24 -592 V
24 56 V
24 -84 V
23 0 V
24 29 V
24 28 V
24 -29 V
24 140 V
24 -168 V
23 28 V
24 85 V
24 26 V
24 -83 V
24 -56 V
24 114 V
24 -56 V
23 479 V
24 -509 V
24 89 V
24 575 V
24 -535 V
24 42 V
23 -170 V
24 0 V
24 84 V
24 -113 V
24 429 V
24 121 V
23 -466 V
24 -56 V
24 0 V
24 111 V
24 -139 V
24 87 V
23 28 V
24 -3 V
24 27 V
24 -25 V
24 265 V
24 -379 V
24 246 V
23 184 V
24 -31 V
24 -240 V
24 -22 V
24 320 V
24 93 V
23 74 V
24 -596 V
24 29 V
24 58 V
24 -115 V
24 29 V
23 85 V
24 -29 V
24 109 V
24 -57 V
24 -109 V
24 55 V
23 797 V
24 -823 V
24 400 V
24 694 V
24 44 V
4226 629 L
24 27 V
23 58 V
24 496 V
24 -209 V
24 -256 V
24 -3 V
24 310 V
23 -368 V
24 -56 V
24 29 V
24 29 V
24 -86 V
24 147 V
23 -28 V
24 246 V
24 378 V
24 336 V
4655 628 L
24 -28 V
23 114 V
24 26 V
24 -83 V
24 27 V
24 -28 V
24 88 V
24 -144 V
23 0 V
24 586 V
24 -50 V
24 487 V
24 -716 V
24 5 V
23 -254 V
24 -1 V
24 -2 V
24 120 V
24 -39 V
24 521 V
23 -116 V
24 261 V
24 -136 V
24 427 V
5251 628 L
24 29 V
23 -1 V
24 31 V
24 30 V
24 1371 V
24 1355 V
5418 736 L
24 376 V
23 -58 V
24 426 V
24 87 V
24 -746 V
24 -193 V
24 29 V
23 30 V
24 0 V
24 -87 V
24 253 V
24 -114 V
24 -111 V
23 30 V
24 -58 V
24 57 V
24 -57 V
24 0 V
24 57 V
23 -28 V
24 -29 V
24 0 V
24 116 V
24 -33 V
24 -55 V
24 182 V
23 -62 V
24 -92 V
24 2 V
24 -29 V
24 470 V
24 568 V
23 -558 V
24 421 V
24 -873 V
24 345 V
24 -211 V
24 -107 V
23 -27 V
24 27 V
24 51 V
24 688 V
24 -95 V
24 743 V
23 -361 V
24 -509 V
24 -64 V
24 -362 V
24 -146 V
24 57 V
24 -39 V
23 -19 V
24 28 V
24 1 V
24 -57 V
24 113 V
24 0 V
23 -57 V
24 52 V
24 505 V
912 665 Pls
936 627 Pls
960 629 Pls
983 689 Pls
1007 600 Pls
1031 628 Pls
1055 600 Pls
1079 657 Pls
1103 716 Pls
1126 658 Pls
1150 628 Pls
1174 658 Pls
1198 600 Pls
1222 685 Pls
1246 600 Pls
1270 659 Pls
1293 686 Pls
1317 684 Pls
1341 782 Pls
1365 600 Pls
1389 628 Pls
1413 687 Pls
1436 628 Pls
1460 706 Pls
1484 2230 Pls
1508 722 Pls
1532 600 Pls
1556 600 Pls
1579 713 Pls
1603 657 Pls
1627 628 Pls
1651 628 Pls
1675 684 Pls
1699 629 Pls
1722 757 Pls
1746 686 Pls
1770 682 Pls
1794 656 Pls
1818 712 Pls
1842 628 Pls
1866 628 Pls
1889 684 Pls
1913 629 Pls
1937 658 Pls
1961 628 Pls
1985 628 Pls
2009 866 Pls
2032 656 Pls
2056 717 Pls
2080 807 Pls
2104 839 Pls
2128 804 Pls
2152 686 Pls
2175 628 Pls
2199 655 Pls
2223 712 Pls
2247 744 Pls
2271 656 Pls
2295 879 Pls
2318 1754 Pls
2342 681 Pls
2366 600 Pls
2390 685 Pls
2414 657 Pls
2438 716 Pls
2462 657 Pls
2485 855 Pls
2509 715 Pls
2533 686 Pls
2557 946 Pls
2581 715 Pls
2605 737 Pls
2628 1128 Pls
2652 682 Pls
2676 1220 Pls
2700 628 Pls
2724 684 Pls
2748 600 Pls
2771 600 Pls
2795 629 Pls
2819 657 Pls
2843 628 Pls
2867 768 Pls
2891 600 Pls
2914 628 Pls
2938 713 Pls
2962 739 Pls
2986 656 Pls
3010 600 Pls
3034 714 Pls
3058 658 Pls
3081 1137 Pls
3105 628 Pls
3129 717 Pls
3153 1292 Pls
3177 757 Pls
3201 799 Pls
3224 629 Pls
3248 629 Pls
3272 713 Pls
3296 600 Pls
3320 1029 Pls
3344 1150 Pls
3367 684 Pls
3391 628 Pls
3415 628 Pls
3439 739 Pls
3463 600 Pls
3487 687 Pls
3510 715 Pls
3534 712 Pls
3558 739 Pls
3582 714 Pls
3606 979 Pls
3630 600 Pls
3654 846 Pls
3677 1030 Pls
3701 999 Pls
3725 759 Pls
3749 737 Pls
3773 1057 Pls
3797 1150 Pls
3820 1224 Pls
3844 628 Pls
3868 657 Pls
3892 715 Pls
3916 600 Pls
3940 629 Pls
3963 714 Pls
3987 685 Pls
4011 794 Pls
4035 737 Pls
4059 628 Pls
4083 683 Pls
4106 1480 Pls
4130 657 Pls
4154 1057 Pls
4178 1751 Pls
4202 1795 Pls
4226 629 Pls
4250 656 Pls
4273 714 Pls
4297 1210 Pls
4321 1001 Pls
4345 745 Pls
4369 742 Pls
4393 1052 Pls
4416 684 Pls
4440 628 Pls
4464 657 Pls
4488 686 Pls
4512 600 Pls
4536 747 Pls
4559 719 Pls
4583 965 Pls
4607 1343 Pls
4631 1679 Pls
4655 628 Pls
4679 600 Pls
4702 714 Pls
4726 740 Pls
4750 657 Pls
4774 684 Pls
4798 656 Pls
4822 744 Pls
4846 600 Pls
4869 600 Pls
4893 1186 Pls
4917 1136 Pls
4941 1623 Pls
4965 907 Pls
4989 912 Pls
5012 658 Pls
5036 657 Pls
5060 655 Pls
5084 775 Pls
5108 736 Pls
5132 1257 Pls
5155 1141 Pls
5179 1402 Pls
5203 1266 Pls
5227 1693 Pls
5251 628 Pls
5275 657 Pls
5298 656 Pls
5322 687 Pls
5346 717 Pls
5370 2088 Pls
5394 3443 Pls
5418 736 Pls
5442 1112 Pls
5465 1054 Pls
5489 1480 Pls
5513 1567 Pls
5537 821 Pls
5561 628 Pls
5585 657 Pls
5608 687 Pls
5632 687 Pls
5656 600 Pls
5680 853 Pls
5704 739 Pls
5728 628 Pls
5751 658 Pls
5775 600 Pls
5799 657 Pls
5823 600 Pls
5847 600 Pls
5871 657 Pls
5894 629 Pls
5918 600 Pls
5942 600 Pls
5966 716 Pls
5990 683 Pls
6014 628 Pls
6038 810 Pls
6061 748 Pls
6085 656 Pls
6109 658 Pls
6133 629 Pls
6157 1099 Pls
6181 1667 Pls
6204 1109 Pls
6228 1530 Pls
6252 657 Pls
6276 1002 Pls
6300 791 Pls
6324 684 Pls
6347 657 Pls
6371 684 Pls
6395 735 Pls
6419 1423 Pls
6443 1328 Pls
6467 2071 Pls
6490 1710 Pls
6514 1201 Pls
6538 1137 Pls
6562 775 Pls
6586 629 Pls
6610 686 Pls
6634 647 Pls
6657 628 Pls
6681 656 Pls
6705 657 Pls
6729 600 Pls
6753 713 Pls
6777 713 Pls
6800 656 Pls
6824 708 Pls
6848 1213 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
912 925 M
936 737 L
24 -80 V
23 61 V
24 -60 V
24 -1 V
24 -57 V
24 29 V
24 29 V
23 -58 V
24 28 V
24 117 V
24 -88 V
24 28 V
24 -85 V
24 0 V
23 0 V
24 112 V
24 -112 V
24 1023 V
24 -768 V
24 -226 V
23 56 V
24 47 V
24 453 V
24 211 V
24 -739 V
24 -57 V
23 113 V
24 -84 V
24 27 V
24 29 V
24 -1 V
24 440 V
23 -235 V
24 -260 V
24 53 V
24 -54 V
24 -28 V
24 28 V
24 0 V
23 56 V
24 -55 V
24 -29 V
24 28 V
24 57 V
24 4 V
23 51 V
24 -81 V
24 355 V
24 -265 V
24 -33 V
24 -116 V
23 28 V
24 27 V
24 -27 V
24 59 V
24 53 V
24 -56 V
23 810 V
24 378 V
2366 628 L
24 29 V
24 -57 V
24 145 V
24 -31 V
23 -86 V
24 59 V
24 -1 V
24 -86 V
24 29 V
24 53 V
23 -36 V
24 -19 V
24 19 V
24 -46 V
24 0 V
24 56 V
23 110 V
24 -108 V
24 27 V
24 -29 V
24 139 V
24 -195 V
23 57 V
24 56 V
24 81 V
24 1 V
24 -55 V
24 -83 V
24 -28 V
23 532 V
24 -561 V
24 821 V
24 -821 V
24 262 V
24 79 V
23 -225 V
24 -116 V
24 28 V
24 1 V
24 658 V
24 -520 V
23 255 V
24 -309 V
24 -85 V
24 0 V
24 0 V
24 520 V
23 664 V
3534 600 L
24 28 V
24 199 V
24 -146 V
24 -81 V
24 492 V
23 -163 V
24 -30 V
24 -61 V
24 -183 V
24 160 V
24 359 V
23 -574 V
24 28 V
24 29 V
24 1 V
24 56 V
24 -27 V
23 -87 V
24 28 V
24 27 V
24 55 V
24 -27 V
24 -55 V
23 86 V
24 -28 V
24 -38 V
24 1045 V
24 -309 V
24 -784 V
24 112 V
23 -112 V
24 166 V
24 -23 V
24 -114 V
24 -1 V
24 374 V
23 -262 V
24 -83 V
24 0 V
24 -57 V
24 0 V
24 205 V
23 -115 V
24 144 V
24 442 V
24 403 V
4655 628 L
24 31 V
23 -30 V
24 55 V
24 -84 V
24 84 V
24 29 V
24 -55 V
24 -2 V
23 -27 V
24 604 V
24 359 V
24 -29 V
24 -712 V
24 -109 V
23 2 V
24 736 V
24 533 V
5084 949 L
24 6 V
24 257 V
23 -391 V
24 299 V
24 -15 V
24 665 V
5251 684 L
24 -27 V
23 -29 V
24 1 V
24 252 V
24 1207 V
24 1158 V
24 954 V
24 -2972 V
23 53 V
24 766 V
24 63 V
24 -547 V
24 -880 V
24 3 V
23 -28 V
24 0 V
24 -58 V
24 56 V
24 -1 V
24 342 V
23 642 V
24 -952 V
24 -58 V
24 57 V
24 1 V
24 -58 V
23 29 V
24 29 V
24 -58 V
24 58 V
24 107 V
24 -166 V
24 208 V
23 -147 V
24 -33 V
24 781 V
24 230 V
24 -979 V
24 27 V
23 55 V
24 -67 V
24 -46 V
24 345 V
24 -184 V
24 -106 V
23 -112 V
24 586 V
24 -505 V
24 118 V
24 253 V
24 1035 V
23 -478 V
24 -923 V
24 60 V
24 -30 V
24 -29 V
24 113 V
24 272 V
23 351 V
24 657 V
6705 628 L
24 30 V
24 111 V
24 -141 V
23 84 V
24 104 V
24 350 V
912 925 BoxF
936 737 BoxF
960 657 BoxF
983 718 BoxF
1007 658 BoxF
1031 657 BoxF
1055 600 BoxF
1079 629 BoxF
1103 658 BoxF
1126 600 BoxF
1150 628 BoxF
1174 745 BoxF
1198 657 BoxF
1222 685 BoxF
1246 600 BoxF
1270 600 BoxF
1293 600 BoxF
1317 712 BoxF
1341 600 BoxF
1365 1623 BoxF
1389 855 BoxF
1413 629 BoxF
1436 685 BoxF
1460 732 BoxF
1484 1185 BoxF
1508 1396 BoxF
1532 657 BoxF
1556 600 BoxF
1579 713 BoxF
1603 629 BoxF
1627 656 BoxF
1651 685 BoxF
1675 684 BoxF
1699 1124 BoxF
1722 889 BoxF
1746 629 BoxF
1770 682 BoxF
1794 628 BoxF
1818 600 BoxF
1842 628 BoxF
1866 628 BoxF
1889 684 BoxF
1913 629 BoxF
1937 600 BoxF
1961 628 BoxF
1985 685 BoxF
2009 689 BoxF
2032 740 BoxF
2056 659 BoxF
2080 1014 BoxF
2104 749 BoxF
2128 716 BoxF
2152 600 BoxF
2175 628 BoxF
2199 655 BoxF
2223 628 BoxF
2247 687 BoxF
2271 740 BoxF
2295 684 BoxF
2318 1494 BoxF
2342 1872 BoxF
2366 628 BoxF
2390 657 BoxF
2414 600 BoxF
2438 745 BoxF
2462 714 BoxF
2485 628 BoxF
2509 687 BoxF
2533 686 BoxF
2557 600 BoxF
2581 629 BoxF
2605 682 BoxF
2628 646 BoxF
2652 627 BoxF
2676 646 BoxF
2700 600 BoxF
2724 600 BoxF
2748 656 BoxF
2771 766 BoxF
2795 658 BoxF
2819 685 BoxF
2843 656 BoxF
2867 795 BoxF
2891 600 BoxF
2914 657 BoxF
2938 713 BoxF
2962 794 BoxF
2986 795 BoxF
3010 740 BoxF
3034 657 BoxF
3058 629 BoxF
3081 1161 BoxF
3105 600 BoxF
3129 1421 BoxF
3153 600 BoxF
3177 862 BoxF
3201 941 BoxF
3224 716 BoxF
3248 600 BoxF
3272 628 BoxF
3296 629 BoxF
3320 1287 BoxF
3344 767 BoxF
3367 1022 BoxF
3391 713 BoxF
3415 628 BoxF
3439 628 BoxF
3463 628 BoxF
3487 1148 BoxF
3510 1812 BoxF
3534 600 BoxF
3558 628 BoxF
3582 827 BoxF
3606 681 BoxF
3630 600 BoxF
3654 1092 BoxF
3677 929 BoxF
3701 899 BoxF
3725 838 BoxF
3749 655 BoxF
3773 815 BoxF
3797 1174 BoxF
3820 600 BoxF
3844 628 BoxF
3868 657 BoxF
3892 658 BoxF
3916 714 BoxF
3940 687 BoxF
3963 600 BoxF
3987 628 BoxF
4011 655 BoxF
4035 710 BoxF
4059 683 BoxF
4083 628 BoxF
4106 714 BoxF
4130 686 BoxF
4154 648 BoxF
4178 1693 BoxF
4202 1384 BoxF
4226 600 BoxF
4250 712 BoxF
4273 600 BoxF
4297 766 BoxF
4321 743 BoxF
4345 629 BoxF
4369 628 BoxF
4393 1002 BoxF
4416 740 BoxF
4440 657 BoxF
4464 657 BoxF
4488 600 BoxF
4512 600 BoxF
4536 805 BoxF
4559 690 BoxF
4583 834 BoxF
4607 1276 BoxF
4631 1679 BoxF
4655 628 BoxF
4679 659 BoxF
4702 629 BoxF
4726 684 BoxF
4750 600 BoxF
4774 684 BoxF
4798 713 BoxF
4822 658 BoxF
4846 656 BoxF
4869 629 BoxF
4893 1233 BoxF
4917 1592 BoxF
4941 1563 BoxF
4965 851 BoxF
4989 742 BoxF
5012 744 BoxF
5036 1480 BoxF
5060 2013 BoxF
5084 949 BoxF
5108 955 BoxF
5132 1212 BoxF
5155 821 BoxF
5179 1120 BoxF
5203 1105 BoxF
5227 1770 BoxF
5251 684 BoxF
5275 657 BoxF
5298 628 BoxF
5322 629 BoxF
5346 881 BoxF
5370 2088 BoxF
5394 3246 BoxF
5418 4200 BoxF
5442 1228 BoxF
5465 1281 BoxF
5489 2047 BoxF
5513 2110 BoxF
5537 1563 BoxF
5561 683 BoxF
5585 686 BoxF
5608 658 BoxF
5632 658 BoxF
5656 600 BoxF
5680 656 BoxF
5704 655 BoxF
5728 997 BoxF
5751 1639 BoxF
5775 687 BoxF
5799 629 BoxF
5823 686 BoxF
5847 687 BoxF
5871 629 BoxF
5894 658 BoxF
5918 687 BoxF
5942 629 BoxF
5966 687 BoxF
5990 794 BoxF
6014 628 BoxF
6038 836 BoxF
6061 689 BoxF
6085 656 BoxF
6109 1437 BoxF
6133 1667 BoxF
6157 688 BoxF
6181 715 BoxF
6204 770 BoxF
6228 703 BoxF
6252 657 BoxF
6276 1002 BoxF
6300 818 BoxF
6324 712 BoxF
6347 600 BoxF
6371 1186 BoxF
6395 681 BoxF
6419 799 BoxF
6443 1052 BoxF
6467 2087 BoxF
6490 1609 BoxF
6514 686 BoxF
6538 746 BoxF
6562 716 BoxF
6586 687 BoxF
6610 800 BoxF
6634 1072 BoxF
6657 1423 BoxF
6681 2080 BoxF
6705 628 BoxF
6729 658 BoxF
6753 769 BoxF
6777 628 BoxF
6800 712 BoxF
6824 816 BoxF
6848 1166 BoxF
6348 3877 BoxF
0.500 UL
LTb
900 4440 N
900 600 L
5960 0 V
0 3840 V
-5960 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
