%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/456s10-g8-n40-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Thu Jul 31 10:45:18 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/456s10-g8-n40-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jul 31 10:45:18 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
1020 600 M
5840 0 V
stroke
0.500 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 1057 M
5840 0 V
stroke
0.500 UL
LTb
1020 1057 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 1057 M
[ [(Helvetica) 200.0 0.0 true true 0 (1000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 1514 M
5840 0 V
stroke
0.500 UL
LTb
1020 1514 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 1514 M
[ [(Helvetica) 200.0 0.0 true true 0 (2000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 1971 M
5840 0 V
stroke
0.500 UL
LTb
1020 1971 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 1971 M
[ [(Helvetica) 200.0 0.0 true true 0 (3000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 2429 M
5840 0 V
stroke
0.500 UL
LTb
1020 2429 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 2429 M
[ [(Helvetica) 200.0 0.0 true true 0 (4000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 2886 M
5840 0 V
stroke
0.500 UL
LTb
1020 2886 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 2886 M
[ [(Helvetica) 200.0 0.0 true true 0 (5000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 3343 M
5840 0 V
stroke
0.500 UL
LTb
1020 3343 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 3343 M
[ [(Helvetica) 200.0 0.0 true true 0 (6000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 3800 M
4457 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
1020 3800 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 3800 M
[ [(Helvetica) 200.0 0.0 true true 0 (7000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 4257 M
4457 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
1020 4257 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 4257 M
[ [(Helvetica) 200.0 0.0 true true 0 (8000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 600 M
0 3840 V
stroke
0.500 UL
LTb
1020 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 1020 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
2188 600 M
0 3840 V
stroke
0.500 UL
LTb
2188 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 2188 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3356 600 M
0 3840 V
stroke
0.500 UL
LTb
3356 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3356 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4524 600 M
0 3840 V
stroke
0.500 UL
LTb
4524 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4524 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5692 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5692 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5692 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1020 4440 N
0 -3840 V
5840 0 V
0 3840 V
-5840 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3940 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3940 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
1032 617 M
23 22 V
23 111 V
24 221 V
23 383 V
23 663 V
24 -477 V
23 340 V
24 183 V
23 175 V
23 -884 V
24 -398 V
23 -154 V
23 -201 V
24 0 V
23 0 V
23 1233 V
24 229 V
23 210 V
24 220 V
23 -141 V
23 534 V
24 -666 V
23 0 V
23 0 V
24 0 V
23 0 V
23 277 V
24 0 V
23 389 V
23 583 V
24 971 V
23 -1554 V
24 0 V
23 0 V
23 -666 V
24 277 V
23 0 V
23 389 V
24 -875 V
23 0 V
23 209 V
24 666 V
23 0 V
24 0 V
23 583 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 -583 V
24 583 V
23 -583 V
23 0 V
24 0 V
23 583 V
24 -2186 V
23 -422 V
23 -109 V
24 -54 V
23 -32 V
23 -21 V
24 -15 V
23 2256 V
23 0 V
24 583 V
23 -972 V
24 972 V
23 -1249 V
23 666 V
24 583 V
23 -972 V
23 972 V
24 0 V
23 -583 V
23 0 V
24 0 V
23 -389 V
23 -277 V
24 -500 V
23 500 V
24 -209 V
23 -161 V
23 647 V
24 0 V
23 389 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 -1166 V
23 -680 V
23 -215 V
24 -91 V
23 -47 V
23 -30 V
24 -18 V
23 1211 V
23 0 V
3438 2011 L
23 209 V
23 -209 V
24 209 V
23 -606 V
24 0 V
23 -227 V
23 -56 V
24 -91 V
23 -38 V
23 -93 V
24 -25 V
23 -44 V
23 0 V
24 -37 V
23 0 V
24 -17 V
23 -108 V
23 -112 V
24 -75 V
23 -58 V
23 -16 V
24 34 V
23 72 V
23 146 V
24 299 V
23 1329 V
23 -277 V
24 666 V
23 -389 V
24 0 V
23 -1257 V
23 -343 V
24 -123 V
23 72 V
23 -148 V
24 -16 V
23 11 V
23 49 V
24 201 V
23 671 V
24 1272 V
23 -875 V
23 -161 V
24 -130 V
23 -106 V
23 -227 V
24 -56 V
23 -91 V
23 0 V
24 91 V
23 0 V
23 195 V
24 485 V
23 209 V
24 -1111 V
23 -256 V
23 -101 V
24 1745 V
23 0 V
23 0 V
24 -277 V
23 0 V
23 -209 V
24 0 V
23 0 V
24 209 V
23 0 V
23 0 V
24 0 V
23 -889 V
23 -388 V
24 -151 V
23 -71 V
23 -40 V
24 -24 V
23 -18 V
23 -12 V
24 -9 V
23 -7 V
24 -6 V
23 -4 V
23 -1 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
5891 600 L
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
1032 614 M
23 -7 V
23 6 V
24 23 V
23 10 V
23 11 V
24 15 V
23 134 V
24 137 V
23 -343 V
23 26 V
24 10 V
23 4 V
23 2 V
24 1 V
23 0 V
23 -25 V
24 -9 V
23 9 V
24 0 V
23 -10 V
23 1 V
24 -2 V
23 -7 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 9 V
23 14 V
24 23 V
23 -37 V
24 0 V
23 0 V
23 -2 V
24 1 V
23 0 V
23 1 V
24 8 V
23 -6 V
23 -4 V
24 30 V
23 137 V
24 183 V
23 352 V
23 262 V
24 275 V
2153 623 L
23 -23 V
24 11 V
23 0 V
23 -2 V
24 -9 V
23 0 V
23 0 V
24 9 V
23 -9 V
24 31 V
23 -6 V
23 -6 V
24 24 V
23 1 V
23 0 V
24 0 V
23 -44 V
23 9 V
24 14 V
23 -15 V
24 15 V
23 -23 V
23 0 V
24 23 V
23 -23 V
23 11 V
24 0 V
23 7 V
23 -9 V
24 9 V
23 -18 V
23 7 V
24 7 V
23 -14 V
24 17 V
23 -2 V
23 -7 V
24 0 V
23 1 V
23 0 V
24 0 V
23 9 V
23 -9 V
24 0 V
23 0 V
24 5 V
23 20 V
23 5 V
24 2 V
23 2 V
23 -5 V
24 6 V
23 -29 V
23 -10 V
24 12 V
23 -4 V
23 4 V
24 -4 V
23 16 V
24 -4 V
23 1 V
23 4 V
24 2 V
23 1 V
23 2 V
24 -2 V
23 1 V
23 -2 V
24 1 V
23 2 V
24 -1 V
23 3 V
23 -5 V
24 -3 V
23 15 V
23 0 V
24 -1 V
23 -2 V
23 -3 V
24 -12 V
23 -11 V
23 -8 V
24 2 V
23 -9 V
24 15 V
23 17 V
23 7 V
24 2 V
23 -1 V
23 2 V
24 -3 V
23 -9 V
23 -20 V
24 49 V
23 -47 V
24 820 V
23 -89 V
23 -12 V
24 -77 V
23 -114 V
23 -210 V
24 -34 V
23 -19 V
23 43 V
4606 1030 L
23 67 V
23 223 V
24 520 V
23 340 V
4723 633 L
23 6 V
23 3 V
24 -27 V
23 0 V
23 0 V
24 -2 V
23 -6 V
23 4 V
24 0 V
23 0 V
24 -11 V
23 0 V
23 7 V
24 6 V
23 17 V
23 8 V
24 1 V
23 -6 V
23 10 V
24 1 V
23 0 V
23 0 V
24 0 V
23 1 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 -1 V
24 -3 V
23 -3 V
23 -4 V
24 -4 V
23 15 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 -1 V
23 0 V
23 1 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 -1 V
23 0 V
23 0 V
24 0 V
23 1 V
23 0 V
24 -1 V
23 0 V
23 -1 V
24 1 V
23 0 V
24 -2 V
23 -3 V
23 -4 V
24 -4 V
23 4 V
23 -12 V
1032 614 Pls
1055 607 Pls
1078 613 Pls
1102 636 Pls
1125 646 Pls
1148 657 Pls
1172 672 Pls
1195 806 Pls
1219 943 Pls
1242 600 Pls
1265 626 Pls
1289 636 Pls
1312 640 Pls
1335 642 Pls
1359 643 Pls
1382 643 Pls
1405 618 Pls
1429 609 Pls
1452 618 Pls
1476 618 Pls
1499 608 Pls
1522 609 Pls
1546 607 Pls
1569 600 Pls
1592 600 Pls
1616 600 Pls
1639 600 Pls
1662 600 Pls
1686 600 Pls
1709 609 Pls
1732 623 Pls
1756 646 Pls
1779 609 Pls
1803 609 Pls
1826 609 Pls
1849 607 Pls
1873 608 Pls
1896 608 Pls
1919 609 Pls
1943 617 Pls
1966 611 Pls
1989 607 Pls
2013 637 Pls
2036 774 Pls
2060 957 Pls
2083 1309 Pls
2106 1571 Pls
2130 1846 Pls
2153 623 Pls
2176 600 Pls
2200 611 Pls
2223 611 Pls
2246 609 Pls
2270 600 Pls
2293 600 Pls
2316 600 Pls
2340 609 Pls
2363 600 Pls
2387 631 Pls
2410 625 Pls
2433 619 Pls
2457 643 Pls
2480 644 Pls
2503 644 Pls
2527 644 Pls
2550 600 Pls
2573 609 Pls
2597 623 Pls
2620 608 Pls
2644 623 Pls
2667 600 Pls
2690 600 Pls
2714 623 Pls
2737 600 Pls
2760 611 Pls
2784 611 Pls
2807 618 Pls
2830 609 Pls
2854 618 Pls
2877 600 Pls
2900 607 Pls
2924 614 Pls
2947 600 Pls
2971 617 Pls
2994 615 Pls
3017 608 Pls
3041 608 Pls
3064 609 Pls
3087 609 Pls
3111 609 Pls
3134 618 Pls
3157 609 Pls
3181 609 Pls
3204 609 Pls
3228 614 Pls
3251 634 Pls
3274 639 Pls
3298 641 Pls
3321 643 Pls
3344 638 Pls
3368 644 Pls
3391 615 Pls
3414 605 Pls
3438 617 Pls
3461 613 Pls
3484 617 Pls
3508 613 Pls
3531 629 Pls
3555 625 Pls
3578 626 Pls
3601 630 Pls
3625 632 Pls
3648 633 Pls
3671 635 Pls
3695 633 Pls
3718 634 Pls
3741 632 Pls
3765 633 Pls
3788 635 Pls
3812 634 Pls
3835 637 Pls
3858 632 Pls
3882 629 Pls
3905 644 Pls
3928 644 Pls
3952 643 Pls
3975 641 Pls
3998 638 Pls
4022 626 Pls
4045 615 Pls
4068 607 Pls
4092 609 Pls
4115 600 Pls
4139 615 Pls
4162 632 Pls
4185 639 Pls
4209 641 Pls
4232 640 Pls
4255 642 Pls
4279 639 Pls
4302 630 Pls
4325 610 Pls
4349 659 Pls
4372 612 Pls
4396 1432 Pls
4419 1343 Pls
4442 1331 Pls
4466 1254 Pls
4489 1140 Pls
4512 930 Pls
4536 896 Pls
4559 877 Pls
4582 920 Pls
4606 1030 Pls
4629 1097 Pls
4652 1320 Pls
4676 1840 Pls
4699 2180 Pls
4723 633 Pls
4746 639 Pls
4769 642 Pls
4793 615 Pls
4816 615 Pls
4839 615 Pls
4863 613 Pls
4886 607 Pls
4909 611 Pls
4933 611 Pls
4956 611 Pls
4980 600 Pls
5003 600 Pls
5026 607 Pls
5050 613 Pls
5073 630 Pls
5096 638 Pls
5120 639 Pls
5143 633 Pls
5166 643 Pls
5190 644 Pls
5213 644 Pls
5236 644 Pls
5260 644 Pls
5283 645 Pls
5307 645 Pls
5330 645 Pls
5353 645 Pls
5377 645 Pls
5400 645 Pls
5423 645 Pls
5447 645 Pls
5470 645 Pls
5493 645 Pls
5517 645 Pls
5540 645 Pls
5564 645 Pls
5587 645 Pls
5610 644 Pls
5634 641 Pls
5657 638 Pls
5680 634 Pls
5704 630 Pls
5727 645 Pls
5750 645 Pls
5774 645 Pls
5797 645 Pls
5820 645 Pls
5844 645 Pls
5867 645 Pls
5891 645 Pls
5914 645 Pls
5937 645 Pls
5961 644 Pls
5984 644 Pls
6007 645 Pls
6031 645 Pls
6054 645 Pls
6077 645 Pls
6101 645 Pls
6124 645 Pls
6148 645 Pls
6171 645 Pls
6194 645 Pls
6218 645 Pls
6241 645 Pls
6264 645 Pls
6288 645 Pls
6311 645 Pls
6334 645 Pls
6358 645 Pls
6381 645 Pls
6404 645 Pls
6428 645 Pls
6451 645 Pls
6475 644 Pls
6498 644 Pls
6521 644 Pls
6545 644 Pls
6568 645 Pls
6591 645 Pls
6615 644 Pls
6638 644 Pls
6661 643 Pls
6685 644 Pls
6708 644 Pls
6732 642 Pls
6755 639 Pls
6778 635 Pls
6802 631 Pls
6825 635 Pls
6848 623 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
1032 616 M
23 7 V
23 0 V
24 -13 V
23 -10 V
23 23 V
24 -10 V
23 2 V
24 0 V
23 0 V
23 14 V
24 9 V
23 3 V
23 1 V
24 1 V
23 1 V
23 -44 V
24 9 V
23 -9 V
24 110 V
23 111 V
23 236 V
24 -444 V
23 7 V
23 -7 V
24 7 V
23 0 V
23 -12 V
24 0 V
23 -8 V
23 11 V
24 35 V
23 -46 V
24 0 V
23 0 V
23 20 V
24 -5 V
23 0 V
23 22 V
24 -20 V
23 0 V
23 -4 V
24 -13 V
23 0 V
24 0 V
23 11 V
23 0 V
24 0 V
23 0 V
23 12 V
24 -12 V
23 23 V
23 -34 V
24 23 V
23 -23 V
23 0 V
24 0 V
23 34 V
24 -3 V
23 9 V
23 -4 V
24 -6 V
23 14 V
23 0 V
24 0 V
23 -26 V
23 19 V
24 32 V
23 -31 V
24 111 V
23 27 V
23 -176 V
24 560 V
23 -80 V
23 251 V
24 -45 V
23 -220 V
23 -155 V
24 -201 V
23 -87 V
23 -16 V
24 11 V
23 -11 V
24 4 V
23 -1 V
23 -10 V
24 0 V
23 9 V
23 0 V
24 -9 V
23 0 V
23 9 V
24 -9 V
23 9 V
24 14 V
23 13 V
23 5 V
24 2 V
23 1 V
23 0 V
24 0 V
23 -29 V
23 0 V
3438 611 L
23 -4 V
23 10 V
24 -4 V
23 12 V
24 -4 V
23 12 V
23 -3 V
24 2 V
23 1 V
23 0 V
24 0 V
23 3 V
23 0 V
24 1 V
23 0 V
24 -8 V
23 -15 V
23 -5 V
24 33 V
23 2 V
23 0 V
24 0 V
23 -2 V
23 -2 V
24 -6 V
23 -26 V
23 12 V
24 26 V
23 -38 V
24 7 V
23 17 V
23 7 V
24 3 V
23 -2 V
23 3 V
24 0 V
23 0 V
23 -1 V
24 -4 V
23 -13 V
24 -25 V
23 17 V
23 3 V
24 3 V
23 -2 V
23 5 V
24 4 V
23 0 V
23 0 V
24 -3 V
23 3 V
23 -7 V
24 -12 V
23 -4 V
24 26 V
23 7 V
23 1 V
24 -41 V
23 0 V
23 0 V
24 13 V
23 0 V
23 4 V
24 0 V
23 -6 V
24 -4 V
23 6 V
23 0 V
24 0 V
23 17 V
23 8 V
24 3 V
23 1 V
23 1 V
24 1 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 1 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
5891 645 L
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
24 0 V
23 0 V
24 0 V
23 -1 V
23 -2 V
24 -3 V
23 -4 V
23 10 V
1032 616 BoxF
1055 623 BoxF
1078 623 BoxF
1102 610 BoxF
1125 600 BoxF
1148 623 BoxF
1172 613 BoxF
1195 615 BoxF
1219 615 BoxF
1242 615 BoxF
1265 629 BoxF
1289 638 BoxF
1312 641 BoxF
1335 642 BoxF
1359 643 BoxF
1382 644 BoxF
1405 600 BoxF
1429 609 BoxF
1452 600 BoxF
1476 710 BoxF
1499 821 BoxF
1522 1057 BoxF
1546 613 BoxF
1569 620 BoxF
1592 613 BoxF
1616 620 BoxF
1639 620 BoxF
1662 608 BoxF
1686 608 BoxF
1709 600 BoxF
1732 611 BoxF
1756 646 BoxF
1779 600 BoxF
1803 600 BoxF
1826 600 BoxF
1849 620 BoxF
1873 615 BoxF
1896 615 BoxF
1919 637 BoxF
1943 617 BoxF
1966 617 BoxF
1989 613 BoxF
2013 600 BoxF
2036 600 BoxF
2060 600 BoxF
2083 611 BoxF
2106 611 BoxF
2130 611 BoxF
2153 611 BoxF
2176 623 BoxF
2200 611 BoxF
2223 634 BoxF
2246 600 BoxF
2270 623 BoxF
2293 600 BoxF
2316 600 BoxF
2340 600 BoxF
2363 634 BoxF
2387 631 BoxF
2410 640 BoxF
2433 636 BoxF
2457 630 BoxF
2480 644 BoxF
2503 644 BoxF
2527 644 BoxF
2550 618 BoxF
2573 637 BoxF
2597 669 BoxF
2620 638 BoxF
2644 749 BoxF
2667 776 BoxF
2690 600 BoxF
2714 1160 BoxF
2737 1080 BoxF
2760 1331 BoxF
2784 1286 BoxF
2807 1066 BoxF
2830 911 BoxF
2854 710 BoxF
2877 623 BoxF
2900 607 BoxF
2924 618 BoxF
2947 607 BoxF
2971 611 BoxF
2994 610 BoxF
3017 600 BoxF
3041 600 BoxF
3064 609 BoxF
3087 609 BoxF
3111 600 BoxF
3134 600 BoxF
3157 609 BoxF
3181 600 BoxF
3204 609 BoxF
3228 623 BoxF
3251 636 BoxF
3274 641 BoxF
3298 643 BoxF
3321 644 BoxF
3344 644 BoxF
3368 644 BoxF
3391 615 BoxF
3414 615 BoxF
3438 611 BoxF
3461 607 BoxF
3484 617 BoxF
3508 613 BoxF
3531 625 BoxF
3555 621 BoxF
3578 633 BoxF
3601 630 BoxF
3625 632 BoxF
3648 633 BoxF
3671 633 BoxF
3695 633 BoxF
3718 636 BoxF
3741 636 BoxF
3765 637 BoxF
3788 637 BoxF
3812 629 BoxF
3835 614 BoxF
3858 609 BoxF
3882 642 BoxF
3905 644 BoxF
3928 644 BoxF
3952 644 BoxF
3975 642 BoxF
3998 640 BoxF
4022 634 BoxF
4045 608 BoxF
4068 620 BoxF
4092 646 BoxF
4115 608 BoxF
4139 615 BoxF
4162 632 BoxF
4185 639 BoxF
4209 642 BoxF
4232 640 BoxF
4255 643 BoxF
4279 643 BoxF
4302 643 BoxF
4325 642 BoxF
4349 638 BoxF
4372 625 BoxF
4396 600 BoxF
4419 617 BoxF
4442 620 BoxF
4466 623 BoxF
4489 621 BoxF
4512 626 BoxF
4536 630 BoxF
4559 630 BoxF
4582 630 BoxF
4606 627 BoxF
4629 630 BoxF
4652 623 BoxF
4676 611 BoxF
4699 607 BoxF
4723 633 BoxF
4746 640 BoxF
4769 641 BoxF
4793 600 BoxF
4816 600 BoxF
4839 600 BoxF
4863 613 BoxF
4886 613 BoxF
4909 617 BoxF
4933 617 BoxF
4956 611 BoxF
4980 607 BoxF
5003 613 BoxF
5026 613 BoxF
5050 613 BoxF
5073 630 BoxF
5096 638 BoxF
5120 641 BoxF
5143 642 BoxF
5166 643 BoxF
5190 644 BoxF
5213 644 BoxF
5236 644 BoxF
5260 644 BoxF
5283 644 BoxF
5307 644 BoxF
5330 644 BoxF
5353 644 BoxF
5377 644 BoxF
5400 644 BoxF
5423 645 BoxF
5447 645 BoxF
5470 645 BoxF
5493 645 BoxF
5517 645 BoxF
5540 645 BoxF
5564 645 BoxF
5587 645 BoxF
5610 645 BoxF
5634 645 BoxF
5657 645 BoxF
5680 645 BoxF
5704 645 BoxF
5727 645 BoxF
5750 645 BoxF
5774 645 BoxF
5797 645 BoxF
5820 645 BoxF
5844 645 BoxF
5867 645 BoxF
5891 645 BoxF
5914 645 BoxF
5937 645 BoxF
5961 645 BoxF
5984 645 BoxF
6007 645 BoxF
6031 645 BoxF
6054 645 BoxF
6077 645 BoxF
6101 645 BoxF
6124 645 BoxF
6148 645 BoxF
6171 645 BoxF
6194 645 BoxF
6218 645 BoxF
6241 645 BoxF
6264 645 BoxF
6288 645 BoxF
6311 645 BoxF
6334 645 BoxF
6358 645 BoxF
6381 645 BoxF
6404 645 BoxF
6428 645 BoxF
6451 645 BoxF
6475 645 BoxF
6498 645 BoxF
6521 645 BoxF
6545 645 BoxF
6568 645 BoxF
6591 645 BoxF
6615 645 BoxF
6638 645 BoxF
6661 645 BoxF
6685 645 BoxF
6708 645 BoxF
6732 645 BoxF
6755 644 BoxF
6778 642 BoxF
6802 639 BoxF
6825 635 BoxF
6848 645 BoxF
6348 3877 BoxF
0.500 UL
LTb
1020 4440 N
0 -3840 V
5840 0 V
0 3840 V
-5840 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
