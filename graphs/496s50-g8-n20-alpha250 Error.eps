%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/fasika/mixim/trunk/examples/synchronization/graphs/496s50-g8-n20-alpha250 Error.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Wed Jul 23 10:27:43 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/fasika/mixim/trunk/examples/synchronization/graphs/496s50-g8-n20-alpha250 Error.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Fasika,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jul 23 10:27:43 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color true and { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1.000 UL
LTa
1020 600 M
5840 0 V
stroke
0.500 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 1112 M
5840 0 V
stroke
0.500 UL
LTb
1020 1112 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 1112 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 1624 M
5840 0 V
stroke
0.500 UL
LTb
1020 1624 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 1624 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 2136 M
5840 0 V
stroke
0.500 UL
LTb
1020 2136 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 2136 M
[ [(Helvetica) 200.0 0.0 true true 0 (600)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 2648 M
5840 0 V
stroke
0.500 UL
LTb
1020 2648 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 2648 M
[ [(Helvetica) 200.0 0.0 true true 0 (800)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 3160 M
5840 0 V
stroke
0.500 UL
LTb
1020 3160 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 3160 M
[ [(Helvetica) 200.0 0.0 true true 0 (1000)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 3672 M
5840 0 V
stroke
0.500 UL
LTb
1020 3672 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 3672 M
[ [(Helvetica) 200.0 0.0 true true 0 (1200)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 4184 M
4457 0 V
1263 0 R
120 0 V
stroke
0.500 UL
LTb
1020 4184 M
63 0 V
5777 0 R
-63 0 V
stroke
0.00 0.00 0.00 C 900 4184 M
[ [(Helvetica) 200.0 0.0 true true 0 (1400)]
] -66.7 MRshow
0.500 UL
LTb
1.000 UL
LTa
1020 600 M
0 3840 V
stroke
0.500 UL
LTb
1020 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 1020 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
2188 600 M
0 3840 V
stroke
0.500 UL
LTb
2188 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 2188 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
3356 600 M
0 3840 V
stroke
0.500 UL
LTb
3356 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 3356 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
4524 600 M
0 3840 V
stroke
0.500 UL
LTb
4524 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 4524 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
5692 600 M
0 3177 V
0 600 R
0 63 V
stroke
0.500 UL
LTb
5692 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 5692 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
1.000 UL
LTa
6860 600 M
0 3840 V
stroke
0.500 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
0.00 0.00 0.00 C 6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1020 4440 N
0 -3840 V
5840 0 V
0 3840 V
-5840 0 V
Z stroke
0.00 0.00 0.00 C 200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (Relative Improvement\(%\))]
] -73.3 MCshow
grestore
LTb
0.00 0.00 0.00 C 3940 100 M
[ [(Helvetica) 220.0 0.0 true true 0 (period\(sec\))]
] -73.3 MCshow
LTb
3940 4740 M
[ [(Helvetica) 240.0 0.0 true true 0 (Performance improvement compared to Median algorithm\(%\))]
] -80.0 MCshow
1.000 UP
0.500 UL
LTb
3.000 UL
LT0
0.00 0.00 1.00 C LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (KF)]
] -66.7 MRshow
LT0
0.00 0.00 1.00 C 6077 4277 M
543 0 V
1032 600 M
23 28 V
23 -11 V
24 169 V
23 42 V
23 8 V
24 4 V
23 3 V
24 -1 V
23 -2 V
23 -5 V
24 -1 V
23 -17 V
23 -10 V
24 -30 V
23 -12 V
23 0 V
24 53 V
23 1 V
24 -19 V
23 37 V
23 2 V
24 -44 V
23 -46 V
23 34 V
24 -76 V
23 104 V
23 23 V
24 6 V
23 1 V
23 -20 V
24 15 V
23 -172 V
24 243 V
23 -110 V
23 29 V
24 10 V
23 7 V
23 3 V
24 2 V
23 2 V
23 0 V
24 0 V
23 -48 V
24 -16 V
23 -29 V
23 355 V
24 -309 V
23 -38 V
23 0 V
24 23 V
23 0 V
23 37 V
24 -22 V
23 -160 V
23 183 V
24 -7 V
23 -12 V
24 2 V
23 22 V
23 8 V
24 2 V
23 1 V
23 -1 V
24 2 V
23 -124 V
23 -6 V
24 50 V
23 24 V
24 22 V
23 17 V
23 13 V
24 3 V
23 -20 V
23 3 V
24 15 V
23 -38 V
23 -25 V
24 11 V
23 0 V
23 4 V
24 0 V
23 -16 V
24 55 V
23 -6 V
23 5 V
24 -32 V
23 -30 V
23 -23 V
24 1062 V
23 312 V
3157 771 L
24 17 V
23 4 V
24 -4 V
23 8 V
23 1 V
24 -39 V
23 7 V
23 11 V
24 -30 V
23 0 V
23 -92 V
24 -17 V
23 77 V
23 430 V
24 322 V
23 1143 V
24 -1218 V
23 -37 V
23 3070 V
24 -2526 V
23 1971 V
3671 956 L
24 -271 V
23 121 V
23 10 V
24 7 V
23 6 V
24 -3 V
23 8 V
23 -93 V
24 86 V
23 -109 V
23 -27 V
24 -32 V
23 -20 V
23 107 V
24 -27 V
23 9 V
23 -18 V
24 -12 V
23 73 V
24 21 V
23 -3 V
23 13 V
24 3 V
23 -34 V
23 41 V
24 20 V
23 1 V
23 10 V
24 3 V
23 0 V
24 0 V
23 2 V
23 1 V
24 -4 V
23 -11 V
23 -18 V
24 -21 V
23 -29 V
23 -61 V
24 84 V
23 3 V
23 -6 V
24 -43 V
23 -131 V
24 -5 V
23 236 V
23 -78 V
24 -11 V
23 17 V
23 -6 V
24 18 V
23 -25 V
23 -4 V
24 6 V
23 5 V
24 -16 V
23 -11 V
23 74 V
24 16 V
23 12 V
23 1 V
24 -12 V
23 -19 V
23 -15 V
24 -167 V
23 154 V
23 37 V
24 -118 V
23 -33 V
24 20 V
23 9 V
23 50 V
24 14 V
23 29 V
23 17 V
24 12 V
23 -148 V
23 -41 V
24 132 V
23 20 V
24 31 V
23 21 V
23 7 V
24 6 V
23 1 V
23 -6 V
24 -16 V
23 -18 V
23 18 V
24 26 V
23 -1 V
23 1 V
24 0 V
23 0 V
24 -1 V
23 -9 V
23 9 V
24 0 V
23 0 V
23 -2 V
24 -2 V
23 -1 V
23 5 V
24 0 V
6124 851 L
24 0 V
23 0 V
23 1 V
24 -1 V
23 0 V
23 1 V
24 -2 V
23 -1 V
23 2 V
24 -2 V
23 1 V
23 -7 V
24 7 V
23 -1 V
24 1 V
23 1 V
23 0 V
24 -1 V
23 0 V
23 0 V
24 0 V
23 -3 V
23 1 V
24 -1 V
23 0 V
24 -4 V
23 -12 V
23 -18 V
24 5 V
23 -71 V
23 -44 V
1.000 UP
stroke
LT1
1.00 0.00 1.00 C LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (WM)]
] -66.7 MRshow
LT1
1.00 0.00 1.00 C 6077 4077 M
543 0 V
1032 600 M
23 57 V
23 -57 V
24 166 V
23 26 V
23 24 V
24 6 V
23 12 V
24 -6 V
23 -7 V
23 -19 V
24 0 V
23 -31 V
23 -73 V
24 -78 V
23 17 V
23 -19 V
24 86 V
23 67 V
24 -43 V
23 47 V
23 41 V
24 -73 V
23 -36 V
23 -107 V
24 0 V
23 89 V
23 -33 V
24 151 V
23 14 V
23 -41 V
24 17 V
23 -133 V
24 -47 V
23 121 V
23 63 V
24 12 V
23 0 V
23 -44 V
24 63 V
23 7 V
23 -6 V
24 -26 V
23 467 V
24 175 V
23 -680 V
23 -84 V
24 65 V
23 -150 V
23 293 V
24 407 V
23 443 V
23 -988 V
24 3 V
23 -62 V
23 89 V
24 -148 V
23 61 V
24 44 V
23 49 V
23 14 V
24 16 V
23 8 V
23 5 V
24 1 V
23 -184 V
23 72 V
24 -30 V
23 52 V
24 43 V
23 16 V
23 15 V
24 5 V
23 -161 V
23 -28 V
24 -16 V
23 1221 V
2830 698 L
24 -64 V
23 0 V
23 68 V
24 -12 V
23 -58 V
24 130 V
23 -7 V
23 44 V
24 8 V
23 6 V
23 12 V
24 -207 V
23 340 V
23 -136 V
24 -188 V
23 -2 V
24 -32 V
23 75 V
23 -55 V
24 0 V
23 254 V
23 350 V
24 601 V
3391 637 L
23 71 V
24 29 V
23 27 V
23 -36 V
24 -108 V
23 -20 V
24 166 V
23 -33 V
23 -85 V
24 135 V
23 -163 V
23 51 V
24 62 V
23 63 V
23 -77 V
24 -31 V
23 -18 V
24 156 V
23 4 V
23 -140 V
24 85 V
23 -155 V
23 -20 V
24 0 V
23 0 V
23 146 V
24 349 V
23 474 V
23 384 V
4092 600 L
23 57 V
24 20 V
23 4 V
23 -27 V
24 36 V
23 251 V
23 -200 V
24 57 V
23 -38 V
23 -43 V
24 -27 V
23 142 V
24 6 V
23 2 V
23 -1 V
24 -1 V
23 5 V
23 -16 V
24 -26 V
23 580 V
23 574 V
4606 694 L
23 -17 V
23 55 V
24 68 V
23 -31 V
24 32 V
23 20 V
23 -166 V
24 -38 V
23 34 V
23 -33 V
24 256 V
23 553 V
23 -793 V
24 -34 V
23 73 V
24 34 V
23 -87 V
23 130 V
24 44 V
23 20 V
23 8 V
24 7 V
23 6 V
23 -150 V
24 93 V
23 -38 V
23 35 V
24 27 V
23 12 V
24 4 V
23 6 V
23 3 V
24 4 V
23 2 V
23 4 V
24 0 V
23 -223 V
23 16 V
24 76 V
23 -28 V
24 -21 V
23 -6 V
23 183 V
24 2 V
23 -6 V
23 -26 V
24 36 V
23 4 V
23 1 V
24 -3 V
23 -2 V
23 -12 V
24 -24 V
23 -24 V
24 -24 V
23 -24 V
23 110 V
24 2 V
23 0 V
23 -1 V
24 0 V
23 1 V
23 -1 V
24 1 V
23 -3 V
24 1 V
23 1 V
23 1 V
24 -2 V
23 2 V
23 -3 V
24 2 V
23 1 V
23 -1 V
24 1 V
23 -12 V
23 -23 V
24 -23 V
23 54 V
24 0 V
23 2 V
23 1 V
24 -1 V
23 1 V
23 1 V
24 0 V
23 -1 V
23 -2 V
24 -3 V
23 3 V
24 -1 V
23 1 V
23 0 V
24 1 V
23 -23 V
23 -23 V
1032 600 Pls
1055 657 Pls
1078 600 Pls
1102 766 Pls
1125 792 Pls
1148 816 Pls
1172 822 Pls
1195 834 Pls
1219 828 Pls
1242 821 Pls
1265 802 Pls
1289 802 Pls
1312 771 Pls
1335 698 Pls
1359 620 Pls
1382 637 Pls
1405 618 Pls
1429 704 Pls
1452 771 Pls
1476 728 Pls
1499 775 Pls
1522 816 Pls
1546 743 Pls
1569 707 Pls
1592 600 Pls
1616 600 Pls
1639 689 Pls
1662 656 Pls
1686 807 Pls
1709 821 Pls
1732 780 Pls
1756 797 Pls
1779 664 Pls
1803 617 Pls
1826 738 Pls
1849 801 Pls
1873 813 Pls
1896 813 Pls
1919 769 Pls
1943 832 Pls
1966 839 Pls
1989 833 Pls
2013 807 Pls
2036 1274 Pls
2060 1449 Pls
2083 769 Pls
2106 685 Pls
2130 750 Pls
2153 600 Pls
2176 893 Pls
2200 1300 Pls
2223 1743 Pls
2246 755 Pls
2270 758 Pls
2293 696 Pls
2316 785 Pls
2340 637 Pls
2363 698 Pls
2387 742 Pls
2410 791 Pls
2433 805 Pls
2457 821 Pls
2480 829 Pls
2503 834 Pls
2527 835 Pls
2550 651 Pls
2573 723 Pls
2597 693 Pls
2620 745 Pls
2644 788 Pls
2667 804 Pls
2690 819 Pls
2714 824 Pls
2737 663 Pls
2760 635 Pls
2784 619 Pls
2807 1840 Pls
2830 698 Pls
2854 634 Pls
2877 634 Pls
2900 702 Pls
2924 690 Pls
2947 632 Pls
2971 762 Pls
2994 755 Pls
3017 799 Pls
3041 807 Pls
3064 813 Pls
3087 825 Pls
3111 618 Pls
3134 958 Pls
3157 822 Pls
3181 634 Pls
3204 632 Pls
3228 600 Pls
3251 675 Pls
3274 620 Pls
3298 620 Pls
3321 874 Pls
3344 1224 Pls
3368 1825 Pls
3391 637 Pls
3414 708 Pls
3438 737 Pls
3461 764 Pls
3484 728 Pls
3508 620 Pls
3531 600 Pls
3555 766 Pls
3578 733 Pls
3601 648 Pls
3625 783 Pls
3648 620 Pls
3671 671 Pls
3695 733 Pls
3718 796 Pls
3741 719 Pls
3765 688 Pls
3788 670 Pls
3812 826 Pls
3835 830 Pls
3858 690 Pls
3882 775 Pls
3905 620 Pls
3928 600 Pls
3952 600 Pls
3975 600 Pls
3998 746 Pls
4022 1095 Pls
4045 1569 Pls
4068 1953 Pls
4092 600 Pls
4115 657 Pls
4139 677 Pls
4162 681 Pls
4185 654 Pls
4209 690 Pls
4232 941 Pls
4255 741 Pls
4279 798 Pls
4302 760 Pls
4325 717 Pls
4349 690 Pls
4372 832 Pls
4396 838 Pls
4419 840 Pls
4442 839 Pls
4466 838 Pls
4489 843 Pls
4512 827 Pls
4536 801 Pls
4559 1381 Pls
4582 1955 Pls
4606 694 Pls
4629 677 Pls
4652 732 Pls
4676 800 Pls
4699 769 Pls
4723 801 Pls
4746 821 Pls
4769 655 Pls
4793 617 Pls
4816 651 Pls
4839 618 Pls
4863 874 Pls
4886 1427 Pls
4909 634 Pls
4933 600 Pls
4956 673 Pls
4980 707 Pls
5003 620 Pls
5026 750 Pls
5050 794 Pls
5073 814 Pls
5096 822 Pls
5120 829 Pls
5143 835 Pls
5166 685 Pls
5190 778 Pls
5213 740 Pls
5236 775 Pls
5260 802 Pls
5283 814 Pls
5307 818 Pls
5330 824 Pls
5353 827 Pls
5377 831 Pls
5400 833 Pls
5423 837 Pls
5447 837 Pls
5470 614 Pls
5493 630 Pls
5517 706 Pls
5540 678 Pls
5564 657 Pls
5587 651 Pls
5610 834 Pls
5634 836 Pls
5657 830 Pls
5680 804 Pls
5704 840 Pls
5727 844 Pls
5750 845 Pls
5774 842 Pls
5797 840 Pls
5820 828 Pls
5844 804 Pls
5867 780 Pls
5891 756 Pls
5914 732 Pls
5937 842 Pls
5961 844 Pls
5984 844 Pls
6007 843 Pls
6031 843 Pls
6054 844 Pls
6077 843 Pls
6101 844 Pls
6124 841 Pls
6148 842 Pls
6171 843 Pls
6194 844 Pls
6218 842 Pls
6241 844 Pls
6264 841 Pls
6288 843 Pls
6311 844 Pls
6334 843 Pls
6358 844 Pls
6381 832 Pls
6404 809 Pls
6428 786 Pls
6451 840 Pls
6475 840 Pls
6498 842 Pls
6521 843 Pls
6545 842 Pls
6568 843 Pls
6591 844 Pls
6615 844 Pls
6638 843 Pls
6661 841 Pls
6685 838 Pls
6708 841 Pls
6732 840 Pls
6755 841 Pls
6778 841 Pls
6802 842 Pls
6825 819 Pls
6848 796 Pls
6348 4077 Pls
1.000 UP
3.000 UL
LT2
0.00 0.00 1.00 C LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (NLLS)]
] -66.7 MRshow
LT2
0.00 0.00 1.00 C 6077 3877 M
543 0 V
1032 609 M
23 62 V
23 -37 V
24 145 V
23 25 V
23 6 V
24 17 V
23 3 V
24 2 V
23 -18 V
23 -8 V
24 -4 V
23 -31 V
23 -86 V
24 -65 V
23 17 V
23 -19 V
24 124 V
23 23 V
24 -13 V
23 42 V
23 22 V
24 -124 V
23 527 V
23 332 V
24 734 V
23 -650 V
23 -506 V
24 -106 V
23 -120 V
23 -123 V
24 21 V
23 -180 V
24 -21 V
23 128 V
23 -3 V
24 -29 V
23 -20 V
23 -7 V
24 -10 V
23 -5 V
23 182 V
24 2 V
23 -225 V
24 80 V
23 93 V
23 -165 V
24 111 V
23 -114 V
23 -18 V
24 17 V
23 0 V
23 138 V
24 3 V
23 -41 V
23 62 V
24 -130 V
23 231 V
24 -166 V
23 77 V
23 28 V
24 7 V
23 3 V
23 3 V
24 -1 V
23 -180 V
23 0 V
24 65 V
23 50 V
24 26 V
23 21 V
23 9 V
24 6 V
23 -54 V
23 13 V
24 7 V
23 -113 V
23 -22 V
24 -8 V
23 0 V
23 39 V
24 0 V
23 -90 V
24 181 V
23 -10 V
23 -25 V
24 -36 V
23 118 V
23 3 V
24 -231 V
23 51 V
23 -34 V
24 205 V
23 354 V
24 482 V
23 207 V
3274 639 L
24 -19 V
23 17 V
23 -37 V
24 18 V
23 37 V
23 -15 V
24 106 V
23 18 V
23 -36 V
24 -128 V
23 20 V
24 138 V
23 39 V
23 -149 V
24 37 V
23 703 V
23 80 V
24 -119 V
23 -337 V
23 237 V
24 -441 V
23 10 V
24 3 V
23 1 V
23 -145 V
24 92 V
23 205 V
23 -374 V
24 217 V
23 472 V
23 353 V
24 306 V
4045 618 L
23 494 V
24 571 V
4115 657 L
24 45 V
23 -21 V
23 13 V
24 -56 V
23 -21 V
23 98 V
24 78 V
23 16 V
23 17 V
24 1 V
23 5 V
24 5 V
23 3 V
23 -1 V
24 -22 V
23 -21 V
23 -24 V
24 -24 V
23 1273 V
23 476 V
24 124 V
4629 677 L
23 78 V
24 45 V
23 -25 V
24 -58 V
23 -31 V
23 1249 V
24 303 V
23 427 V
4839 618 L
24 421 V
23 546 V
23 244 V
4933 600 L
23 37 V
24 283 V
23 -281 V
23 102 V
24 49 V
23 24 V
23 8 V
24 3 V
23 10 V
23 -150 V
24 93 V
23 -38 V
23 22 V
24 40 V
23 12 V
24 7 V
23 5 V
23 8 V
24 3 V
23 2 V
23 2 V
24 1 V
23 -185 V
23 -27 V
24 139 V
23 40 V
24 1 V
23 19 V
23 3 V
24 4 V
23 0 V
23 -29 V
24 -21 V
23 -21 V
23 75 V
24 -26 V
23 -26 V
23 -27 V
24 -26 V
23 109 V
24 0 V
23 0 V
23 -3 V
24 -1 V
23 -25 V
23 27 V
24 0 V
23 3 V
23 -1 V
24 0 V
23 -2 V
24 2 V
23 0 V
23 -3 V
24 2 V
23 1 V
23 -1 V
24 0 V
23 1 V
23 -2 V
24 -1 V
23 -1 V
23 -1 V
24 6 V
23 -6 V
24 -8 V
23 11 V
23 0 V
24 3 V
23 -2 V
23 -1 V
24 2 V
23 -1 V
23 1 V
24 -1 V
23 1 V
24 -1 V
23 2 V
23 -4 V
24 2 V
23 -4 V
23 -26 V
1032 609 BoxF
1055 671 BoxF
1078 634 BoxF
1102 779 BoxF
1125 804 BoxF
1148 810 BoxF
1172 827 BoxF
1195 830 BoxF
1219 832 BoxF
1242 814 BoxF
1265 806 BoxF
1289 802 BoxF
1312 771 BoxF
1335 685 BoxF
1359 620 BoxF
1382 637 BoxF
1405 618 BoxF
1429 742 BoxF
1452 765 BoxF
1476 752 BoxF
1499 794 BoxF
1522 816 BoxF
1546 692 BoxF
1569 1219 BoxF
1592 1551 BoxF
1616 2285 BoxF
1639 1635 BoxF
1662 1129 BoxF
1686 1023 BoxF
1709 903 BoxF
1732 780 BoxF
1756 801 BoxF
1779 621 BoxF
1803 600 BoxF
1826 728 BoxF
1849 725 BoxF
1873 696 BoxF
1896 676 BoxF
1919 669 BoxF
1943 659 BoxF
1966 654 BoxF
1989 836 BoxF
2013 838 BoxF
2036 613 BoxF
2060 693 BoxF
2083 786 BoxF
2106 621 BoxF
2130 732 BoxF
2153 618 BoxF
2176 600 BoxF
2200 617 BoxF
2223 617 BoxF
2246 755 BoxF
2270 758 BoxF
2293 717 BoxF
2316 779 BoxF
2340 649 BoxF
2363 880 BoxF
2387 714 BoxF
2410 791 BoxF
2433 819 BoxF
2457 826 BoxF
2480 829 BoxF
2503 832 BoxF
2527 831 BoxF
2550 651 BoxF
2573 651 BoxF
2597 716 BoxF
2620 766 BoxF
2644 792 BoxF
2667 813 BoxF
2690 822 BoxF
2714 828 BoxF
2737 774 BoxF
2760 787 BoxF
2784 794 BoxF
2807 681 BoxF
2830 659 BoxF
2854 651 BoxF
2877 651 BoxF
2900 690 BoxF
2924 690 BoxF
2947 600 BoxF
2971 781 BoxF
2994 771 BoxF
3017 746 BoxF
3041 710 BoxF
3064 828 BoxF
3087 831 BoxF
3111 600 BoxF
3134 651 BoxF
3157 617 BoxF
3181 822 BoxF
3204 1176 BoxF
3228 1658 BoxF
3251 1865 BoxF
3274 639 BoxF
3298 620 BoxF
3321 637 BoxF
3344 600 BoxF
3368 618 BoxF
3391 655 BoxF
3414 640 BoxF
3438 746 BoxF
3461 764 BoxF
3484 728 BoxF
3508 600 BoxF
3531 620 BoxF
3555 758 BoxF
3578 797 BoxF
3601 648 BoxF
3625 685 BoxF
3648 1388 BoxF
3671 1468 BoxF
3695 1349 BoxF
3718 1012 BoxF
3741 1249 BoxF
3765 808 BoxF
3788 818 BoxF
3812 821 BoxF
3835 822 BoxF
3858 677 BoxF
3882 769 BoxF
3905 974 BoxF
3928 600 BoxF
3952 817 BoxF
3975 1289 BoxF
3998 1642 BoxF
4022 1948 BoxF
4045 618 BoxF
4068 1112 BoxF
4092 1683 BoxF
4115 657 BoxF
4139 702 BoxF
4162 681 BoxF
4185 694 BoxF
4209 638 BoxF
4232 617 BoxF
4255 715 BoxF
4279 793 BoxF
4302 809 BoxF
4325 826 BoxF
4349 827 BoxF
4372 832 BoxF
4396 837 BoxF
4419 840 BoxF
4442 839 BoxF
4466 817 BoxF
4489 796 BoxF
4512 772 BoxF
4536 748 BoxF
4559 2021 BoxF
4582 2497 BoxF
4606 2621 BoxF
4629 677 BoxF
4652 755 BoxF
4676 800 BoxF
4699 775 BoxF
4723 717 BoxF
4746 686 BoxF
4769 1935 BoxF
4793 2238 BoxF
4816 2665 BoxF
4839 618 BoxF
4863 1039 BoxF
4886 1585 BoxF
4909 1829 BoxF
4933 600 BoxF
4956 637 BoxF
4980 920 BoxF
5003 639 BoxF
5026 741 BoxF
5050 790 BoxF
5073 814 BoxF
5096 822 BoxF
5120 825 BoxF
5143 835 BoxF
5166 685 BoxF
5190 778 BoxF
5213 740 BoxF
5236 762 BoxF
5260 802 BoxF
5283 814 BoxF
5307 821 BoxF
5330 826 BoxF
5353 834 BoxF
5377 837 BoxF
5400 839 BoxF
5423 841 BoxF
5447 842 BoxF
5470 657 BoxF
5493 630 BoxF
5517 769 BoxF
5540 809 BoxF
5564 810 BoxF
5587 829 BoxF
5610 832 BoxF
5634 836 BoxF
5657 836 BoxF
5680 807 BoxF
5704 786 BoxF
5727 765 BoxF
5750 840 BoxF
5774 814 BoxF
5797 788 BoxF
5820 761 BoxF
5844 735 BoxF
5867 844 BoxF
5891 844 BoxF
5914 844 BoxF
5937 841 BoxF
5961 840 BoxF
5984 815 BoxF
6007 842 BoxF
6031 842 BoxF
6054 845 BoxF
6077 844 BoxF
6101 844 BoxF
6124 842 BoxF
6148 844 BoxF
6171 844 BoxF
6194 841 BoxF
6218 843 BoxF
6241 844 BoxF
6264 843 BoxF
6288 843 BoxF
6311 844 BoxF
6334 842 BoxF
6358 841 BoxF
6381 840 BoxF
6404 839 BoxF
6428 845 BoxF
6451 839 BoxF
6475 831 BoxF
6498 842 BoxF
6521 842 BoxF
6545 845 BoxF
6568 843 BoxF
6591 842 BoxF
6615 844 BoxF
6638 843 BoxF
6661 844 BoxF
6685 843 BoxF
6708 844 BoxF
6732 843 BoxF
6755 845 BoxF
6778 841 BoxF
6802 843 BoxF
6825 839 BoxF
6848 813 BoxF
6348 3877 BoxF
0.500 UL
LTb
1020 4440 N
0 -3840 V
5840 0 V
0 3840 V
-5840 0 V
Z stroke
1.000 UP
0.500 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
